From davidkamphausen at mail.berlios.de  Sun Jul  1 15:03:05 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 1 Jul 2007 15:03:05 +0200
Subject: [Antargis-svn] r1126 - in antargis/branches/rant: . build
	build/configs data/textures/terrain
Message-ID: <200707011303.l61D35tK030570@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-01 15:03:04 +0200 (Sun, 01 Jul 2007)
New Revision: 1126

Removed:
   antargis/branches/rant/data/textures/terrain/new3d.png.0
   antargis/branches/rant/data/textures/terrain/new3d.png.1
Modified:
   antargis/branches/rant/INSTALL
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/build/configure.rb
   antargis/branches/rant/configure
Log:
* improved build-process


Modified: antargis/branches/rant/INSTALL
===================================================================
--- antargis/branches/rant/INSTALL	2007-06-30 20:56:12 UTC (rev 1125)
+++ antargis/branches/rant/INSTALL	2007-07-01 13:03:04 UTC (rev 1126)
@@ -1,14 +1,16 @@
 INSTALLATION of Battles of Antargis
 ==========================================
 Quick Start:
-1) Install ruby, rant, libsdl, libsdl-image, libsdl-ttf, libsdl-mixer, opengl.
+1) Install ruby, libsdl, libsdl-image, libsdl-ttf, libsdl-mixer, opengl.
 	You need the developer-packages of all these libraries/programs!
+  If you want to do serious developing you should install rant, too!
 2) Don't forget to install ruby1.8-dev (or ruby1.9-dev if you use ruby 1.9)
 3) After this step no root-privileges are needed.
-4) Run "rant" in this directory
+4) If you have installed rant in step 1: Run "rant" in this directory
+   Otherwise: Run "ruby build.rb" in the current directory
 5) Run "./antargis" in this directory
 
-Essentials: Ruby, Rant
+Essentials: Ruby, (Rant)
 This game is mostly written in Ruby (www.ruby-lang.org) and C++. It uses Rant (Rant - Flexible, Ruby based make) as build system.
 
 Libraries: libSDL,libSDL_mixer libSDL_ttf, libSDL_image, opengl

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-06-30 20:56:12 UTC (rev 1125)
+++ antargis/branches/rant/Rantfile	2007-07-01 13:03:04 UTC (rev 1126)
@@ -1,5 +1,7 @@
-#import "md5"                          # md5 is needed for automatic checksum-check for changes in files
+#import "md5"                         # md5 is needed for automatic checksum-check for changes in files
 import "autoclean"                    # autoclean includes the a simple facility for a clean-make-target
+import "package/tgz"                  # support for packaging (tar.gz, zip)
+import "rubydoc"
 
 require 'build/base_tools.rb'
 
@@ -65,16 +67,8 @@
 
 
 
-###########################################
-# configure - clean-task
-gen AutoClean, :clean
-var[:clean].include "**/marker.i"   # not needed any more - managed by Rule
-var[:clean].include "ext/*.so"
-###########################################
+   
 
-
-    
-
 ###########################################
 # build libraries (without swig)
 #
@@ -188,5 +182,77 @@
 #
 ###########################################
 
+###########################################
+# make swig-sources
+#
+task :swigSources =>sourceDirs.collect{|d|d+Dir.separator+makeLibName(d)+"swig.cc"} do
+end
+#
+###########################################
 
+###########################################
+# make rant-stand-alone
+#
+task :rantStandAlone =>[] do |t|
+	`rant-import --auto build.rb`
+end
+#
+###########################################
 
+###########################################
+# build extensions
+#
+task :extensions=>allTargets do |t|
+end
+#
+###########################################
+
+
+###########################################
+# build source-distribution
+#
+task :dist=>[:swigSources,:rantStandAlone] do |t|
+end
+#
+###########################################
+
+###########################################
+# build source-distribution
+#
+binpkg=gen Package::Tgz, "packages","antargis-"+extendCommand($config,"system")+"-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => (sys["ext/*.so"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/)}
+
+task :bindist=>[:extensions,binpkg.path] do |t| #"packages/antargis-"+extendCommand($config,"version")+".tar.gz"] do |t|
+end
+#
+###########################################
+
+# # build documentation
+# task :doc do
+# 	puts "running doxygen"
+# 	`doxygen Doxyfile`
+# 	rubies=`find -name "*.rb"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}.join(" ")
+# 	readmes=`find -name "README"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}.join(" ")
+# 	headers=`find -name "*.h"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}.join(" ")
+# 	`rdoc -m README --op docs/ruby #{rubies} #{readmes}` # --exclude "(\\.cc|\\.c|skat|test\/|contrib)"`
+# end
+
+desc "Generate html documentation for c++-sources"
+task :doxygen=>[] do |t|
+			# run doxygen in here
+ 			`doxygen build/Doxyfile`
+ end
+desc "Generate html documentation."
+	gen RubyDoc do |t|
+			readmes=`find -name "README"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}
+			rubies=`find ruby -name "*.rb"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}
+			a=(readmes+rubies)
+			t.opts = %w(--title Battles\ of\ Antargis --main README )+a
+			t.dir = "docs/ruby"
+	end
+
+###########################################
+# configure - clean-task
+gen AutoClean, :clean
+var[:clean].include "**/marker.i"   # not needed any more - managed by Rule
+var[:clean].include "ext/*.so"
+###########################################

Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-06-30 20:56:12 UTC (rev 1125)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-01 13:03:04 UTC (rev 1126)
@@ -6,6 +6,7 @@
 # 
 
 $config={
+	"system"=>"unix",
 	"CXX"=>"$(g++)",
 	"CC"=>"$(gcc)",
 	"SWIG"=>"$(swig)",

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-06-30 20:56:12 UTC (rev 1125)
+++ antargis/branches/rant/build/configure.rb	2007-07-01 13:03:04 UTC (rev 1126)
@@ -17,8 +17,8 @@
 	@@config={}
 	@@checks=[]
 
-	def CFG.addOption(name,short,help,param=nil,&proc)
-		@@options.push({:name=>name,:short=>short,:help=>help,:proc=>proc,:param=>param})
+	def CFG.addOption(name,short,help,param=nil,default=nil,&proc)
+		@@options.push({:name=>name,:short=>short,:help=>help,:proc=>proc,:param=>param,:default=>default})
 	end
 	def CFG.options
 		@@options
@@ -72,8 +72,17 @@
 		}
 	end
 
+	def CFG.checkDefaults
+		@@options.each{|op|
+			if get(op[:name]).nil? and op[:default]
+				set(op[:name],op[:default])
+			end
+		}
+	end
+
 	def CFG.run
 		parseArgs
+		checkDefaults
 		ok=runChecks
 		saveConfig if ok
 	end
@@ -139,7 +148,7 @@
 			path=get(program)
 			path||=findProgram(program)
 			r=testProgram(path)
-			set (program,path) if r
+			set(program,path) if r
 			r
 		end
 	end

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-06-30 20:56:12 UTC (rev 1125)
+++ antargis/branches/rant/configure	2007-07-01 13:03:04 UTC (rev 1126)
@@ -2,6 +2,8 @@
 
 require 'build/configure.rb'
 
+version="0.2.1"
+
 puts <<EOT
 Battle of Antargis - Configuration
 -------------------------------------------------------------------------------
@@ -37,6 +39,11 @@
 		CFG.set("drmpass",v)
 	end
 
+CFG.addOption("version","v",
+	"set release version of BoA","version",version) do |v|
+		CFG.set("version",v)
+	end
+
 CFG.checkProgram("ccache")
 CFG.checkProgram("gcc")
 CFG.checkProgram("g++")

Deleted: antargis/branches/rant/data/textures/terrain/new3d.png.0
===================================================================
(Binary files differ)

Deleted: antargis/branches/rant/data/textures/terrain/new3d.png.1
===================================================================
(Binary files differ)



From davidkamphausen at mail.berlios.de  Sun Jul  1 16:45:29 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 1 Jul 2007 16:45:29 +0200
Subject: [Antargis-svn] r1127 - in antargis/branches/rant: . build
Message-ID: <200707011445.l61EjTDi005251@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-01 16:45:28 +0200 (Sun, 01 Jul 2007)
New Revision: 1127

Added:
   antargis/branches/rant/build/Doxyfile
Modified:
   antargis/branches/rant/Rantfile
Log:
* some mods


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-01 13:03:04 UTC (rev 1126)
+++ antargis/branches/rant/Rantfile	2007-07-01 14:45:28 UTC (rev 1127)
@@ -243,9 +243,10 @@
  end
 desc "Generate html documentation."
 	gen RubyDoc do |t|
-			readmes=`find -name "README"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}
-			rubies=`find ruby -name "*.rb"`.split("\n").select{|f|not (f=~/(contrib|skat|test)/)}
-			a=(readmes+rubies)
+			a=sys["**/README"]+sys["ruby/**/*.rb"]
+			#a=sys["**/README"]+sys["ext/*/*swig.{h,cc}"]+sys["ext/*/ag_application.h"]
+			#a=sys["**/README"]+sys["ext/basic/*swig.{h,cc}"]+sys["ext/basic/*.h"]
+puts a
 			t.opts = %w(--title Battles\ of\ Antargis --main README )+a
 			t.dir = "docs/ruby"
 	end

Added: antargis/branches/rant/build/Doxyfile
===================================================================
--- antargis/branches/rant/build/Doxyfile	2007-07-01 13:03:04 UTC (rev 1126)
+++ antargis/branches/rant/build/Doxyfile	2007-07-01 14:45:28 UTC (rev 1127)
@@ -0,0 +1,275 @@
+# Doxyfile 1.4.6
+
+#---------------------------------------------------------------------------
+# Project related configuration options
+#---------------------------------------------------------------------------
+PROJECT_NAME           = Antargis
+PROJECT_NUMBER         = 0.2.1
+#OUTPUT_DIRECTORY       = /home/david/projects/antargis/ant/docs/api/
+OUTPUT_DIRECTORY       = docs/api/
+CREATE_SUBDIRS         = NO
+OUTPUT_LANGUAGE        = English
+USE_WINDOWS_ENCODING   = NO
+BRIEF_MEMBER_DESC      = YES
+REPEAT_BRIEF           = YES
+ABBREVIATE_BRIEF       = "The $name class" \
+                         "The $name widget" \
+                         "The $name file" \
+                         is \
+                         provides \
+                         specifies \
+                         contains \
+                         represents \
+                         a \
+                         an \
+                         the
+ALWAYS_DETAILED_SEC    = NO
+INLINE_INHERITED_MEMB  = NO
+FULL_PATH_NAMES        = YES
+STRIP_FROM_PATH        = 
+STRIP_FROM_INC_PATH    = 
+SHORT_NAMES            = NO
+JAVADOC_AUTOBRIEF      = NO
+MULTILINE_CPP_IS_BRIEF = NO
+DETAILS_AT_TOP         = NO
+INHERIT_DOCS           = YES
+SEPARATE_MEMBER_PAGES  = NO
+TAB_SIZE               = 8
+ALIASES                = 
+OPTIMIZE_OUTPUT_FOR_C  = NO
+OPTIMIZE_OUTPUT_JAVA   = NO
+BUILTIN_STL_SUPPORT    = YES
+DISTRIBUTE_GROUP_DOC   = NO
+SUBGROUPING            = YES
+#---------------------------------------------------------------------------
+# Build related configuration options
+#---------------------------------------------------------------------------
+EXTRACT_ALL            = YES
+EXTRACT_PRIVATE        = NO
+EXTRACT_STATIC         = YES
+EXTRACT_LOCAL_CLASSES  = YES
+EXTRACT_LOCAL_METHODS  = YES
+HIDE_UNDOC_MEMBERS     = YES
+HIDE_UNDOC_CLASSES     = YES
+HIDE_FRIEND_COMPOUNDS  = NO
+HIDE_IN_BODY_DOCS      = NO
+INTERNAL_DOCS          = NO
+CASE_SENSE_NAMES       = YES
+HIDE_SCOPE_NAMES       = NO
+SHOW_INCLUDE_FILES     = YES
+INLINE_INFO            = YES
+SORT_MEMBER_DOCS       = YES
+SORT_BRIEF_DOCS        = NO
+SORT_BY_SCOPE_NAME     = NO
+GENERATE_TODOLIST      = YES
+GENERATE_TESTLIST      = YES
+GENERATE_BUGLIST       = YES
+GENERATE_DEPRECATEDLIST= YES
+ENABLED_SECTIONS       = 
+MAX_INITIALIZER_LINES  = 30
+SHOW_USED_FILES        = YES
+SHOW_DIRECTORIES       = NO
+FILE_VERSION_FILTER    = 
+#---------------------------------------------------------------------------
+# configuration options related to warning and progress messages
+#---------------------------------------------------------------------------
+QUIET                  = NO
+WARNINGS               = YES
+WARN_IF_UNDOCUMENTED   = YES
+WARN_IF_DOC_ERROR      = YES
+WARN_NO_PARAMDOC       = NO
+WARN_FORMAT            = "$file:$line: $text"
+WARN_LOGFILE           = 
+#---------------------------------------------------------------------------
+# configuration options related to the input files
+#---------------------------------------------------------------------------
+INPUT                  = ext ruby .
+#/home/david/projects/antargis/ant/src
+FILE_PATTERNS          = *.c \
+                         *.cc \
+                         *.cxx \
+                         *.cpp \
+                         *.c++ \
+                         *.d \
+                         *.java \
+                         *.ii \
+                         *.ixx \
+                         *.ipp \
+                         *.i++ \
+                         *.inl \
+                         *.h \
+                         *.hh \
+                         *.hxx \
+                         *.hpp \
+                         *.h++ \
+                         *.idl \
+                         *.odl \
+                         *.cs \
+                         *.php \
+                         *.php3 \
+                         *.inc \
+                         *.m \
+                         *.mm \
+                         *.dox \
+                         *.py \
+                         *.C \
+                         *.CC \
+                         *.C++ \
+                         *.II \
+                         *.I++ \
+                         *.H \
+                         *.HH \
+                         *.H++ \
+                         *.CS \
+                         *.PHP \
+                         *.PHP3 \
+                         *.M \
+                         *.MM \
+                         *.PY
+RECURSIVE              = YES
+EXCLUDE                = 
+EXCLUDE_SYMLINKS       = NO
+EXCLUDE_PATTERNS       = *swig.cc *swig.h *GLee.h *GLee.c *nantmarker.hh *marker.h
+EXAMPLE_PATH           = 
+EXAMPLE_PATTERNS       = *
+EXAMPLE_RECURSIVE      = NO
+IMAGE_PATH             = 
+INPUT_FILTER           = 
+FILTER_PATTERNS        = 
+FILTER_SOURCE_FILES    = NO
+#---------------------------------------------------------------------------
+# configuration options related to source browsing
+#---------------------------------------------------------------------------
+SOURCE_BROWSER         = NO
+INLINE_SOURCES         = NO
+STRIP_CODE_COMMENTS    = YES
+REFERENCED_BY_RELATION = NO
+REFERENCES_RELATION    = NO
+USE_HTAGS              = NO
+VERBATIM_HEADERS       = NO
+#---------------------------------------------------------------------------
+# configuration options related to the alphabetical class index
+#---------------------------------------------------------------------------
+ALPHABETICAL_INDEX     = NO
+COLS_IN_ALPHA_INDEX    = 5
+IGNORE_PREFIX          = 
+#---------------------------------------------------------------------------
+# configuration options related to the HTML output
+#---------------------------------------------------------------------------
+GENERATE_HTML          = YES
+HTML_OUTPUT            = html
+HTML_FILE_EXTENSION    = .html
+HTML_HEADER            = 
+HTML_FOOTER            = 
+HTML_STYLESHEET        = 
+HTML_ALIGN_MEMBERS     = YES
+GENERATE_HTMLHELP      = NO
+CHM_FILE               = 
+HHC_LOCATION           = 
+GENERATE_CHI           = NO
+BINARY_TOC             = NO
+TOC_EXPAND             = NO
+DISABLE_INDEX          = NO
+ENUM_VALUES_PER_LINE   = 4
+GENERATE_TREEVIEW      = NO
+TREEVIEW_WIDTH         = 250
+#---------------------------------------------------------------------------
+# configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+GENERATE_LATEX         = NO
+LATEX_OUTPUT           = latex
+LATEX_CMD_NAME         = latex
+MAKEINDEX_CMD_NAME     = makeindex
+COMPACT_LATEX          = NO
+PAPER_TYPE             = a4wide
+EXTRA_PACKAGES         = 
+LATEX_HEADER           = 
+PDF_HYPERLINKS         = NO
+USE_PDFLATEX           = NO
+LATEX_BATCHMODE        = NO
+LATEX_HIDE_INDICES     = NO
+#---------------------------------------------------------------------------
+# configuration options related to the RTF output
+#---------------------------------------------------------------------------
+GENERATE_RTF           = NO
+RTF_OUTPUT             = rtf
+COMPACT_RTF            = NO
+RTF_HYPERLINKS         = NO
+RTF_STYLESHEET_FILE    = 
+RTF_EXTENSIONS_FILE    = 
+#---------------------------------------------------------------------------
+# configuration options related to the man page output
+#---------------------------------------------------------------------------
+GENERATE_MAN           = YES
+MAN_OUTPUT             = man
+MAN_EXTENSION          = .3
+MAN_LINKS              = NO
+#---------------------------------------------------------------------------
+# configuration options related to the XML output
+#---------------------------------------------------------------------------
+GENERATE_XML           = NO
+XML_OUTPUT             = xml
+XML_SCHEMA             = 
+XML_DTD                = 
+XML_PROGRAMLISTING     = YES
+#---------------------------------------------------------------------------
+# configuration options for the AutoGen Definitions output
+#---------------------------------------------------------------------------
+GENERATE_AUTOGEN_DEF   = NO
+#---------------------------------------------------------------------------
+# configuration options related to the Perl module output
+#---------------------------------------------------------------------------
+GENERATE_PERLMOD       = NO
+PERLMOD_LATEX          = NO
+PERLMOD_PRETTY         = YES
+PERLMOD_MAKEVAR_PREFIX = 
+#---------------------------------------------------------------------------
+# Configuration options related to the preprocessor   
+#---------------------------------------------------------------------------
+ENABLE_PREPROCESSING   = YES
+MACRO_EXPANSION        = NO
+EXPAND_ONLY_PREDEF     = NO
+SEARCH_INCLUDES        = YES
+INCLUDE_PATH           = 
+INCLUDE_FILE_PATTERNS  = 
+PREDEFINED             = 
+EXPAND_AS_DEFINED      = 
+SKIP_FUNCTION_MACROS   = YES
+#---------------------------------------------------------------------------
+# Configuration::additions related to external references   
+#---------------------------------------------------------------------------
+TAGFILES               = 
+GENERATE_TAGFILE       = 
+ALLEXTERNALS           = NO
+EXTERNAL_GROUPS        = YES
+PERL_PATH              = /usr/bin/perl
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool   
+#---------------------------------------------------------------------------
+CLASS_DIAGRAMS         = YES
+HIDE_UNDOC_RELATIONS   = YES
+HAVE_DOT               = NO
+CLASS_GRAPH            = YES
+COLLABORATION_GRAPH    = YES
+GROUP_GRAPHS           = YES
+UML_LOOK               = NO
+TEMPLATE_RELATIONS     = NO
+INCLUDE_GRAPH          = YES
+INCLUDED_BY_GRAPH      = YES
+CALL_GRAPH             = NO
+GRAPHICAL_HIERARCHY    = YES
+DIRECTORY_GRAPH        = YES
+DOT_IMAGE_FORMAT       = png
+DOT_PATH               = 
+DOTFILE_DIRS           = 
+MAX_DOT_GRAPH_WIDTH    = 1024
+MAX_DOT_GRAPH_HEIGHT   = 1024
+MAX_DOT_GRAPH_DEPTH    = 1000
+DOT_TRANSPARENT        = NO
+DOT_MULTI_TARGETS      = NO
+GENERATE_LEGEND        = YES
+DOT_CLEANUP            = YES
+#---------------------------------------------------------------------------
+# Configuration::additions related to the search engine   
+#---------------------------------------------------------------------------
+SEARCHENGINE           = NO



From davidkamphausen at mail.berlios.de  Sun Jul  1 16:46:39 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 1 Jul 2007 16:46:39 +0200
Subject: [Antargis-svn] r1128 - antargis/branches/rant
Message-ID: <200707011446.l61Ekd4M005366@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-01 16:46:39 +0200 (Sun, 01 Jul 2007)
New Revision: 1128

Added:
   antargis/branches/rant/docs/
   antargis/branches/rant/packages/
Log:
* added missing dirs




From davidkamphausen at mail.berlios.de  Sun Jul  1 16:49:07 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 1 Jul 2007 16:49:07 +0200
Subject: [Antargis-svn] r1129 - antargis/branches/rant
Message-ID: <200707011449.l61En73B005578@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-01 16:49:07 +0200 (Sun, 01 Jul 2007)
New Revision: 1129

Modified:
   antargis/branches/rant/antargis
Log:
M    antargis


Modified: antargis/branches/rant/antargis
===================================================================
--- antargis/branches/rant/antargis	2007-07-01 14:46:39 UTC (rev 1128)
+++ antargis/branches/rant/antargis	2007-07-01 14:49:07 UTC (rev 1129)
@@ -1,3 +1,4 @@
 #!/bin/sh
 #echo $@
+test -e ext/antargisgame.so || echo "ERROR:Ruby extensions were not built yet! Please type this first:\n> ruby build.rb\nor\n> rant\nif the first one doesn't work."
 ruby run.rb $@>/tmp/ant-stdout.txt 2>/tmp/ant-stderr.txt



From davidkamphausen at mail.berlios.de  Sun Jul  1 16:53:59 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 1 Jul 2007 16:53:59 +0200
Subject: [Antargis-svn] r1130 - in antargis/branches/rant: . build
Message-ID: <200707011453.l61Erxj6005834@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-01 16:53:59 +0200 (Sun, 01 Jul 2007)
New Revision: 1130

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configure.rb
Log:
* some more infos on errors


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-01 14:49:07 UTC (rev 1129)
+++ antargis/branches/rant/Rantfile	2007-07-01 14:53:59 UTC (rev 1130)
@@ -5,6 +5,7 @@
 
 require 'build/base_tools.rb'
 
+puts "ERROR: Please run ./configure before building!" unless File.exists?("config.rb")
 require 'config.rb'                   # include build-options
     
 
@@ -244,9 +245,6 @@
 desc "Generate html documentation."
 	gen RubyDoc do |t|
 			a=sys["**/README"]+sys["ruby/**/*.rb"]
-			#a=sys["**/README"]+sys["ext/*/*swig.{h,cc}"]+sys["ext/*/ag_application.h"]
-			#a=sys["**/README"]+sys["ext/basic/*swig.{h,cc}"]+sys["ext/basic/*.h"]
-puts a
 			t.opts = %w(--title Battles\ of\ Antargis --main README )+a
 			t.dir = "docs/ruby"
 	end

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-07-01 14:49:07 UTC (rev 1129)
+++ antargis/branches/rant/build/configure.rb	2007-07-01 14:53:59 UTC (rev 1130)
@@ -118,7 +118,7 @@
 }
 EOT
 		f.close
-		puts File.open(configName).read
+		#puts File.open(configName).read
 	
 	end
 



From davidkamphausen at mail.berlios.de  Tue Jul  3 19:44:54 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 3 Jul 2007 19:44:54 +0200
Subject: [Antargis-svn] r1131 - in antargis/branches/rant: . build
	build/configs ext/basic
Message-ID: <200707031744.l63Hiskk031399@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-03 19:44:53 +0200 (Tue, 03 Jul 2007)
New Revision: 1131

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/base_tools.rb
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/build/configure.rb
   antargis/branches/rant/configure
   antargis/branches/rant/ext/basic/ag_fs.cc
   antargis/branches/rant/ext/basic/ag_messageobject.h
Log:
changes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/Rantfile	2007-07-03 17:44:53 UTC (rev 1131)
@@ -11,7 +11,7 @@
 
 
 # get library-dependencies for libSDL
-sdlLibs=[`sdl-config --libs`]
+sdlLibs=$config['LIBS'].split(" ")
 
 # configure source-directories.
 # DLLs will be build for each directory and in the given order.
@@ -22,8 +22,8 @@
 # NOTE: dependencies are not automatically inherited, you have to include them yourself!
 
 sourceDeps=[
-	["ext/external",["-lz"]],
-	["ext/basic",["ext/external"]+sdlLibs],
+	["ext/external",["-lz"]+sdlLibs],
+	["ext/basic",["ext/external","-lmsvcrt-ruby18","-lz"]+sdlLibs],
 	["ext/math",["ext/basic"]],
 	["ext/video",["ext/math","ext/basic","-lSDL_image","-lSDL_ttf","-lGL","-lGLU"]],
 	["ext/gui",["ext/basic","ext/math","ext/video"]],
@@ -35,9 +35,10 @@
 $sourceDeps=sourceDeps
 
 sourceDirs=sourceDeps.collect{|a|a[0]}    # collect dirs containing source (in the correct order !)
+
+externalIncludes=$config['CFLAGS']
+#externalIncludes+=`sdl-config --cflags`.gsub("\n","")
 
-externalIncludes=`sdl-config --cflags`.gsub("\n","")
-
 # sitearchdir - include in usr/local
 rubyIncDir=getConfig("archdir")
     
@@ -76,21 +77,37 @@
 sourceDeps.each{|pair|
 	dir,dep=pair                                                               # get directory and dependencies
 	target="ext"+Dir.separator+"lib"+makeLibName(dir)+".so"                    # make library name like "ext/libantargisgui.so"
-	tsources=Dir[dir+Dir.separator+"*.cc"].select{|f|not f=~/swig/}            # get all *.cc files (without the swig-generated file)
+	tsources=Dir[dir+"/*.cc"].select{|f|not f=~/swig/}            # get all *.cc files (without the swig-generated file)
 	tsources.collect!{|f|f.sub_ext("oo")}                                      # translate the .cc files to .oo
-	tsources+=Dir[dir+Dir.separator+"*.c"].collect!{|f|f.sub_ext("o")}         # add *.c files if there are any
-	extlibs=[]
+	tsources+=Dir[dir+"/*.c"].collect!{|f|f.sub_ext("o")}         # add *.c files if there are any
+	extlibs=[]
+    
+    puts "TARGET:",target
+    puts "TSOURCES:",tsources
+    
 	dep.each{|d|
 		if d[0..0]=="-"
 			extlibs << d                                                           # gather external libraries (-lz)
 		else
-			tsources+=["ext"+Dir.separator+"lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
+			tsources+=["ext"+Dir.separator+"lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
+            #tsources+=["-l"+makeLibName(d)]
 		end
 	}
 	task target => tsources do |t|
-		# build command
-		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (t.prerequisites.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
-		sys cmd
+		# build command
+        sources=t.prerequisites
+        if ENV['WINDIR']
+            puts "EXTLIBS #{extlibs}"
+            extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
+            puts "SOURCES #{sources}"
+            puts "EXTLIBS #{extlibs}"
+            sources=sources.select{|f|not f=~/\.so/}
+        end
+		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
+		sys cmd
+        if ENV['WINDIR']
+            sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
+        end
 	end
 }
 #

Modified: antargis/branches/rant/build/base_tools.rb
===================================================================
--- antargis/branches/rant/build/base_tools.rb	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/build/base_tools.rb	2007-07-03 17:44:53 UTC (rev 1131)
@@ -1,19 +1,16 @@
-require 'mkmf'                        # mkmf holds information about the compiler-settings while compiling ruby (by the maintainer)
+#require 'mkmf'                        # mkmf holds information about the compiler-settings while compiling ruby (by the maintainer)
+
+require 'build/platform.rb'
 
-class Dir
-	def Dir.separator
-		"/" # FIXME
-	end
-end
-
 def getDir(path)
 	# FIXME: check for windows
 	path.split(Dir.separator)[0..-2].join("/")
 end
 
 
-def makeLibName(dir)
-	"antargis"+dir.split(Dir.separator)[-1]
+def makeLibName(dir)
+    puts "makeLibName #{dir}"
+	"antargis"+dir.split("/")[-1]
 end
 
 # build a command out of templates in config.rb

Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-03 17:44:53 UTC (rev 1131)
@@ -13,8 +13,10 @@
 	"RUBY"=>"$(ruby)",
 	"CCACHE"=>"$(ccache)",
 
-	"LINK"=>"$(CXX)",
+	"LINK"=>"$(CXX)",
+    "LIBS"=>"",
 
+
   # call the compiler using the standard unix-style mechanism <CC> -c -o <outputname> <input0> [<input1> ...]
 	"COMPILE_PARAMS"=>" -c -o $(OUTPUT) $(INPUT)",
 	# an ansi-c compiler call with parameters (using ccache if available)

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/build/configure.rb	2007-07-03 17:44:53 UTC (rev 1131)
@@ -10,8 +10,9 @@
 # 5) include basic-configuration functionality with CFG.includeConfig - have a look at build/configs/unix.rb for more information on this
 # 6) run the configuration with CFG.run - a config.rb file will be written 
 ##
+
+require 'build/platform.rb'
 
-
 module CFG
 	@@options=[]
 	@@config={}
@@ -23,8 +24,8 @@
 	def CFG.options
 		@@options
 	end
-	def CFG.addCheck(name,&proc)
-		@@checks << {:name=>name,:proc=>proc}
+	def CFG.addCheck(name,needed=true,&proc)
+		@@checks << {:name=>name,:proc=>proc,:needed=>needed}
 	end
 
 	def CFG.call(name)
@@ -97,7 +98,7 @@
 			#ok=(not ok.nil?)
 			print " "*(40-text.length)
 			puts ({true=>"ok",false=>"failed"}[ok])
-			failed << c[:name] unless ok
+			failed << c[:name] unless ok or not c[:needed]
 		}
 		if failed.length>0
 			puts 
@@ -138,13 +139,13 @@
 		@@config[n]
 	end
 
-	def CFG.checkProgram(program)
+	def CFG.checkProgram(program,needed=true)
 		addOption("path-"+program,"",
 			"set path to program '#{program}' like this:\n --path-#{program}=/usr/local/bin/#{program}","path") do |d|
 				set(program,d)
 			end
 
-		addCheck ("program "+program) do ||
+		addCheck("program "+program,needed) do
 			path=get(program)
 			path||=findProgram(program)
 			r=testProgram(path)
@@ -152,9 +153,34 @@
 			r
 		end
 	end
+
+    def CFG.getPath
+        p=ENV['PATH']
+        psep={"/"=>":","\\"=>";"}[Dir.separator]
+        #puts p,p.class,psep
+        ps=p.split(psep)
+        #puts get("prefix")
+        ps << get("prefix")+Dir.separator+"bin" if get("prefix")
+        if Dir.separator=="\\"
+            ps << (Dir.pwd+"/build/win32/usr/bin").gsub("/",Dir.separator)
+        end
+        ps
+    end
 
-	def CFG.findProgram(program)
-		`whereis #{program}`.gsub(/[^:]*: */,"").split(" ")[0]
+	def CFG.findProgram(program)
+        #program+=".exe" if Dir.separator=="\\" and not program=~/\.\{exe|com|bat\}$/
+        paths=getPath
+        paths.each{|p|
+            currentPath=p+Dir.separator+program
+            puts "TST #{currentPath}"
+            if File.exists?(currentPath)
+                puts "FOUND! at #{currentPath}"
+                return currentPath
+            end
+        }
+        return findProgram(program+".exe") if Dir.separator=="\\" and not program=~/exe$/
+        return ""
+		#`whereis #{program}`.gsub(/[^:]*: */,"").split(" ")[0]
 	end
 
 	def CFG.testProgram(path)
@@ -163,7 +189,7 @@
 	end
 
 	def CFG.includeConfig
-		avail=["unix"]
+		avail=["unix","mingw32"]
 		addOption("base-config","",
 			"set base-config like "+avail.join(", "),"config") do |v|
 			set("base-config",v)

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/configure	2007-07-03 17:44:53 UTC (rev 1131)
@@ -44,11 +44,21 @@
 		CFG.set("version",v)
 	end
 
-CFG.checkProgram("ccache")
+CFG.checkProgram("ccache",false)
 CFG.checkProgram("gcc")
 CFG.checkProgram("g++")
 CFG.checkProgram("swig")
-CFG.checkProgram("ruby")
+CFG.checkProgram("ruby")
+CFG.checkProgram("sdl-config")
+
+CFG.addCheck("sdl-config --libs",false) do
+        libs=nil
+        begin
+            libs=`#{CFG.get("sdl-config")} --libs`
+        rescue
+        end
+        CFG.set("LIBS",libs) if libs        
+    end
 
 CFG.includeConfig
 

Modified: antargis/branches/rant/ext/basic/ag_fs.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_fs.cc	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/ext/basic/ag_fs.cc	2007-07-03 17:44:53 UTC (rev 1131)
@@ -374,7 +374,7 @@
 
 #define SHGFP_TYPE_CURRENT 0
 
-std::string getDocumentsDir()
+AGFilename getDocumentsDir()
 {
   CHAR wszPath[MAX_PATH];
   
@@ -382,7 +382,7 @@
 
   SHGetFolderPath( hWnd, CSIDL_PERSONAL, NULL, SHGFP_TYPE_CURRENT, wszPath );
 
-  std::string s(wszPath);
+  AGFilename s(wszPath);
 
   return s;
 

Modified: antargis/branches/rant/ext/basic/ag_messageobject.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-01 14:53:59 UTC (rev 1130)
+++ antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-03 17:44:53 UTC (rev 1131)
@@ -27,8 +27,9 @@
 #include <string>
 #include <set>
 
-#include "ag_geometry.h"
-#include "ag_rubyobj.h"
+//#include "ag_geometry.h"
+#include "ag_rubyobj.h"
+#include <ag_string.h>
 
 class AGListener;
 class AGSignal;



From davidkamphausen at mail.berlios.de  Tue Jul  3 19:46:20 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 3 Jul 2007 19:46:20 +0200
Subject: [Antargis-svn] r1132 - in antargis/branches/rant/build: . configs
	win32
Message-ID: <200707031746.l63HkKDw031501@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-03 19:46:20 +0200 (Tue, 03 Jul 2007)
New Revision: 1132

Added:
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/build/platform.rb
   antargis/branches/rant/build/win32/libs/
   antargis/branches/rant/build/win32/makeLibs.sh
Log:


Added: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-03 17:44:53 UTC (rev 1131)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-03 17:46:20 UTC (rev 1132)
@@ -0,0 +1,40 @@
+
+#
+# this is the reference implementation of a base-configuration file.
+# it's meant to configure all needed build-processes on a unix-os for BoA.
+# for other operation systems or compiler-systems please copy this file and
+# change the calls.
+# 
+
+$config={
+	"system"=>"unix",
+	"CXX"=>"$(g++)",
+	"CC"=>"$(gcc)",
+	"SWIG"=>"$(swig)",
+	"RUBY"=>"$(ruby)",
+	"CCACHE"=>"$(ccache)",
+    
+    "LIBS"=>"-lmingw32 -lSDLmain -lSDL -mwindows",
+    "LIBDIR"=>"-L#{Dir.pwd}/build/win32/usr/lib",
+
+	"LINK"=>"$(CXX)",
+    #"CFLAGS"=>"-D_GNU_SOURCE=1 -Dmain=SDL_main",
+    "CFLAGS"=>"-Dmain=SDL_main -IC:/antargis/rant/build/win32/usr/lib/ruby/1.8/i386-mingw32",
+
+  # call the compiler using the standard unix-style mechanism <CC> -c -o <outputname> <input0> [<input1> ...]
+	"COMPILE_PARAMS"=>" -c -o $(OUTPUT) $(INPUT) -I#{Dir.pwd}/build/win32/usr/include",
+	# an ansi-c compiler call with parameters (using ccache if available)
+	"CC_CALL"=>"$(CCACHE) $(CC) $(COMPILE_PARAMS)",
+	# a c++ compiler call with parameters (using ccache if available)
+	"CXX_CALL"=>"$(CCACHE) $(CXX) $(COMPILE_PARAMS)",
+	# build a shared library (.so or .dll)
+	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	# generate c++-code from a swig-interface file
+	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) $(INPUT)",
+	# generate dependencies for swig-interface files
+	"SWIGDEPS"=>"$(SWIG) -ruby -c++ -M $(INPUT)",
+
+	# generate a swig-interface-file from the c++-sources and some other pre-defined interface-files (.i)
+	# go to build/*.i or ext/*/*.i for more information
+	"CREATEINTERFACE"=>"$(RUBY) build/create_interface.rb -d=$(OUTPUT) -i=$(INPUT)"
+}

Added: antargis/branches/rant/build/platform.rb
===================================================================
--- antargis/branches/rant/build/platform.rb	2007-07-03 17:44:53 UTC (rev 1131)
+++ antargis/branches/rant/build/platform.rb	2007-07-03 17:46:20 UTC (rev 1132)
@@ -0,0 +1,14 @@
+class Dir
+    @@dirSep="/"    
+    @@dirSep="\\" if ENV['WINDIR']
+	def Dir.separator
+		@@dirSep
+	end
+end
+
+if ENV['WINDIR']
+    CONFIG={"archdir"=>Dir.pwd+"/build/win32/usr/lib"}
+    
+else
+    require 'mkmf'
+end
\ No newline at end of file

Added: antargis/branches/rant/build/win32/makeLibs.sh
===================================================================
--- antargis/branches/rant/build/win32/makeLibs.sh	2007-07-03 17:44:53 UTC (rev 1131)
+++ antargis/branches/rant/build/win32/makeLibs.sh	2007-07-03 17:46:20 UTC (rev 1132)
@@ -0,0 +1,88 @@
+#!/bin/bash
+
+#prepare()
+#{
+
+mkdir -p usr
+mkdir -p usr/bin
+mkdir -p usr/include
+mkdir -p usr/lib
+
+mkdir tmp
+
+# unzip zip-files
+for a in libs/*.zip ; {
+    cd tmp
+	unzip -qou ../${a}
+    cd ..
+}
+
+# extract tar.gz-files
+for a in libs/*.gz ; {
+    cd tmp
+	tar xfz ../${a}
+    cd ..
+}
+
+for a in `find -name "*.dll" ` ; {
+    cp $a usr/bin 2>/dev/null
+}
+
+for a in `find -name "SDL*.h" ` ; {
+    cp $a usr/include 2>/dev/null
+}
+
+for a in begin_code.h close_code.h zlib.h zconf.h ; {
+    cp `find -name $a` usr/include
+}
+
+
+for a in `find -name "*.a" ` ; {
+    cp $a usr/lib 2>/dev/null
+}
+
+for a in `find -name "*.lib" ` ; {
+    cp $a usr/lib 2>/dev/null
+}
+for a in usr/lib/*.lib ; {
+    cp $a `dirname $a``basename "$a"|sed -e "s/\.lib$/\.dll\.a/"`
+}
+for a in usr/lib/*.dll.a ; {
+    cp $a `dirname $a``basename "$a"|sed -e "s/^/lib/"`
+}
+
+for a in `find -name "*.exe";find -name "*-config"` ; {
+    cp $a usr/bin 2>/dev/null
+}
+
+mv usr/bin/i386-mingw32msvc-sdl-config usr/bin/sdl-config
+
+#}
+dir=$(pwd)
+
+
+
+
+# build ruby
+cd tmp
+tar xfz ../libs/ruby-1.8.6.tar.gz
+cd ruby-1.8.6
+        ./configure --prefix=/usr --enable-debug
+####                # patch fake.rb
+#####                cat fake.rb |sed -e "s/\"\\\\\";/\"\\\\\"\";/">fake.tmp
+#####                mv fake.tmp fake.rb
+                make
+    export DESTDIR=../../
+                make install
+    export DESTDIR=""
+cd ..
+
+# install rant
+tar xfz ../libs/rant-0.5.8.tar.gz
+cd rant-0.5.8
+../../usr/bin/ruby.exe install.rb
+
+
+cd ..
+cd ..
+



From davidkamphausen at mail.berlios.de  Tue Jul  3 19:49:32 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 3 Jul 2007 19:49:32 +0200
Subject: [Antargis-svn] r1133 - antargis/branches/rant/build/win32
Message-ID: <200707031749.l63HnWJQ031747@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-03 19:49:32 +0200 (Tue, 03 Jul 2007)
New Revision: 1133

Modified:
   antargis/branches/rant/build/win32/
Log:



Property changes on: antargis/branches/rant/build/win32
___________________________________________________________________
Name: svn:ignore
   + usr
tmp




From davidkamphausen at mail.berlios.de  Tue Jul  3 19:51:58 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 3 Jul 2007 19:51:58 +0200
Subject: [Antargis-svn] r1134 - antargis/branches/rant/ext
Message-ID: <200707031751.l63Hpw5i032063@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-03 19:51:58 +0200 (Tue, 03 Jul 2007)
New Revision: 1134

Modified:
   antargis/branches/rant/ext/
Log:
modified ignore list


Property changes on: antargis/branches/rant/ext
___________________________________________________________________
Name: svn:ignore
   - *.so

   + *.so
*.a




From davidkamphausen at mail.berlios.de  Tue Jul  3 20:55:55 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 3 Jul 2007 20:55:55 +0200
Subject: [Antargis-svn] r1135 - in antargis/branches/rant: . build/configs
	build/win32 ext/basic ext/external
Message-ID: <200707031855.l63Itt2X003812@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-03 20:55:52 +0200 (Tue, 03 Jul 2007)
New Revision: 1135

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/build/win32/makeLibs.sh
   antargis/branches/rant/ext/basic/ag_main.h
   antargis/branches/rant/ext/basic/ag_messageobject.cc
   antargis/branches/rant/ext/basic/ag_messageobject.h
   antargis/branches/rant/ext/basic/ag_rand_base.h
   antargis/branches/rant/ext/basic/ag_serial.h
   antargis/branches/rant/ext/basic/ag_string.h
   antargis/branches/rant/ext/basic/ag_stringstream.h
   antargis/branches/rant/ext/basic/ag_video_base.h
   antargis/branches/rant/ext/basic/ag_xml.h
   antargis/branches/rant/ext/external/mtwist.h
Log:
many fixes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/Rantfile	2007-07-03 18:55:52 UTC (rev 1135)
@@ -24,8 +24,8 @@
 sourceDeps=[
 	["ext/external",["-lz"]+sdlLibs],
 	["ext/basic",["ext/external","-lmsvcrt-ruby18","-lz"]+sdlLibs],
-	["ext/math",["ext/basic"]],
-	["ext/video",["ext/math","ext/basic","-lSDL_image","-lSDL_ttf","-lGL","-lGLU"]],
+	["ext/math",["ext/external","ext/basic"]],
+	["ext/video",["ext/external","ext/basic","ext/math","-lSDL_image","-lSDL_ttf"]+$config["LIBGL"].split(" ")+sdlLibs],
 	["ext/gui",["ext/basic","ext/math","ext/video"]],
 	["ext/sound",["ext/basic","-lSDL_mixer"]],
 	["ext/3dengine",["ext/basic"]],

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-03 18:55:52 UTC (rev 1135)
@@ -16,7 +16,7 @@
     
     "LIBS"=>"-lmingw32 -lSDLmain -lSDL -mwindows",
     "LIBDIR"=>"-L#{Dir.pwd}/build/win32/usr/lib",
-
+    "LIBGL"=>"-lopengl32 -lglu32",
 	"LINK"=>"$(CXX)",
     #"CFLAGS"=>"-D_GNU_SOURCE=1 -Dmain=SDL_main",
     "CFLAGS"=>"-Dmain=SDL_main -IC:/antargis/rant/build/win32/usr/lib/ruby/1.8/i386-mingw32",

Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-03 18:55:52 UTC (rev 1135)
@@ -16,7 +16,7 @@
 	"LINK"=>"$(CXX)",
     "LIBS"=>"",
 
-
+    "LIBGL"=>"-lGL -lGLU",
   # call the compiler using the standard unix-style mechanism <CC> -c -o <outputname> <input0> [<input1> ...]
 	"COMPILE_PARAMS"=>" -c -o $(OUTPUT) $(INPUT)",
 	# an ansi-c compiler call with parameters (using ccache if available)

Modified: antargis/branches/rant/build/win32/makeLibs.sh
===================================================================
--- antargis/branches/rant/build/win32/makeLibs.sh	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/build/win32/makeLibs.sh	2007-07-03 18:55:52 UTC (rev 1135)
@@ -32,7 +32,7 @@
     cp $a usr/include 2>/dev/null
 }
 
-for a in begin_code.h close_code.h zlib.h zconf.h ; {
+for a in begin_code.h close_code.h zlib.h zconf.h png.h pngconf.h; {
     cp `find -name $a` usr/include
 }
 

Modified: antargis/branches/rant/ext/basic/ag_main.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_main.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_main.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -55,7 +55,7 @@
   virtual void call();
 };
 
-class AGMain:public AGRubyObject
+class AGEXPORT AGMain:public AGRubyObject
 {
  public:
   AGMain();
@@ -89,7 +89,7 @@
 };
 
 bool hasMain();
-AGMain *getMain();
+AGEXPORT AGMain *getMain();
 
 bool hasQuit();
 

Modified: antargis/branches/rant/ext/basic/ag_messageobject.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_messageobject.cc	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_messageobject.cc	2007-07-03 18:55:52 UTC (rev 1135)
@@ -90,14 +90,14 @@
   AGVector2 p;
   switch(mEvent.type) {
   case SDL_MOUSEMOTION:
-    p[0]=mEvent.motion.x*getVideo()->width()/getVideo()->realWidth();
-    p[1]=mEvent.motion.y*getVideo()->height()/getVideo()->realHeight();
+    p[0]=mEvent.motion.x*getMain()->getVideo()->width()/getMain()->getVideo()->realWidth();
+    p[1]=mEvent.motion.y*getMain()->getVideo()->height()/getMain()->getVideo()->realHeight();
     break;
     
   case SDL_MOUSEBUTTONUP:
   case SDL_MOUSEBUTTONDOWN:
-    p[0]=mEvent.button.x*getVideo()->width()/getVideo()->realWidth();
-    p[1]=mEvent.button.y*getVideo()->height()/getVideo()->realHeight();
+    p[0]=mEvent.button.x*getMain()->getVideo()->width()/getMain()->getVideo()->realWidth();
+    p[1]=mEvent.button.y*getMain()->getVideo()->height()/getMain()->getVideo()->realHeight();
     break;
     
   }

Modified: antargis/branches/rant/ext/basic/ag_messageobject.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -27,7 +27,7 @@
 #include <string>
 #include <set>
 
-//#include "ag_geometry.h"
+#include "ag_geometry.h"
 #include "ag_rubyobj.h"
 #include <ag_string.h>
 

Modified: antargis/branches/rant/ext/basic/ag_rand_base.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_rand_base.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_rand_base.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -5,7 +5,7 @@
 
 #include <ag_rubyobj.h>
 
-class AGRandomizerBase:public AGRubyObject
+class AGEXPORT AGRandomizerBase:public AGRubyObject
 {
  public:
 #ifdef SWIG

Modified: antargis/branches/rant/ext/basic/ag_serial.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_serial.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_serial.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -11,7 +11,7 @@
 {
 };
 
-class BinaryIn
+class AGEXPORT BinaryIn
 {
  public:
   BinaryIn();
@@ -26,7 +26,7 @@
   BinaryIn &operator>>(float &f);
 };
 
-class BinaryOut
+class AGEXPORT BinaryOut
 {
  public:
   BinaryOut();
@@ -39,7 +39,7 @@
   BinaryOut &operator<<(const float &f);
 };
 
-class BinaryFileIn:public BinaryIn
+class AGEXPORT BinaryFileIn:public BinaryIn
 {
  public:
   BinaryFileIn(const std::string &pName);
@@ -57,7 +57,7 @@
   size_t size;
 };
 
-class BinaryFileOut:public BinaryOut
+class AGEXPORT BinaryFileOut:public BinaryOut
 {
  public:
   BinaryFileOut(const std::string &pName);
@@ -74,7 +74,7 @@
   size_t p;
 };
 
-class BinaryStringIn:public BinaryIn
+class AGEXPORT BinaryStringIn:public BinaryIn
 {
  public:
   BinaryStringIn(const std::string &pText);
@@ -85,7 +85,7 @@
   std::istringstream is;
 };
 
-class BinaryStringOut:public BinaryOut
+class AGEXPORT BinaryStringOut:public BinaryOut
 {
  public:
   BinaryStringOut();

Modified: antargis/branches/rant/ext/basic/ag_string.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_string.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_string.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -1,13 +1,14 @@
 #ifndef AG_STRING
 #define AG_STRING
-
+
+#include <ag_base.h>
 #include <string>
 #include <vector>
 #include <SDL.h>
 
 
 /** A string class that natively supports UTF-8 */
-class AGString:public std::string
+class AGEXPORT AGString:public std::string
 {
  public:
   static const size_t npos = static_cast<size_t>(-1);

Modified: antargis/branches/rant/ext/basic/ag_stringstream.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_stringstream.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_stringstream.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -11,7 +11,7 @@
 /// possible seperators are:
 ///  ' '    ','    '_'  ';' '\n'
 /// the standard behaviour on blanks and newlines is to eat them
-class AGStringStream
+class AGEXPORT AGStringStream
 {
  public:
   AGStringStream(const AGString &buffer="");

Modified: antargis/branches/rant/ext/basic/ag_video_base.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -7,6 +7,12 @@
 
 class AGVideoBase:public AGSingleton
 {
+public:
+  virtual int width() const;
+  virtual int height() const;
+
+  virtual int realWidth() const;
+  virtual int realHeight() const;
 
 };
 

Modified: antargis/branches/rant/ext/basic/ag_xml.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_xml.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/basic/ag_xml.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -32,7 +32,7 @@
 
 #include "ag_debug.h"
 
-class Node
+class AGEXPORT Node
   {
   public:
     typedef std::map<AGString,AGString> Attributes;

Modified: antargis/branches/rant/ext/external/mtwist.h
===================================================================
--- antargis/branches/rant/ext/external/mtwist.h	2007-07-03 17:51:58 UTC (rev 1134)
+++ antargis/branches/rant/ext/external/mtwist.h	2007-07-03 18:55:52 UTC (rev 1135)
@@ -1,5 +1,7 @@
 #ifndef MTWIST_H
-#define MTWIST_H
+#define MTWIST_H
+
+#include <ag_base.h>
 
 /*
  * $Id: mtwist.h,v 1.15 2003/09/11 23:56:20 geoff Exp geoff $
@@ -193,8 +195,12 @@
 					/* ..the entire state from there. */
 					/* ..If /dev/random is unavailable, */
 					/* ..falls back to mt_goodseed().  */
-					/* ..Not usually worth the cost.  */
-extern void		mts_refresh(mt_state* state);
+					/* ..Not usually worth the cost.  */
+                    
+                    
+// was extern                    
+                    
+AGEXPORT void		mts_refresh(mt_state* state);
 					/* Generate 624 more random values */
 extern int		mts_savestate(FILE* statefile, mt_state* state);
 					/* Save state to a file (ASCII). */
@@ -331,8 +337,21 @@
 	while (0)
 
 extern mt_state		mt_default_state;
-					/* State of the default generator */
-extern double		mt_32_to_double;
+
+/* State of the default generator */
+#ifdef __cplusplus
+extern "C" {
+    #ifdef WIN32
+__declspec(dllimport)
+#endif
+    extern double		mt_32_to_double;
+}
+    #else
+#ifdef WIN32
+__declspec(dllexport) 
+#endif
+extern   double		mt_32_to_double;
+#endif
 					/* Multiplier to convert long to dbl */
 extern double		mt_64_to_double;
 					/* Mult'r to cvt long long to dbl */



From davidkamphausen at mail.berlios.de  Wed Jul  4 20:33:59 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 4 Jul 2007 20:33:59 +0200
Subject: [Antargis-svn] r1136 - in antargis/branches/rant: . build/configs
Message-ID: <200707041833.l64IXxJW027822@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-04 20:33:59 +0200 (Wed, 04 Jul 2007)
New Revision: 1136

Modified:
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/configure
Log:
* small fix for unix


Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-07-03 18:55:52 UTC (rev 1135)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-04 18:33:59 UTC (rev 1136)
@@ -13,9 +13,9 @@
 	"RUBY"=>"$(ruby)",
 	"CCACHE"=>"$(ccache)",
 
-	"LINK"=>"$(CXX)",
-    "LIBS"=>"",
-
+	"LINK"=>"$(CXX)",
+  "LIBS"=>"",
+	"INCLUDES"=>"",
     "LIBGL"=>"-lGL -lGLU",
   # call the compiler using the standard unix-style mechanism <CC> -c -o <outputname> <input0> [<input1> ...]
 	"COMPILE_PARAMS"=>" -c -o $(OUTPUT) $(INPUT)",

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-03 18:55:52 UTC (rev 1135)
+++ antargis/branches/rant/configure	2007-07-04 18:33:59 UTC (rev 1136)
@@ -48,18 +48,27 @@
 CFG.checkProgram("gcc")
 CFG.checkProgram("g++")
 CFG.checkProgram("swig")
-CFG.checkProgram("ruby")
-CFG.checkProgram("sdl-config")
-
-CFG.addCheck("sdl-config --libs",false) do
-        libs=nil
-        begin
-            libs=`#{CFG.get("sdl-config")} --libs`
-        rescue
-        end
-        CFG.set("LIBS",libs) if libs        
-    end
+CFG.checkProgram("ruby")
+CFG.checkProgram("sdl-config")
 
+CFG.addCheck("sdl-config --libs",false) do
+        libs=nil
+        begin
+            libs=`#{CFG.get("sdl-config")} --libs`.gsub("\n","")
+        rescue
+        end
+        CFG.set("LIBS",libs) if libs        
+    end
+
+CFG.addCheck("sdl-config --cflags",false) do
+        libs=nil
+        begin
+            libs=`#{CFG.get("sdl-config")} --cflags`.gsub("\n","")
+        rescue
+        end
+        CFG.set("CFLAGS",libs) if libs        
+    end
+
 CFG.includeConfig
 
 



From davidkamphausen at mail.berlios.de  Wed Jul  4 20:46:00 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 4 Jul 2007 20:46:00 +0200
Subject: [Antargis-svn] r1137 - in antargis/branches/rant: . build
	build/configs ext/math ext/video
Message-ID: <200707041846.l64Ik0EA028706@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-04 20:45:59 +0200 (Wed, 04 Jul 2007)
New Revision: 1137

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/build/configure.rb
   antargis/branches/rant/ext/math/headers.hh
   antargis/branches/rant/ext/video/headers.hh
Log:
* some more changes for unix


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/Rantfile	2007-07-04 18:45:59 UTC (rev 1137)
@@ -23,7 +23,7 @@
 
 sourceDeps=[
 	["ext/external",["-lz"]+sdlLibs],
-	["ext/basic",["ext/external","-lmsvcrt-ruby18","-lz"]+sdlLibs],
+	["ext/basic",["ext/external","-l"+$config['RUBYLIB'],"-lz"]+sdlLibs],
 	["ext/math",["ext/external","ext/basic"]],
 	["ext/video",["ext/external","ext/basic","ext/math","-lSDL_image","-lSDL_ttf"]+$config["LIBGL"].split(" ")+sdlLibs],
 	["ext/gui",["ext/basic","ext/math","ext/video"]],
@@ -35,7 +35,7 @@
 $sourceDeps=sourceDeps
 
 sourceDirs=sourceDeps.collect{|a|a[0]}    # collect dirs containing source (in the correct order !)
-
+
 externalIncludes=$config['CFLAGS']
 #externalIncludes+=`sdl-config --cflags`.gsub("\n","")
 
@@ -80,33 +80,33 @@
 	tsources=Dir[dir+"/*.cc"].select{|f|not f=~/swig/}            # get all *.cc files (without the swig-generated file)
 	tsources.collect!{|f|f.sub_ext("oo")}                                      # translate the .cc files to .oo
 	tsources+=Dir[dir+"/*.c"].collect!{|f|f.sub_ext("o")}         # add *.c files if there are any
-	extlibs=[]
-    
-    puts "TARGET:",target
-    puts "TSOURCES:",tsources
+	extlibs=[]
     
+    puts "TARGET:",target
+    puts "TSOURCES:",tsources
+    
 	dep.each{|d|
 		if d[0..0]=="-"
 			extlibs << d                                                           # gather external libraries (-lz)
 		else
-			tsources+=["ext"+Dir.separator+"lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
+			tsources+=["ext"+Dir.separator+"lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
             #tsources+=["-l"+makeLibName(d)]
 		end
 	}
 	task target => tsources do |t|
-		# build command
-        sources=t.prerequisites
-        if ENV['WINDIR']
-            puts "EXTLIBS #{extlibs}"
-            extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
-            puts "SOURCES #{sources}"
-            puts "EXTLIBS #{extlibs}"
-            sources=sources.select{|f|not f=~/\.so/}
+		# build command
+        sources=t.prerequisites
+        if ENV['WINDIR']
+            puts "EXTLIBS #{extlibs}"
+            extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
+            puts "SOURCES #{sources}"
+            puts "EXTLIBS #{extlibs}"
+            sources=sources.select{|f|not f=~/\.so/}
         end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
-		sys cmd
-        if ENV['WINDIR']
-            sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
+		sys cmd
+        if ENV['WINDIR']
+            sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
         end
 	end
 }

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-04 18:45:59 UTC (rev 1137)
@@ -13,7 +13,8 @@
 	"SWIG"=>"$(swig)",
 	"RUBY"=>"$(ruby)",
 	"CCACHE"=>"$(ccache)",
-    
+
+	"RUBYLIB"=>"msvcrt-ruby18",
     "LIBS"=>"-lmingw32 -lSDLmain -lSDL -mwindows",
     "LIBDIR"=>"-L#{Dir.pwd}/build/win32/usr/lib",
     "LIBGL"=>"-lopengl32 -lglu32",

Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-04 18:45:59 UTC (rev 1137)
@@ -15,6 +15,7 @@
 
 	"LINK"=>"$(CXX)",
   "LIBS"=>"",
+	"RUBYLIB"=>"ruby1.8",
 	"INCLUDES"=>"",
     "LIBGL"=>"-lGL -lGLU",
   # call the compiler using the standard unix-style mechanism <CC> -c -o <outputname> <input0> [<input1> ...]

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/build/configure.rb	2007-07-04 18:45:59 UTC (rev 1137)
@@ -10,9 +10,9 @@
 # 5) include basic-configuration functionality with CFG.includeConfig - have a look at build/configs/unix.rb for more information on this
 # 6) run the configuration with CFG.run - a config.rb file will be written 
 ##
-
-require 'build/platform.rb'
 
+require 'build/platform.rb'
+
 module CFG
 	@@options=[]
 	@@config={}
@@ -153,32 +153,32 @@
 			r
 		end
 	end
-
-    def CFG.getPath
-        p=ENV['PATH']
-        psep={"/"=>":","\\"=>";"}[Dir.separator]
-        #puts p,p.class,psep
-        ps=p.split(psep)
-        #puts get("prefix")
-        ps << get("prefix")+Dir.separator+"bin" if get("prefix")
-        if Dir.separator=="\\"
-            ps << (Dir.pwd+"/build/win32/usr/bin").gsub("/",Dir.separator)
-        end
-        ps
-    end
 
-	def CFG.findProgram(program)
-        #program+=".exe" if Dir.separator=="\\" and not program=~/\.\{exe|com|bat\}$/
-        paths=getPath
-        paths.each{|p|
-            currentPath=p+Dir.separator+program
-            puts "TST #{currentPath}"
-            if File.exists?(currentPath)
-                puts "FOUND! at #{currentPath}"
-                return currentPath
-            end
-        }
-        return findProgram(program+".exe") if Dir.separator=="\\" and not program=~/exe$/
+    def CFG.getPath
+        p=ENV['PATH']
+        psep={"/"=>":","\\"=>";"}[Dir.separator]
+        #puts p,p.class,psep
+        ps=p.split(psep)
+        #puts get("prefix")
+        ps << get("prefix")+Dir.separator+"bin" if get("prefix")
+        if Dir.separator=="\\"
+            ps << (Dir.pwd+"/build/win32/usr/bin").gsub("/",Dir.separator)
+        end
+        ps
+    end
+
+	def CFG.findProgram(program)
+        #program+=".exe" if Dir.separator=="\\" and not program=~/\.\{exe|com|bat\}$/
+        paths=getPath
+        paths.each{|p|
+            currentPath=p+Dir.separator+program
+            puts "TST #{currentPath}"
+            if File.exists?(currentPath)
+                puts "FOUND! at #{currentPath}"
+                return currentPath
+            end
+        }
+        return findProgram(program+".exe") if Dir.separator=="\\" and not program=~/exe$/
         return ""
 		#`whereis #{program}`.gsub(/[^:]*: */,"").split(" ")[0]
 	end
@@ -204,7 +204,14 @@
 		end
 	end
 
+	def CFG.checkCompile
+		
+	end
 
+	def CFG.checkLibrary(libname)
+	end
+
+
 	addOption("help","h",
 		"display help text") do
 			CFG.options.each{|op|

Modified: antargis/branches/rant/ext/math/headers.hh
===================================================================
--- antargis/branches/rant/ext/math/headers.hh	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/ext/math/headers.hh	2007-07-04 18:45:59 UTC (rev 1137)
@@ -1,5 +1,11 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/external/mtwist.h"
+#include "ext/external/randistrs.h"
+#include "ext/external/sge_config.h"
+#include "ext/external/sge_internal.h"
+#include "ext/external/sge_primitives.h"
+#include "ext/external/sge_surface.h"
 #include "ext/basic/ag_base.h"
 #include "ext/basic/ag_collector.h"
 #include "ext/basic/ag_config.h"

Modified: antargis/branches/rant/ext/video/headers.hh
===================================================================
--- antargis/branches/rant/ext/video/headers.hh	2007-07-04 18:33:59 UTC (rev 1136)
+++ antargis/branches/rant/ext/video/headers.hh	2007-07-04 18:45:59 UTC (rev 1137)
@@ -1,11 +1,11 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
-#include "ext/math/ag_gauss.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ag_serial_vec.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
+#include "ext/external/mtwist.h"
+#include "ext/external/randistrs.h"
+#include "ext/external/sge_config.h"
+#include "ext/external/sge_internal.h"
+#include "ext/external/sge_primitives.h"
+#include "ext/external/sge_surface.h"
 #include "ext/basic/ag_base.h"
 #include "ext/basic/ag_collector.h"
 #include "ext/basic/ag_config.h"
@@ -30,6 +30,12 @@
 #include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_messageobject.h"
 #include "ext/basic/ag_mutex.h"
+#include "ext/math/ag_gauss.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ag_serial_vec.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
 #include "/home/david/projects/antargis/rant/ext/video/ag_painttarget.h"
 #include "/home/david/projects/antargis/rant/ext/video/ag_surface.h"
 #include "/home/david/projects/antargis/rant/ext/video/ag_texture.h"



From davidkamphausen at mail.berlios.de  Sun Jul  8 20:45:19 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 8 Jul 2007 20:45:19 +0200
Subject: [Antargis-svn] r1138 - in antargis/branches/rant: . build/configs
	ext/3dengine ext/basic ext/gui ext/math ext/video
Message-ID: <200707081845.l68IjJdk004467@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-08 20:45:17 +0200 (Sun, 08 Jul 2007)
New Revision: 1138

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/ext/3dengine/ag_glsl.h
   antargis/branches/rant/ext/3dengine/glsl.h
   antargis/branches/rant/ext/3dengine/scene.h
   antargis/branches/rant/ext/3dengine/scene_2d.h
   antargis/branches/rant/ext/3dengine/scene_base.h
   antargis/branches/rant/ext/3dengine/scenenode.h
   antargis/branches/rant/ext/3dengine/vertex_array.h
   antargis/branches/rant/ext/basic/ag_collector.h
   antargis/branches/rant/ext/basic/ag_config.h
   antargis/branches/rant/ext/basic/ag_debug.h
   antargis/branches/rant/ext/basic/ag_exception.h
   antargis/branches/rant/ext/basic/ag_fs.h
   antargis/branches/rant/ext/basic/ag_kill.h
   antargis/branches/rant/ext/basic/ag_main.h
   antargis/branches/rant/ext/basic/ag_messageobject.h
   antargis/branches/rant/ext/basic/ag_mutex.h
   antargis/branches/rant/ext/basic/ag_profiler.h
   antargis/branches/rant/ext/basic/ag_regex.h
   antargis/branches/rant/ext/basic/ag_rubyobj.h
   antargis/branches/rant/ext/basic/ag_serial.cc
   antargis/branches/rant/ext/basic/ag_serial.h
   antargis/branches/rant/ext/basic/ag_singleton.h
   antargis/branches/rant/ext/basic/ag_string_utf8.h
   antargis/branches/rant/ext/basic/ag_tools.h
   antargis/branches/rant/ext/basic/ag_utf8.h
   antargis/branches/rant/ext/basic/ag_video_base.h
   antargis/branches/rant/ext/basic/ag_xml.h
   antargis/branches/rant/ext/gui/ag_application.h
   antargis/branches/rant/ext/gui/ag_widget.h
   antargis/branches/rant/ext/math/ag_serial_vec.h
   antargis/branches/rant/ext/math/ant_frustum.h
   antargis/branches/rant/ext/video/GLee.h
   antargis/branches/rant/ext/video/ag_clip.h
   antargis/branches/rant/ext/video/ag_clip_painttarget.h
   antargis/branches/rant/ext/video/ag_fbo.h
   antargis/branches/rant/ext/video/ag_font.h
   antargis/branches/rant/ext/video/ag_fontengine.h
   antargis/branches/rant/ext/video/ag_glscreen.h
   antargis/branches/rant/ext/video/ag_gltexture.h
   antargis/branches/rant/ext/video/ag_painter.h
   antargis/branches/rant/ext/video/ag_painttarget.h
   antargis/branches/rant/ext/video/ag_png.h
   antargis/branches/rant/ext/video/ag_projection.h
   antargis/branches/rant/ext/video/ag_rendercontext.h
   antargis/branches/rant/ext/video/ag_screen.h
   antargis/branches/rant/ext/video/ag_sdlsurface.h
   antargis/branches/rant/ext/video/ag_surface.h
   antargis/branches/rant/ext/video/ag_surfacemanager.h
   antargis/branches/rant/ext/video/ag_texture.h
   antargis/branches/rant/ext/video/ag_texturecache.h
   antargis/branches/rant/ext/video/ag_vdebug.h
   antargis/branches/rant/ext/video/ag_video.h
Log:
* more changes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/Rantfile	2007-07-08 18:45:17 UTC (rev 1138)
@@ -1,4 +1,4 @@
-#import "md5"                         # md5 is needed for automatic checksum-check for changes in files
+import "md5"                         # md5 is needed for automatic checksum-check for changes in files
 import "autoclean"                    # autoclean includes the a simple facility for a clean-make-target
 import "package/tgz"                  # support for packaging (tar.gz, zip)
 import "rubydoc"
@@ -11,7 +11,10 @@
 
 
 # get library-dependencies for libSDL
-sdlLibs=$config['LIBS'].split(" ")
+sdlLibs=$config['LIBS'].split(" ")
+
+allSDLlibs=sdlLibs+["-lSDL_image","-lSDL_ttf","-lpng"]
+glLibs=$config["LIBGL"].split(" ")
 
 # configure source-directories.
 # DLLs will be build for each directory and in the given order.
@@ -25,11 +28,11 @@
 	["ext/external",["-lz"]+sdlLibs],
 	["ext/basic",["ext/external","-l"+$config['RUBYLIB'],"-lz"]+sdlLibs],
 	["ext/math",["ext/external","ext/basic"]],
-	["ext/video",["ext/external","ext/basic","ext/math","-lSDL_image","-lSDL_ttf"]+$config["LIBGL"].split(" ")+sdlLibs],
-	["ext/gui",["ext/basic","ext/math","ext/video"]],
-	["ext/sound",["ext/basic","-lSDL_mixer"]],
-	["ext/3dengine",["ext/basic"]],
-	["ext/game",["ext/basic","ext/math","ext/video","ext/gui","ext/3dengine"]],
+	["ext/video",["ext/external","ext/basic","ext/math"]+glLibs+allSDLlibs],
+	["ext/gui",["ext/basic","ext/math","ext/video"]+allSDLlibs],
+	["ext/sound",["ext/basic","-lSDL_mixer"]+sdlLibs],
+	["ext/3dengine",["ext/external","ext/basic","ext/math","ext/video"]+glLibs+sdlLibs],
+	["ext/game",["ext/basic","ext/math","ext/video","ext/gui","ext/3dengine"]+glLibs+sdlLibs],
 ]
 
 $sourceDeps=sourceDeps

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-08 18:45:17 UTC (rev 1138)
@@ -29,7 +29,7 @@
 	# a c++ compiler call with parameters (using ccache if available)
 	"CXX_CALL"=>"$(CCACHE) $(CXX) $(COMPILE_PARAMS)",
 	# build a shared library (.so or .dll)
-	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib --add-stdcall-alias -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
 	# generate c++-code from a swig-interface file
 	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) $(INPUT)",
 	# generate dependencies for swig-interface files

Modified: antargis/branches/rant/ext/3dengine/ag_glsl.h
===================================================================
--- antargis/branches/rant/ext/3dengine/ag_glsl.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/ag_glsl.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -30,7 +30,7 @@
 
 class Scene;
 
-class AGVertexProgram
+class AGEXPORT AGVertexProgram
 {
  public:
   AGVertexProgram(const std::string &pFile);
@@ -42,7 +42,7 @@
   friend class AGShaderProgram;
 };
 
-class AGFragProgram
+class AGEXPORT AGFragProgram
 {
  public:
   AGFragProgram(const std::string &pFile);
@@ -59,13 +59,13 @@
 };
 
 
-class AGShaderParameter
+class AGEXPORT AGShaderParameter
 {
  public:
   
 };
 
-class AGShaderProgram
+class AGEXPORT AGShaderProgram
 {
   AGVertexProgram vertex;
   AGFragProgram frag;
@@ -99,6 +99,6 @@
   void sendAttribute(const std::string &pName,const std::vector<float> &vf);
 };
 
-bool glslOk();
+AGEXPORT bool glslOk();
 
 #endif

Modified: antargis/branches/rant/ext/3dengine/glsl.h
===================================================================
--- antargis/branches/rant/ext/3dengine/glsl.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/glsl.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -10,7 +10,7 @@
 
 class Scene;
 
-class AntVertexProgram
+class AGEXPORT AntVertexProgram
 {
  public:
   AntVertexProgram(const std::string &pFile);
@@ -22,7 +22,7 @@
   friend class AntShaderProgram;
 };
 
-class AntFragProgram
+class AGEXPORT AntFragProgram
 {
  public:
   AntFragProgram(const std::string &pFile);
@@ -39,13 +39,13 @@
 };
 
 
-class AntShaderParameter
+class AGEXPORT AntShaderParameter
 {
  public:
   
 };
 
-class AntShaderProgram:public AGGLObject
+class AGEXPORT AntShaderProgram:public AGGLObject
 {
   std::string mVertexFile,mFragFile;
   AntVertexProgram *vertex;
@@ -91,7 +91,7 @@
 
 };
 
-class AntShadowShader:public AntShaderProgram
+class AGEXPORT AntShadowShader:public AntShaderProgram
 {
  public:
   AntShadowShader(const std::string &pVertexFile,const std::string &pFragFile);
@@ -100,7 +100,7 @@
   virtual void disable();
 };
 
-class AntWaterShader:public AntShaderProgram
+class AGEXPORT AntWaterShader:public AntShaderProgram
 {
   float t;
  public:
@@ -108,6 +108,6 @@
   void doUpdate(float time);
 };
 
-bool glslOk();
+AGEXPORT bool glslOk();
 
 #endif

Modified: antargis/branches/rant/ext/3dengine/scene.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scene.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/scene.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -40,7 +40,7 @@
 
  */
 
-class Scene:public SceneBase
+class AGEXPORT Scene:public SceneBase
 {
  public:
   ////  typedef std::vector<PickNode> PickResult;

Modified: antargis/branches/rant/ext/3dengine/scene_2d.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scene_2d.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/scene_2d.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -5,7 +5,7 @@
 
 class AGPainter;
 
-class Scene2D:public SceneBase
+class AGEXPORT Scene2D:public SceneBase
 {
  public:
   typedef std::vector<PickNode> PickResult;

Modified: antargis/branches/rant/ext/3dengine/scene_base.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scene_base.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/scene_base.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -13,7 +13,7 @@
    * the picked scene-node
    * and the 3d-position, where the scene-node was touched
    */
-struct PickNode
+struct AGEXPORT PickNode
 {
   AGVector4 pos;
   SceneNode *node;
@@ -26,7 +26,7 @@
 class QuadTree;
 
 
-class SceneBase:public AGRubyObject
+class AGEXPORT SceneBase:public AGRubyObject
 {
  public:
   typedef std::vector<PickNode> PickResult;

Modified: antargis/branches/rant/ext/3dengine/scenenode.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scenenode.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/scenenode.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -29,7 +29,7 @@
    "destroy-state". That means the destructor notifies the other object.
 
 */
-class SceneNode:public AGRubyObject
+class AGEXPORT SceneNode:public AGRubyObject
 {
  public:
   SceneNode(SceneBase *s,const AGVector4 &pPos,const AGBox3 &pBox);

Modified: antargis/branches/rant/ext/3dengine/vertex_array.h
===================================================================
--- antargis/branches/rant/ext/3dengine/vertex_array.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/3dengine/vertex_array.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -23,7 +23,7 @@
    if you have to do special drawing like picking, use the corresp. functions (drawDepth,drawPick)
 */
 
-class VertexArray:public AGGLObject
+class AGEXPORT VertexArray:public AGGLObject
 {
   std::vector<AGVector4> mVertices,mColors;
   std::vector<AGVector3> mNormals;
@@ -93,13 +93,13 @@
    It creates several instances of a mesh stored in va. The positions of the instances are 
    given through transformation matrices in ts
 */
-VertexArray *makeInstances(const VertexArray &va,const std::vector<AGMatrix4> &ts);
+AGEXPORT VertexArray *makeInstances(const VertexArray &va,const std::vector<AGMatrix4> &ts);
 
 /**
    VertexArrayShader adds shader-support to vertex-arrays. You might need to attach data
    to each vertex. You can do so by calling addAttribute(.,.).
  */
-class VertexArrayShader:public VertexArray
+class AGEXPORT VertexArrayShader:public VertexArray
 {
   AntShaderProgram *p;
   std::map<std::string,std::vector<float>*> as;

Modified: antargis/branches/rant/ext/basic/ag_collector.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_collector.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_collector.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -5,7 +5,7 @@
 
 #include <ag_rubyobj.h>
 
-class AGCollector:public AGRubyObject
+class AGEXPORT AGCollector:public AGRubyObject
 {
  public:
   void insertGlobal(AGRubyObject *pObject);
@@ -17,7 +17,7 @@
   
 };
 
-AGCollector *getCollector();
+AGEXPORT AGCollector *getCollector();
 
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_config.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_config.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_config.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -26,7 +26,7 @@
 #include <map>
 #include <ag_string.h>
 
-class AGConfig
+class AGEXPORT AGConfig
 {
  public:
   AGConfig();
@@ -43,8 +43,8 @@
   std::map<AGString,AGString> comments;
 };
 
-AGConfig *getConfig();
-void updateConfig();
+AGEXPORT AGConfig *getConfig();
+AGEXPORT void updateConfig();
 
 
 //#define EXPORT __declspec(dllexport)

Modified: antargis/branches/rant/ext/basic/ag_debug.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_debug.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_debug.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -36,7 +36,7 @@
 #include "ag_base.h"
 
 
-void setQuiet();
+AGEXPORT void setQuiet();
 
 #ifdef MNDEBUG
 #define dbout(x,l)
@@ -69,9 +69,9 @@
 #define cdebug(x) debugout("("<<__FILE__<<":"<<__LINE__<<":"<<__PRETTY_FUNCTION__<<"):"<<x<<endl)
 #define ccdebug(x) debugout("("<<__FILE__<<":"<<__LINE__<<":"<<__PRETTY_FUNCTION__<<":"<<((void*)this)<<"):"<<x<<endl)
 
-size_t getDebugIndex();
-size_t getDebugLevel();
-void setDebugLevel(size_t t);
+AGEXPORT size_t getDebugIndex();
+AGEXPORT size_t getDebugLevel();
+AGEXPORT void setDebugLevel(size_t t);
 
 #define debugout_checked(level,x) { if(level>getDebugLevel()) { getDebug()<<x; }}
 #define dbout(level,x) {if(level>getDebugLevel()) { cdebug(x); }}
@@ -96,7 +96,7 @@
 #define TRACE D test__LINE__(::toString(__FILE__)+::toString(" ")+::toString(__LINE__)+::toString(" ")+::toString( __PRETTY_FUNCTION__))
 #define CTRACE D test__LINE__(::toString(__FILE__)+::toString(" ")+::toString(__LINE__)+::toString(" ")+::toString( __PRETTY_FUNCTION__)+::toString(" ")+::toString(((void*)this))+::toString(" ")+typeid(*this).name())
 
-void agRaise(const std::string &s);
+AGEXPORT void agRaise(const std::string &s);
 
 #ifndef __WIN32__
 #undef assert

Modified: antargis/branches/rant/ext/basic/ag_exception.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_exception.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_exception.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -20,9 +20,11 @@
 
 #ifndef __ANTARGISGUI_EXCEPTION_H__
 #define __ANTARGISGUI_EXCEPTION_H__
+
+#include <ag_base.h>
+#include <stdexcept>
 
-
-class AGException:public std::exception
+class AGEXPORT AGException:public std::exception
 {
  public:
   AGException(const std::string &e):s(e)

Modified: antargis/branches/rant/ext/basic/ag_fs.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_fs.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_fs.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -28,25 +28,25 @@
 
 #include <ag_base.h>
 
-void initFS(const char *argv0);
-AGData AGEXPORT loadFile(const AGFilename &pName);
-bool AGEXPORT saveFile(const AGFilename &pName,const AGData &pContent);
+AGEXPORT void initFS(const char *argv0);
+AGEXPORT AGData loadFile(const AGFilename &pName);
+AGEXPORT bool saveFile(const AGFilename &pName,const AGData &pContent);
 
-bool AGEXPORT fileExists(const AGFilename &pName);
+AGEXPORT bool fileExists(const AGFilename &pName);
 
-std::vector<AGFilename> getDirectory(const AGFilename &pDir);
+AGEXPORT std::vector<AGFilename> getDirectory(const AGFilename &pDir);
 
-AGFilename checkFileName(AGFilename s);
-AGFilename getWriteDir();
-AGFilename findFile(const AGFilename &pName);
+AGEXPORT AGFilename checkFileName(AGFilename s);
+AGEXPORT AGFilename getWriteDir();
+AGEXPORT AGFilename findFile(const AGFilename &pName);
 
-AGFilename getDocumentsDir();
+AGEXPORT AGFilename getDocumentsDir();
 
-void addPath(const AGFilename &pName);
+AGEXPORT void addPath(const AGFilename &pName);
 
-AGData compress(const AGData &pString);
-AGData uncompress(const AGData &pString);
+AGEXPORT AGData compress(const AGData &pString);
+AGEXPORT AGData uncompress(const AGData &pString);
 
-AGFilename getDirSep();
+AGEXPORT AGFilename getDirSep();
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_kill.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_kill.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_kill.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -22,8 +22,9 @@
 #define __ANT_KILL_H__
 
 #include <set>
+#include <ag_base.h>
 
-class AGInstanceBase
+class AGEXPORT AGInstanceBase
 {
  public:
   virtual ~AGInstanceBase()
@@ -36,7 +37,7 @@
 };
 
 template<class T>
-class AGInstance:public AGInstanceBase
+class AGEXPORT AGInstance:public AGInstanceBase
 {
   T *instance;
  public:
@@ -61,12 +62,12 @@
 };
 
 template<class T>
-AGInstanceBase *createKiller(T *t)
+AGEXPORT AGInstanceBase *createKiller(T *t)
 {
   return new AGInstance<T>(t);
 }
 
-class ContentCompare
+class AGEXPORT ContentCompare
 {
  public:
   bool operator()(AGInstanceBase*a,AGInstanceBase *b)
@@ -75,7 +76,7 @@
   }
 };
 
-class AGInstanceKiller
+class AGEXPORT AGInstanceKiller
 {
   std::set<AGInstanceBase*,ContentCompare> bs;
  public:
@@ -84,7 +85,7 @@
   void reg(AGInstanceBase *b);
 };
 
-AGInstanceKiller *getInstanceKiller();
+AGEXPORT AGInstanceKiller *getInstanceKiller();
 
 #define REGISTER_SINGLETON(s) getInstanceKiller()->reg(createKiller(s));
 

Modified: antargis/branches/rant/ext/basic/ag_main.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_main.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_main.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -47,7 +47,7 @@
 
 // will be called repeatedely (by AGApplication - if available)
 // simply instantiate a subclass of this type - and it'll be registered within AGMain
-class AGRepeatedCall
+class AGEXPORT AGRepeatedCall
 {
  public:
   AGRepeatedCall();
@@ -88,21 +88,21 @@
   friend class AGRepeatedCall;
 };
 
-bool hasMain();
+AGEXPORT bool hasMain();
 AGEXPORT AGMain *getMain();
 
-bool hasQuit();
+AGEXPORT bool hasQuit();
 
-void setAppName(const std::string &pName);
-std::string getAppName();
+AGEXPORT void setAppName(const std::string &pName);
+AGEXPORT std::string getAppName();
 //std::string AGEXPORT myHash(const std::string &p);
 
 // from ag_debug
-size_t getDebugLevel();
-void setDebugLevel(size_t t);
-void setRubyRaising(bool flag);
+AGEXPORT size_t getDebugLevel();
+AGEXPORT void setDebugLevel(size_t t);
+AGEXPORT void setRubyRaising(bool flag);
 
-bool videoInited();
+AGEXPORT bool videoInited();
 
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_messageobject.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_messageobject.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -51,7 +51,7 @@
     You can however derive from it and pass it through a signal.
     But you shouldn't delete it for yourself.
  */
-class AGEvent
+class AGEXPORT AGEvent
 {
  public:
   AGEvent(AGListener *pCaller,const AGString &pName,const SDL_Event &pEvent=NullEvent);
@@ -96,7 +96,7 @@
    facilities.
    @see AGEvent
 */
-class AGListener:public AGRubyObject
+class AGEXPORT AGListener:public AGRubyObject
 {
  public:
   AGListener();
@@ -110,7 +110,7 @@
    @see AGSignal
    @see AGMessageObject
 */
-class AGCPPListener
+class AGEXPORT AGCPPListener
 {
  public:
   virtual ~AGCPPListener();
@@ -123,7 +123,7 @@
    @see AGMessageObject
 */
 template<class T>
-class AGSlot0:public AGCPPListener
+class AGEXPORT AGSlot0:public AGCPPListener
 {
  public:
   typedef bool (T::*FKT)(AGEvent *m);
@@ -152,7 +152,7 @@
     You call sigClick(event) in the button and the connected slot is automatically called.
     @see connect()
 */
-class AGSignal
+class AGEXPORT AGSignal
 {
  public:
   AGSignal();
@@ -182,7 +182,7 @@
 /**
    AGMessageObject handles libSDL-events and provides virtual handlers.
 */
-class AGMessageObject:public AGListener
+class AGEXPORT AGMessageObject:public AGListener
 {
  public:
   AGMessageObject();
@@ -231,7 +231,7 @@
 };
 
 
-AGEvent *newEvent(AGListener *pCaller,const AGString &pName,const SDL_Event &s);
+AGEXPORT AGEvent *newEvent(AGListener *pCaller,const AGString &pName,const SDL_Event &s);
 
 /**
  */   
@@ -243,10 +243,10 @@
 }
 
 
-AGString toString(SDL_Event *pEvent);
-SDL_Event *toSDLEvent(const AGString &p);
+AGEXPORT AGString toString(SDL_Event *pEvent);
+AGEXPORT SDL_Event *toSDLEvent(const AGString &p);
 
-bool eventOk(const SDL_Event &pEvent);
-void resetEvent(SDL_Event &pEvent);
+AGEXPORT bool eventOk(const SDL_Event &pEvent);
+AGEXPORT void resetEvent(SDL_Event &pEvent);
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_mutex.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_mutex.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_mutex.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -1,10 +1,11 @@
 #ifndef AG_MUTEX
 #define AG_MUTEX
-
+
+#include <ag_base.h>
 #include <SDL.h>
 #include <SDL_thread.h>
 
-class AGMutex
+class AGEXPORT AGMutex
 {
  public:
   AGMutex();

Modified: antargis/branches/rant/ext/basic/ag_profiler.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_profiler.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_profiler.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -45,7 +45,7 @@
 /// 
 /// Object of this class is created on stack in STACKTRACE macro, so it's creating/destruction can 
 /// be used to manage  call stack. 
-class UserStackTraceHelper 
+class AGEXPORT UserStackTraceHelper 
 { 
  public: 
   UserStackTraceHelper( SOURCE_LINE* srcline); 

Modified: antargis/branches/rant/ext/basic/ag_regex.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_regex.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_regex.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -26,7 +26,7 @@
 #include <string>
 
 // uses extended regex's
-class RegEx
+class AGEXPORT RegEx
 {
   regex_t matcher;
 public:

Modified: antargis/branches/rant/ext/basic/ag_rubyobj.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_rubyobj.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_rubyobj.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -59,7 +59,7 @@
 };
 
 template<class T>
-class gc_ptr:public AGBaseObject
+class AGEXPORT gc_ptr:public AGBaseObject
 {
  public:
   gc_ptr(T*t):AGBaseObject(t)
@@ -117,7 +117,7 @@
   std::set<AGBaseObject*> mReferences;
 };
 
-void general_markfunc(void *ptr);
-bool saveDelete(AGRubyObject *o);
+AGEXPORT void general_markfunc(void *ptr);
+AGEXPORT bool saveDelete(AGRubyObject *o);
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_serial.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_serial.cc	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_serial.cc	2007-07-08 18:45:17 UTC (rev 1138)
@@ -256,6 +256,10 @@
 {
   is.unsetf(std::ios_base::skipws);
   is.str(pText);
+}
+
+BinaryStringIn::~BinaryStringIn()
+{
 }
 
 bool BinaryStringIn::eof()

Modified: antargis/branches/rant/ext/basic/ag_serial.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_serial.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_serial.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -7,7 +7,7 @@
 #include <SDL.h>
 #include <sstream>
 
-class SerialException
+class AGEXPORT SerialException
 {
 };
 
@@ -77,7 +77,8 @@
 class AGEXPORT BinaryStringIn:public BinaryIn
 {
  public:
-  BinaryStringIn(const std::string &pText);
+  BinaryStringIn(const std::string &pText);
+  virtual ~BinaryStringIn();
 
   virtual bool eof();
   virtual char read();
@@ -98,7 +99,7 @@
   std::ostringstream os;
 };
 
-std::string binaryToHex(const std::string &s);
-std::string hexToBinary(const std::string &s);
+AGEXPORT std::string binaryToHex(const std::string &s);
+AGEXPORT std::string hexToBinary(const std::string &s);
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_singleton.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_singleton.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_singleton.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -5,7 +5,7 @@
 
 #include <ag_rubyobj.h>
 
-class AGSingleton:public AGRubyObject
+class AGEXPORT AGSingleton:public AGRubyObject
 {
  public:
   AGSingleton();

Modified: antargis/branches/rant/ext/basic/ag_string_utf8.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_string_utf8.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_string_utf8.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -11,7 +11,7 @@
 class AGStringUtf8;
 class AGString;
 
-class AGCharUtf8
+class AGEXPORT AGCharUtf8
 {
  public:
   explicit AGCharUtf8(const char p);
@@ -41,7 +41,7 @@
   size_t pos;
 };
 
-class AGStringUtf8Iterator
+class AGEXPORT AGStringUtf8Iterator
 {
   
 };
@@ -155,7 +155,7 @@
 
 };
 
-std::ostream &operator<<(std::ostream &o,const AGStringUtf8 &s);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGStringUtf8 &s);
 
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_tools.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_tools.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_tools.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -60,11 +60,11 @@
   return(s=="true");
 }
 
-int toInt(const std::string &s);
-long toLong(const std::string &s);
-float toFloat(const std::string &s);
-int fromHex(const std::string &s);
-std::string toHex(int i);
+AGEXPORT int toInt(const std::string &s);
+AGEXPORT long toLong(const std::string &s);
+AGEXPORT float toFloat(const std::string &s);
+AGEXPORT int fromHex(const std::string &s);
+AGEXPORT std::string toHex(int i);
 
 template<class T>
 void append(std::list<T> &l1,const std::list<T> &l2)

Modified: antargis/branches/rant/ext/basic/ag_utf8.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_utf8.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_utf8.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -3,13 +3,14 @@
 
 // INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
 
-#include <string>
+#include <ag_base.h>
+#include <string>
 #include <vector>
 #include <SDL.h>
 
-size_t agFirstCharSize(const std::string &s,size_t pos=0);
-size_t agStringLength(const std::string &s);
-std::string agSubStr(const std::string &s,size_t from,size_t len);
-std::string unicode2Utf8(Uint16 unicode);
+AGEXPORT size_t agFirstCharSize(const std::string &s,size_t pos=0);
+AGEXPORT size_t agStringLength(const std::string &s);
+AGEXPORT std::string agSubStr(const std::string &s,size_t from,size_t len);
+AGEXPORT std::string unicode2Utf8(Uint16 unicode);
 
 #endif

Modified: antargis/branches/rant/ext/basic/ag_video_base.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -5,9 +5,10 @@
 
 #include <ag_singleton.h>
 
-class AGVideoBase:public AGSingleton
+class AGEXPORT AGVideoBase:public AGSingleton
 {
 public:
+  virtual ~AGVideoBase();
   virtual int width() const;
   virtual int height() const;
 

Modified: antargis/branches/rant/ext/basic/ag_xml.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_xml.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/basic/ag_xml.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -104,7 +104,7 @@
     AGString mContent;
   };
 
-class Document
+class AGEXPORT Document
   {
     Node *mRoot;
   public:
@@ -121,7 +121,7 @@
     void parseMemory(const AGData &s);
   };
 
-class Parser
+class AGEXPORT Parser
 {
   struct Data
   {
@@ -179,7 +179,7 @@
   virtual void header(const AGString &pText);
 };
 
-class DomParser:public Parser
+class AGEXPORT DomParser:public Parser
 {
   Document *doc;
   std::list<Node*> nodes;

Modified: antargis/branches/rant/ext/gui/ag_application.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_application.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/gui/ag_application.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -75,7 +75,7 @@
   }
   </pre>
 */
-class AGApplication:public AGMessageObject
+class AGEXPORT AGApplication:public AGMessageObject
 {
  public:
   AGApplication();
@@ -162,8 +162,8 @@
    So it will be correct after finishing a frame, when you are
    using nested AGApplications.
 */
-AGApplication *getApplication(); // returns current active application
+AGEXPORT AGApplication *getApplication(); // returns current active application
 
-void disableKeyrepeat();
+AGEXPORT void disableKeyrepeat();
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_widget.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_widget.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/gui/ag_widget.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -72,7 +72,7 @@
    The widgets get deleted by their parents
 */
 
-class AGWidget:public AGMessageObject
+class AGEXPORT AGWidget:public AGMessageObject
 {
  public:
   AGWidget(AGWidget *pParent,const AGRect2 &r);
@@ -254,7 +254,7 @@
 
 };
 
-AGWidget *toAGWidget(AGMessageObject *o);
+//AGWidget *toAGWidget(AGMessageObject *o);
 
 void setNewClippingTechnique(bool f);
 bool getNewClippingTechnique();

Modified: antargis/branches/rant/ext/math/ag_serial_vec.h
===================================================================
--- antargis/branches/rant/ext/math/ag_serial_vec.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/math/ag_serial_vec.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -4,9 +4,9 @@
 #include <ag_serial.h>
 #include <ag_geometry.h>
 
-BinaryIn &operator>>(BinaryIn &i,AGVector2 &v);
-BinaryIn &operator>>(BinaryIn &i,AGVector3 &v);
-BinaryIn &operator>>(BinaryIn &i,AGVector4 &v);
+AGEXPORT BinaryIn &operator>>(BinaryIn &i,AGVector2 &v);
+AGEXPORT BinaryIn &operator>>(BinaryIn &i,AGVector3 &v);
+AGEXPORT BinaryIn &operator>>(BinaryIn &i,AGVector4 &v);
 
 
 #endif

Modified: antargis/branches/rant/ext/math/ant_frustum.h
===================================================================
--- antargis/branches/rant/ext/math/ant_frustum.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/math/ant_frustum.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -25,7 +25,7 @@
 
 #include "ag_geometry.h"
 
-class AntPlane
+class AGEXPORT AntPlane
 {
  public:
   AntPlane(const AGVector3 &dir,float offset);
@@ -39,9 +39,9 @@
 };
 
 /// p0 is center - p1 is above and p2 at the right, then positive normal points into screen
-AntPlane makePlane(const AGVector3 &p0,const AGVector3 &p1,const AGVector3 &p2);
+AGEXPORT AntPlane makePlane(const AGVector3 &p0,const AGVector3 &p1,const AGVector3 &p2);
 
-class AntFrustum
+class AGEXPORT AntFrustum
 {
  public:
   AntFrustum();
@@ -55,8 +55,8 @@
   std::vector<AntPlane> mPlanes;
 };
 
-std::ostream &operator<<(std::ostream &o,const AntPlane &p);
-std::ostream &operator<<(std::ostream &o,const AntFrustum &p);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AntPlane &p);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AntFrustum &p);
 
 inline bool AntPlane::inside(const AGVector3 &v) const
 {

Modified: antargis/branches/rant/ext/video/GLee.h
===================================================================
--- antargis/branches/rant/ext/video/GLee.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/GLee.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -72,7 +72,17 @@
 #define APIENTRYP APIENTRY *
 #endif
 
+#include <ag_base.h>
+
+#ifdef WIN32
+#ifdef __cplusplus
+#define GLEE_EXTERN extern 
+#else
+#define GLEE_EXTERN __declspec(dllexport) extern
+#endif
+#else
 #define GLEE_EXTERN extern
+#endif
 
 #ifdef __cplusplus 
 extern "C" {		/* begin C linkage */

Modified: antargis/branches/rant/ext/video/ag_clip.h
===================================================================
--- antargis/branches/rant/ext/video/ag_clip.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_clip.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -5,7 +5,7 @@
 
 #include <ag_geometry.h>
 
-class AGClipping
+class AGEXPORT AGClipping
 {
  public:
   void include(const AGRect2 &r);

Modified: antargis/branches/rant/ext/video/ag_clip_painttarget.h
===================================================================
--- antargis/branches/rant/ext/video/ag_clip_painttarget.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_clip_painttarget.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -25,7 +25,7 @@
 #include <ag_clip.h>
 
 /// virtual paint target - use this for advanced clipping !
-class AGClipPaintTarget:public AGPaintTarget
+class AGEXPORT AGClipPaintTarget:public AGPaintTarget
 {
  public:
   AGClipPaintTarget(AGPaintTarget *pTarget);

Modified: antargis/branches/rant/ext/video/ag_fbo.h
===================================================================
--- antargis/branches/rant/ext/video/ag_fbo.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_fbo.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -20,10 +20,12 @@
 
 #ifndef AG_FBO_H
 #define AG_FBO_H
+
+#include <ag_base.h>
 
 class AGGLTexture;
 
-class AGFBO
+class AGEXPORT AGFBO
 {
 public:
   AGFBO(AGGLTexture *pTexture, bool withDepth=false);
@@ -46,6 +48,6 @@
 
 };
 
-bool canFBO();
+AGEXPORT bool canFBO();
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_font.h
===================================================================
--- antargis/branches/rant/ext/video/ag_font.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_font.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -86,6 +86,6 @@
   friend bool operator<(const AGFont&f1,const AGFont &f2);
 };
 
-bool operator<(const AGFont&f1,const AGFont &f2);
+AGEXPORT bool operator<(const AGFont&f1,const AGFont &f2);
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_fontengine.h
===================================================================
--- antargis/branches/rant/ext/video/ag_fontengine.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_fontengine.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -31,7 +31,7 @@
 #include <ag_singleton.h>
 #include <ag_surface.h>
 
-class AGFontEngine:public AGSingleton
+class AGEXPORT AGFontEngine:public AGSingleton
 {
  public:
   AGFontEngine();
@@ -48,7 +48,7 @@
   std::map<std::pair<AGFont,AGStringUtf8>,AGTexture*> fontCache;
 };
 
-AGFontEngine *getFontEngine();
+AGEXPORT AGFontEngine *getFontEngine();
 
 #endif
 

Modified: antargis/branches/rant/ext/video/ag_glscreen.h
===================================================================
--- antargis/branches/rant/ext/video/ag_glscreen.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_glscreen.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -35,7 +35,7 @@
 
 typedef GLuint TextureID;
 
-class AGGLObject
+class AGEXPORT AGGLObject
 {
  public:
   AGGLObject();
@@ -45,7 +45,7 @@
   virtual void onScreenUp();
 };
 
-class AGGLScreen:public AGScreen
+class AGEXPORT AGGLScreen:public AGScreen
 {
  public:
   AGGLScreen(int W,int H,int VW=-1,int VH=-1);
@@ -114,6 +114,6 @@
   static std::set<AGGLObject*> msObjects;
 };
 
-bool opengl();
+AGEXPORT bool opengl();
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_gltexture.h
===================================================================
--- antargis/branches/rant/ext/video/ag_gltexture.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_gltexture.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -31,7 +31,7 @@
    AGGLTexture is an internal class for managing opengl-textures.
    You shouldn't use it directly - all functionality is provided by AGTexture.
  */
-class AGGLTexture
+class AGEXPORT AGGLTexture
 {
  public:
   AGGLTexture(size_t W,size_t H,GLint format=GL_RGBA);

Modified: antargis/branches/rant/ext/video/ag_painter.h
===================================================================
--- antargis/branches/rant/ext/video/ag_painter.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_painter.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -37,7 +37,7 @@
 class AGTriangle2;
 class AGRect2;
 
-struct AGProjection
+struct AGEXPORT AGProjection
 {
   AGMatrix3 a;
   AGRect2 clip;

Modified: antargis/branches/rant/ext/video/ag_painttarget.h
===================================================================
--- antargis/branches/rant/ext/video/ag_painttarget.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_painttarget.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -33,7 +33,7 @@
 
 #define MSTUB { throw int();}
 
-class AGPaintTarget:public AGRubyObject
+class AGEXPORT AGPaintTarget:public AGRubyObject
 {
  public:
   virtual ~AGPaintTarget()

Modified: antargis/branches/rant/ext/video/ag_png.h
===================================================================
--- antargis/branches/rant/ext/video/ag_png.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_png.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -25,8 +25,8 @@
 
 #include <SDL.h>
 
-std::string toPNG(const SDL_Surface *s);
-SDL_Surface *fromPNG(std::string s);
+AGEXPORT std::string toPNG(const SDL_Surface *s);
+AGEXPORT SDL_Surface *fromPNG(std::string s);
 
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_projection.h
===================================================================
--- antargis/branches/rant/ext/video/ag_projection.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_projection.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -4,7 +4,7 @@
 #include <ag_geometry.h>
 
 
-class AGProjection2D
+class AGEXPORT AGProjection2D
 {
   AGMatrix3 m;
  public:

Modified: antargis/branches/rant/ext/video/ag_rendercontext.h
===================================================================
--- antargis/branches/rant/ext/video/ag_rendercontext.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_rendercontext.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -29,7 +29,7 @@
 
 class AGShaderProgram;
 
-class AGRenderContext
+class AGEXPORT AGRenderContext
 {
  public:
   AGRenderContext();

Modified: antargis/branches/rant/ext/video/ag_screen.h
===================================================================
--- antargis/branches/rant/ext/video/ag_screen.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_screen.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -43,7 +43,7 @@
   virtual AGSurface screenshot(bool frontBuffer=true);
 };
 
-AGScreen & AGEXPORT getScreen();
-void setScreen(AGScreen *s);
+AGEXPORT AGScreen &getScreen();
+AGEXPORT void setScreen(AGScreen *s);
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_sdlsurface.h
===================================================================
--- antargis/branches/rant/ext/video/ag_sdlsurface.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_sdlsurface.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -23,7 +23,7 @@
 
 #include "ag_screen.h"
 
-class AGSDLScreen:public AGScreen
+class AGEXPORT AGSDLScreen:public AGScreen
 {
  public:
   AGSDLScreen(SDL_Surface *s);

Modified: antargis/branches/rant/ext/video/ag_surface.h
===================================================================
--- antargis/branches/rant/ext/video/ag_surface.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_surface.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -39,15 +39,15 @@
 class AGSurface;
 class AGGLTexture;
 
-void beginRender();
-void endRender();
-bool isRendering();
+AGEXPORT void beginRender();
+AGEXPORT void endRender();
+AGEXPORT bool isRendering();
 
 /**
    AGInternalSurface links plain sdl-surfaces (in main-memory) and textures (both gl-textures and
    sdl-screenlike-surfaces)
 */
-struct AGInternalSurface
+struct AGEXPORT AGInternalSurface
 {
   AGInternalSurface  *sdlTexture;
   AGGLTexture *glTexture;
@@ -64,7 +64,7 @@
    You have to derive from this class and give an instance when loading a surface.
    When you have done so saving is disabled afterwards.
  */
-class AGDecryptor
+class AGEXPORT AGDecryptor
 {
  public:
   virtual ~AGDecryptor()
@@ -77,7 +77,7 @@
 };
 
 /// Generic classes - for OpenGL and "normal" SDL
-class AGSurface:public AGPaintTarget
+class AGEXPORT AGSurface:public AGPaintTarget
 {
  public:  
   AGSurface();
@@ -143,9 +143,9 @@
   static AGDecryptor *mDecryptor;  
 };
 
-void AGFreeSurface(SDL_Surface *s);
+AGEXPORT void AGFreeSurface(SDL_Surface *s);
 
-std::ostream &operator<<(std::ostream &o,SDL_PixelFormat *f);
-std::ostream &operator<<(std::ostream &o,SDL_Surface *f);
+AGEXPORT std::ostream &operator<<(std::ostream &o,SDL_PixelFormat *f);
+AGEXPORT std::ostream &operator<<(std::ostream &o,SDL_Surface *f);
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_surfacemanager.h
===================================================================
--- antargis/branches/rant/ext/video/ag_surfacemanager.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_surfacemanager.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -20,7 +20,8 @@
 
 #ifndef AG_SURFACEMANAGER_H
 #define AG_SURFACEMANAGER_H
-
+
+#include <ag_base.h>
 #include <set>
 
 class AGRenderContext;
@@ -29,7 +30,7 @@
 class AGInternalSurface;
 class AGGLTexture;
 
-class AGSurfaceManager
+class AGEXPORT AGSurfaceManager
 {
  public:
   ~AGSurfaceManager();
@@ -66,7 +67,7 @@
 
   friend AGSurfaceManager *getSurfaceManager();
 };
-AGSurfaceManager *getSurfaceManager();
+AGEXPORT AGSurfaceManager *getSurfaceManager();
 
 #endif
 

Modified: antargis/branches/rant/ext/video/ag_texture.h
===================================================================
--- antargis/branches/rant/ext/video/ag_texture.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_texture.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -29,7 +29,7 @@
 
 class AGFBO;
 
-class AGTexture:public AGPaintTarget
+class AGEXPORT AGTexture:public AGPaintTarget
 {
  public:
   AGTexture();

Modified: antargis/branches/rant/ext/video/ag_texturecache.h
===================================================================
--- antargis/branches/rant/ext/video/ag_texturecache.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_texturecache.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -32,7 +32,7 @@
 
 class AGRect2;
 
-class AGTextureCache
+class AGEXPORT AGTextureCache
   {
     AGTextureCache();
   public:
@@ -46,7 +46,7 @@
     friend AGTextureCache *getTextureCache();
   };
 
-AGTextureCache *getTextureCache();
+AGEXPORT AGTextureCache *getTextureCache();
 
 
 #endif

Modified: antargis/branches/rant/ext/video/ag_vdebug.h
===================================================================
--- antargis/branches/rant/ext/video/ag_vdebug.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_vdebug.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -3,7 +3,7 @@
 
 #include <ag_debug.h>
 
-void agAssertGL(std::string s);
+AGEXPORT void agAssertGL(std::string s);
 #define assertGL agAssertGL(::toString(__FILE__)+::toString(" ")+::toString(__LINE__)+::toString(" ")+::toString( __PRETTY_FUNCTION__))
 
 

Modified: antargis/branches/rant/ext/video/ag_video.h
===================================================================
--- antargis/branches/rant/ext/video/ag_video.h	2007-07-04 18:45:59 UTC (rev 1137)
+++ antargis/branches/rant/ext/video/ag_video.h	2007-07-08 18:45:17 UTC (rev 1138)
@@ -8,7 +8,7 @@
 #include <string>
 class AGScreen;
 
-class AGVideoManager:public AGVideoBase
+class AGEXPORT AGVideoManager:public AGVideoBase
 {
  public:
   AGVideoManager();
@@ -40,9 +40,9 @@
 };
 
 //bool glMode();
-bool opengl();
+AGEXPORT bool opengl();
 
-AGVideoManager *getVideo();
+AGEXPORT AGVideoManager *getVideo();
 
 #endif
 



From davidkamphausen at mail.berlios.de  Mon Jul  9 21:19:56 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Mon, 9 Jul 2007 21:19:56 +0200
Subject: [Antargis-svn] r1139 - in antargis/branches/rant: . build
	build/configs build/win32 ext/3dengine ext/external ext/gui ext/math
Message-ID: <200707091919.l69JJuqK028246@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-09 21:19:54 +0200 (Mon, 09 Jul 2007)
New Revision: 1139

Added:
   antargis/branches/rant/build/win32/win32.h
Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/base_tools.rb
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/build/create_interface.rb
   antargis/branches/rant/ext/3dengine/anim_mesh.h
   antargis/branches/rant/ext/3dengine/anim_mesh_data.h
   antargis/branches/rant/ext/3dengine/ant_camera.h
   antargis/branches/rant/ext/external/headers.hh
   antargis/branches/rant/ext/gui/ag_layoutfactory.h
   antargis/branches/rant/ext/math/ag_rand.h
Log:
some more changes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/Rantfile	2007-07-09 19:19:54 UTC (rev 1139)
@@ -23,10 +23,12 @@
 # - an external library, which then marked by "-l" in front, like "-lz" for the z-library
 # - an internal dependency on a directory
 # NOTE: dependencies are not automatically inherited, you have to include them yourself!
+
+rubyLib=["-l"+$config['RUBYLIB']]
 
 sourceDeps=[
 	["ext/external",["-lz"]+sdlLibs],
-	["ext/basic",["ext/external","-l"+$config['RUBYLIB'],"-lz"]+sdlLibs],
+	["ext/basic",["ext/external","-lz"]+sdlLibs+rubyLib],
 	["ext/math",["ext/external","ext/basic"]],
 	["ext/video",["ext/external","ext/basic","ext/math"]+glLibs+allSDLlibs],
 	["ext/gui",["ext/basic","ext/math","ext/video"]+allSDLlibs],
@@ -63,8 +65,8 @@
 
 ###########################################
 # all-target
-buildLibs=sourceDirs.collect{|d|"ext"+Dir.separator+"lib"+makeLibName(d)+".so"}
-interfaceLibs=sourceDirs.collect{|d|"ext"+Dir.separator+makeLibName(d)+".so"}
+buildLibs=sourceDirs.collect{|d|"ext/"+"lib"+makeLibName(d)+".so"}
+interfaceLibs=sourceDirs.collect{|d|"ext/"+makeLibName(d)+".so"}
 allTargets = buildLibs + interfaceLibs
 task :all => allTargets
 #
@@ -79,20 +81,20 @@
 #
 sourceDeps.each{|pair|
 	dir,dep=pair                                                               # get directory and dependencies
-	target="ext"+Dir.separator+"lib"+makeLibName(dir)+".so"                    # make library name like "ext/libantargisgui.so"
+	target="ext/"+"lib"+makeLibName(dir)+".so"                    # make library name like "ext/libantargisgui.so"
 	tsources=Dir[dir+"/*.cc"].select{|f|not f=~/swig/}            # get all *.cc files (without the swig-generated file)
 	tsources.collect!{|f|f.sub_ext("oo")}                                      # translate the .cc files to .oo
 	tsources+=Dir[dir+"/*.c"].collect!{|f|f.sub_ext("o")}         # add *.c files if there are any
 	extlibs=[]
     
-    puts "TARGET:",target
-    puts "TSOURCES:",tsources
+    #puts "TARGET:",target
+    #puts "TSOURCES:",tsources
     
 	dep.each{|d|
 		if d[0..0]=="-"
 			extlibs << d                                                           # gather external libraries (-lz)
 		else
-			tsources+=["ext"+Dir.separator+"lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
+			tsources+=["ext/lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
             #tsources+=["-l"+makeLibName(d)]
 		end
 	}
@@ -106,7 +108,7 @@
             puts "EXTLIBS #{extlibs}"
             sources=sources.select{|f|not f=~/\.so/}
         end
-		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
+		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
 		sys cmd
         if ENV['WINDIR']
             sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
@@ -123,15 +125,21 @@
 sourceDeps.each{|pair|
 	dir,dep=pair
 	libname=makeLibName(dir)
-	target="ext"+Dir.separator+makeLibName(dir)+".so"
-	tsources=[dir+Dir.separator+libname+"swig.cc"]
+	target="ext/"+makeLibName(dir)+".so"
+	#tsources=[dir+Dir.separator+libname+"swig.cc"]
+	tsources=[dir+"/"+libname+"swig.cc"]
 	tsources.collect!{|f|f.sub_ext("oo")}
-	tsources+=["ext"+Dir.separator+"lib"+makeLibName(dir)+".so"]
+	tsources+=["ext/lib"+makeLibName(dir)+".so"]
+    
+    
 	dep.each{|d|
 		if d[0..0]!="-"
-			tsources+=["ext"+Dir.separator+makeLibName(d)+".so"]
+			tsources+=["ext/"+makeLibName(d)+".so"]
 		end
 	}
+    puts "TARGET:",target
+    puts "SOURES:",tsources
+    puts "---"
 	task target => tsources do |t|
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), t.prerequisites.collect{|f|sys.expand_path(f)}.join(" "))
 		sys cmd
@@ -164,7 +172,8 @@
 # swig - interfacing for ruby
 #
 swigSrc = lambda { |target| 
-	dir=getDir(target)
+	dir=getDirUnix(target)
+    puts "TARGET:#{target} DIR:#{dir}"
 	name=makeLibName(dir)
 	[target.sub(name+"swig.cc","interface.i")]+sys["build/*.i"]+importsForInterface(target).split(":") 
 }
@@ -182,22 +191,23 @@
 # interface-files for swig
 #
 
-def importsForInterface(name)
-	$sourceDeps.each{|t|
-		if name=~/#{t[0]}/
+def importsForInterface(name)
+puts "?=="
+	$sourceDeps.each{|t|
+		if name=~/#{t[0]}/
 			return t[1].select{|f|not f=~/-.*/}.collect{|f|f+"/interface.i"}.join(":")
 		end
 	}
 	return ""
 end
 
-interfaceSrc = lambda { |target| 
-	list=Dir[getDir(target)+Dir.separator+"*.h"].select{|f|not f=~/swig.h/}+Dir["build/*.rb"] # FIXME:replace
-	list+=importsForInterface(target).split(":")
+interfaceSrc = lambda { |target| 
+	list=Dir[getDirUnix(target)+"/"+"*.h"].select{|f|not f=~/swig.h/}+Dir["build/*.rb"] # FIXME:replace
+	list+=importsForInterface(target).split(":")
 	list
 }
 gen Rule, /^.*interface.i$/ => interfaceSrc do |t|
-	cmd=makeCommand("CREATEINTERFACE",getDir(sys.expand_path(t.name)),importsForInterface(t.name))
+    cmd=makeCommand("CREATEINTERFACE",getDirUnix(sys.expand_path(t.name)),importsForInterface(t.name))
 	sys cmd
 end
 #

Modified: antargis/branches/rant/build/base_tools.rb
===================================================================
--- antargis/branches/rant/build/base_tools.rb	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/build/base_tools.rb	2007-07-09 19:19:54 UTC (rev 1139)
@@ -5,11 +5,15 @@
 def getDir(path)
 	# FIXME: check for windows
 	path.split(Dir.separator)[0..-2].join("/")
+end
+
+def getDirUnix(path)
+    path.split("/")[0..-2].join("/")
 end
 
 
 def makeLibName(dir)
-    puts "makeLibName #{dir}"
+    #puts "makeLibName #{dir}"
 	"antargis"+dir.split("/")[-1]
 end
 
@@ -41,4 +45,8 @@
 # the getConfig function reads out compiler-information out of the mkmf-configuration variables - these are defined in a recursive manner
 def getConfig(s)
 	extendCommand(CONFIG,s)
+end
+
+def U2W(path)
+    path.gsub("/",Dir.separator)
 end
\ No newline at end of file

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-09 19:19:54 UTC (rev 1139)
@@ -11,7 +11,8 @@
 	"CXX"=>"$(g++)",
 	"CC"=>"$(gcc)",
 	"SWIG"=>"$(swig)",
-	"RUBY"=>"$(ruby)",
+	#"RUBY"=>"$(ruby)",
+    "RUBY"=>"c:\\antargis\\rant\\build\\win32\\usr\\bin\\ruby",
 	"CCACHE"=>"$(ccache)",
 
 	"RUBYLIB"=>"msvcrt-ruby18",
@@ -29,7 +30,8 @@
 	# a c++ compiler call with parameters (using ccache if available)
 	"CXX_CALL"=>"$(CCACHE) $(CXX) $(COMPILE_PARAMS)",
 	# build a shared library (.so or .dll)
-	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib --add-stdcall-alias -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	#"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib --add-stdcall-alias -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
 	# generate c++-code from a swig-interface file
 	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) $(INPUT)",
 	# generate dependencies for swig-interface files

Modified: antargis/branches/rant/build/create_interface.rb
===================================================================
--- antargis/branches/rant/build/create_interface.rb	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/build/create_interface.rb	2007-07-09 19:19:54 UTC (rev 1139)
@@ -26,7 +26,8 @@
 
 
 require 'build/interface_template.rb'
-require 'build/base_tools.rb'
+require 'build/base_tools.rb'
+require 'find.rb'
 
 class MyInput
 	attr_reader :swigInput, :outputDir
@@ -273,9 +274,10 @@
 
 
 def generateInterfaceFile(myInput,files,addfiles)
-	filename=myInput.interfaceName
+	filename=myInput.interfaceName
 	interfaceI=File.open(filename,"w")
-	
+	puts filename
+    #raise 1
 	interfaceI.puts interface_template(myInput.moduleName,files,myInput.swigInput,addfiles,myInput.outputDir)
 	
 	interfaceI.close
@@ -291,14 +293,30 @@
 	headersH.puts "#endif"
 	headersH.puts "#endif"
 	headersH.close
+end
+
+def findFilesWith(str)
+    files=[]
+    Find.find("ext") {|file|files << file}
+    files=files.select{|f|f=~/\.h$/}.select{|f|File.open(f).read=~/#{str}/}
+    #dirs=findDirsRecursively(".")
+    puts files
+    #exit
+    files
+    #Dir["*/*"].collect{|f|f.gsub(/\/.*/,"")}.uniq
 end
 
 
 myInput=MyInput.new
 
 files=getSwigInterfaceFiles(getFiles(myInput.outputDir))
+
+
+cfiles=findFilesWith("swig")
+#exit
 
-parsedClasses=ParsedClasses.new(files,`find $(pwd) -name "*.h"|grep -v swig`.split("\n"))
+#parsedClasses=ParsedClasses.new(files,`find $(pwd) -name "*.h"|grep -v swig`.split("\n"))
+parsedClasses=ParsedClasses.new(files,cfiles)
 files=parsedClasses.getFileList
 
 addfiles=[]
@@ -370,7 +388,11 @@
 myClasses=parsedClasses.getMyRubyClasses
 
 file.puts <<EOT
-%{
+%{
+
+#undef write
+#undef read
+
 // cast-function map
 // it contains the mapping from parent-classes=>dyn-cast-functions to child-classes
 #include <string>

Added: antargis/branches/rant/build/win32/win32.h
===================================================================
--- antargis/branches/rant/build/win32/win32.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/build/win32/win32.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -0,0 +1,558 @@
+#ifndef RUBY_WIN32_H
+#define RUBY_WIN32_H
+
+/*
+ *  Copyright (c) 1993, Intergraph Corporation
+ *
+ *  You may distribute under the terms of either the GNU General Public
+ *  License or the Artistic License, as specified in the perl README file.
+ *
+ */
+
+//
+// Definitions for NT port of Perl
+//
+
+
+//
+// Ok now we can include the normal include files.
+//
+
+// #include <stdarg.h> conflict with varargs.h?
+// There is function-name conflitct, so we rename it
+#if !defined(IN) && !defined(FLOAT)
+#define OpenFile  WINAPI_OpenFile
+#ifdef __BORLANDC__
+#define USE_WINSOCK2
+#endif
+#ifdef USE_WINSOCK2
+#include <winsock2.h>
+#include <windows.h>
+#else
+#include <windows.h>
+#include <winsock.h>
+#endif
+#undef OpenFile
+#endif
+
+#define NT 1			/* deprecated */
+
+#ifdef _WIN32_WCE
+#undef CharNext
+#define CharNext CharNextA
+#endif
+
+//
+// We're not using Microsoft's "extensions" to C for
+// Structured Exception Handling (SEH) so we can nuke these
+//
+#undef try
+#undef except
+#undef finally
+#undef leave
+
+#if defined(__cplusplus)
+extern "C++" {
+#endif
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <direct.h>
+#include <process.h>
+#include <time.h>
+#include <math.h>
+#include <signal.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+#if !defined(__BORLANDC__)
+# include <sys/utime.h>
+#else
+# include <utime.h>
+#endif
+#include <io.h>
+#include <malloc.h>
+
+#if defined(__cplusplus)
+}
+#endif
+
+#ifdef _M_IX86
+# define WIN95 1
+#else
+# undef  WIN95
+#endif
+
+#ifdef WIN95
+extern DWORD rb_w32_osid(void);
+#define rb_w32_iswinnt()  (rb_w32_osid() == VER_PLATFORM_WIN32_NT)
+#define rb_w32_iswin95()  (rb_w32_osid() == VER_PLATFORM_WIN32_WINDOWS)
+#else
+#define rb_w32_iswinnt()  TRUE
+#define rb_w32_iswin95()  FALSE
+#endif
+
+#define WNOHANG -1
+
+#undef getc
+#undef putc
+#undef fgetc
+#undef fputc
+#undef getchar
+#undef putchar
+#undef fgetchar
+#undef fputchar
+#undef utime
+#define getc(_stream)		rb_w32_getc(_stream)
+#define putc(_c, _stream)	rb_w32_putc(_c, _stream)
+#define fgetc(_stream)		getc(_stream)
+#define fputc(_c, _stream)	putc(_c, _stream)
+#define getchar()		rb_w32_getc(stdin)
+#define putchar(_c)		rb_w32_putc(_c, stdout)
+#define fgetchar()		getchar()
+#define fputchar(_c)		putchar(_c)
+#define utime(_p, _t)		rb_w32_utime(_p, _t)
+
+#define strcasecmp(s1, s2)	stricmp(s1, s2)
+#define strncasecmp(s1, s2, n)	strnicmp(s1, s2, n)
+
+#define close(h)		rb_w32_close(h)
+#define fclose(f)		rb_w32_fclose(f)
+//#define read(f, b, s)		rb_w32_read(f, b, s)
+//#define write(f, b, s)		rb_w32_write(f, b, s)
+#define getpid()		rb_w32_getpid()
+#define sleep(x)		rb_w32_sleep((x)*1000)
+#ifdef __BORLANDC__
+#define creat(p, m)		_creat(p, m)
+#define eof()			_eof()
+#define filelength(h)		_filelength(h)
+#define mktemp(t)		_mktemp(t)
+#define tell(h)			_tell(h)
+#define unlink(p)		_unlink(p)
+#define _open			_sopen
+#define sopen			_sopen
+#undef fopen
+#define fopen(p, m)		rb_w32_fopen(p, m)
+#undef fdopen
+#define fdopen(h, m)		rb_w32_fdopen(h, m)
+#undef fsopen
+#define fsopen(p, m, sh)	rb_w32_fsopen(p, m, sh)
+#endif
+#define fsync(h)		_commit(h)
+#undef stat
+#define stat(path,st)		rb_w32_stat(path,st)
+#undef execv
+#define execv(path,argv)	do_aspawn(P_OVERLAY,path,argv)
+#if !defined(__BORLANDC__) && !defined(_WIN32_WCE)
+#undef isatty
+#define isatty(h)		rb_w32_isatty(h)
+#endif
+#undef mkdir
+#define mkdir(p, m)		rb_w32_mkdir(p, m)
+#undef rmdir
+#define rmdir(p)		rb_w32_rmdir(p)
+#undef unlink
+#define unlink(p)		rb_w32_unlink(p)
+
+#ifdef __MINGW32__
+struct timezone {
+  int tz_minuteswest;
+  int tz_dsttime;
+};
+#undef isascii
+#define isascii __isascii
+#endif
+extern void   NtInitialize(int *, char ***);
+extern int    rb_w32_cmdvector(const char *, char ***);
+extern rb_pid_t pipe_exec(char *, int, FILE **, FILE **);
+extern int    flock(int fd, int oper);
+extern int    rb_w32_accept(int, struct sockaddr *, int *);
+extern int    rb_w32_bind(int, struct sockaddr *, int);
+extern int    rb_w32_connect(int, struct sockaddr *, int);
+extern void   rb_w32_fdset(int, fd_set*);
+extern void   rb_w32_fdclr(int, fd_set*);
+extern int    rb_w32_fdisset(int, fd_set*);
+extern long   rb_w32_select(int, fd_set *, fd_set *, fd_set *, struct timeval *);
+extern int    rb_w32_getpeername(int, struct sockaddr *, int *);
+extern int    rb_w32_getsockname(int, struct sockaddr *, int *);
+extern int    rb_w32_getsockopt(int, int, int, char *, int *);
+extern int    rb_w32_ioctlsocket(int, long, u_long *);
+extern int    rb_w32_listen(int, int);
+extern int    rb_w32_recv(int, char *, int, int);
+extern int    rb_w32_recvfrom(int, char *, int, int, struct sockaddr *, int *);
+extern int    rb_w32_send(int, const char *, int, int);
+extern int    rb_w32_sendto(int, const char *, int, int, struct sockaddr *, int);
+extern int    rb_w32_setsockopt(int, int, int, char *, int);
+extern int    rb_w32_shutdown(int, int);
+extern int    rb_w32_socket(int, int, int);
+extern SOCKET rb_w32_get_osfhandle(int);
+extern struct hostent * rb_w32_gethostbyaddr(char *, int, int);
+extern struct hostent * rb_w32_gethostbyname(char *);
+extern int    rb_w32_gethostname(char *, int);
+extern struct protoent * rb_w32_getprotobyname(char *);
+extern struct protoent * rb_w32_getprotobynumber(int);
+extern struct servent  * rb_w32_getservbyname(char *, char *);
+extern struct servent  * rb_w32_getservbyport(int, char *);
+extern char * rb_w32_getenv(const char *);
+extern int    rb_w32_rename(const char *, const char *);
+extern int    rb_w32_stat(const char *, struct stat *);
+extern char **rb_w32_get_environ(void);
+extern void   rb_w32_free_environ(char **);
+
+#define vsnprintf(s,n,f,l) rb_w32_vsnprintf(s,n,f,l)
+#define snprintf   rb_w32_snprintf
+extern int rb_w32_vsnprintf(char *, size_t, const char *, va_list);
+extern int rb_w32_snprintf(char *, size_t, const char *, ...);
+
+extern int chown(const char *, int, int);
+extern int link(char *, char *);
+extern int gettimeofday(struct timeval *, struct timezone *);
+extern rb_pid_t waitpid (rb_pid_t, int *, int);
+extern int do_spawn(int, char *);
+extern int do_aspawn(int, char *, char **);
+extern int kill(int, int);
+extern int fcntl(int, int, ...);
+extern rb_pid_t rb_w32_getpid(void);
+
+#if !defined(__BORLANDC__) && !defined(_WIN32_WCE)
+extern int rb_w32_isatty(int);
+#endif
+extern int rb_w32_mkdir(const char *, int);
+extern int rb_w32_rmdir(const char *);
+extern int rb_w32_unlink(const char*);
+
+#ifdef __BORLANDC__
+extern FILE *rb_w32_fopen(const char *, const char *);
+extern FILE *rb_w32_fdopen(int, const char *);
+extern FILE *rb_w32_fsopen(const char *, const char *, int);
+#endif
+
+#include <float.h>
+#if !defined __MINGW32__ || defined __NO_ISOCEXT
+#ifndef isnan
+#define isnan(x) _isnan(x)
+#endif
+#ifndef finite
+#define finite(x) _finite(x)
+#endif
+#ifndef copysign
+#define copysign(a, b) _copysign(a, b)
+#endif
+#ifndef scalb
+#define scalb(a, b) _scalb(a, b)
+#endif
+#endif
+
+#if !defined S_IFIFO && defined _S_IFIFO
+#define S_IFIFO _S_IFIFO
+#endif
+
+#ifdef __BORLANDC__
+#undef S_ISDIR
+#undef S_ISFIFO
+#undef S_ISBLK
+#undef S_ISCHR
+#undef S_ISREG
+#define S_ISDIR(m)  (((unsigned short)(m) & S_IFMT) == S_IFDIR)
+#define S_ISFIFO(m) (((unsigned short)(m) & S_IFMT) == S_IFIFO)
+#define S_ISBLK(m)  (((unsigned short)(m) & S_IFMT) == S_IFBLK)
+#define S_ISCHR(m)  (((unsigned short)(m) & S_IFMT) == S_IFCHR)
+#define S_ISREG(m)  (((unsigned short)(m) & S_IFMT) == S_IFREG)
+#endif
+
+#if !defined S_IRUSR && !defined __MINGW32__
+#define S_IRUSR 0400
+#endif
+#ifndef S_IRGRP
+#define S_IRGRP 0040
+#endif
+#ifndef S_IROTH
+#define S_IROTH 0004
+#endif
+
+#if !defined S_IWUSR && !defined __MINGW32__
+#define S_IWUSR 0200
+#endif
+#ifndef S_IWGRP
+#define S_IWGRP 0020
+#endif
+#ifndef S_IWOTH
+#define S_IWOTH 0002
+#endif
+
+#if !defined S_IXUSR && !defined __MINGW32__
+#define S_IXUSR 0100
+#endif
+#ifndef S_IXGRP
+#define S_IXGRP 0010
+#endif
+#ifndef S_IXOTH
+#define S_IXOTH 0001
+#endif
+
+//
+// define this so we can do inplace editing
+//
+
+#define SUFFIX
+
+//
+// stubs
+//
+#if !defined(__BORLANDC__)
+extern int       ioctl (int, unsigned int, long);
+#endif
+extern rb_uid_t  getuid (void);
+extern rb_uid_t  geteuid (void);
+extern rb_gid_t  getgid (void);
+extern rb_gid_t  getegid (void);
+extern int       setuid (rb_uid_t);
+extern int       setgid (rb_gid_t);
+
+extern char *rb_w32_strerror(int);
+
+#define strerror(e) rb_w32_strerror(e)
+
+#define PIPE_BUF 1024
+
+#define LOCK_SH 1
+#define LOCK_EX 2
+#define LOCK_NB 4
+#define LOCK_UN 8
+
+
+#ifndef SIGINT
+#define SIGINT 2
+#endif
+#ifndef SIGKILL
+#define SIGKILL	9
+#endif
+
+
+/* #undef va_start */
+/* #undef va_end */
+
+/* winsock error map */
+#define EWOULDBLOCK	WSAEWOULDBLOCK
+#define EINPROGRESS	WSAEINPROGRESS
+#define EALREADY	WSAEALREADY
+#define ENOTSOCK	WSAENOTSOCK
+#define EDESTADDRREQ	WSAEDESTADDRREQ
+#define EMSGSIZE	WSAEMSGSIZE
+#define EPROTOTYPE	WSAEPROTOTYPE
+#define ENOPROTOOPT	WSAENOPROTOOPT
+#define EPROTONOSUPPORT	WSAEPROTONOSUPPORT
+#define ESOCKTNOSUPPORT	WSAESOCKTNOSUPPORT
+#define EOPNOTSUPP	WSAEOPNOTSUPP
+#define EPFNOSUPPORT	WSAEPFNOSUPPORT
+#define EAFNOSUPPORT	WSAEAFNOSUPPORT
+#define EADDRINUSE	WSAEADDRINUSE
+#define EADDRNOTAVAIL	WSAEADDRNOTAVAIL
+#define ENETDOWN	WSAENETDOWN
+#define ENETUNREACH	WSAENETUNREACH
+#define ENETRESET	WSAENETRESET
+#define ECONNABORTED	WSAECONNABORTED
+#define ECONNRESET	WSAECONNRESET
+#define ENOBUFS		WSAENOBUFS
+#define EISCONN		WSAEISCONN
+#define ENOTCONN	WSAENOTCONN
+#define ESHUTDOWN	WSAESHUTDOWN
+#define ETOOMANYREFS	WSAETOOMANYREFS
+#define ETIMEDOUT	WSAETIMEDOUT
+#define ECONNREFUSED	WSAECONNREFUSED
+#define ELOOP		WSAELOOP
+/*#define ENAMETOOLONG	WSAENAMETOOLONG*/
+#define EHOSTDOWN	WSAEHOSTDOWN
+#define EHOSTUNREACH	WSAEHOSTUNREACH
+/*#define ENOTEMPTY	WSAENOTEMPTY*/
+#define EPROCLIM	WSAEPROCLIM
+#define EUSERS		WSAEUSERS
+#define EDQUOT		WSAEDQUOT
+#define ESTALE		WSAESTALE
+#define EREMOTE		WSAEREMOTE
+
+#define F_SETFL 1
+#define O_NONBLOCK 1
+
+#ifdef accept
+#undef accept
+#endif
+#define accept(s, a, l)		rb_w32_accept(s, a, l)
+
+#ifdef bind
+#undef bind
+#endif
+#define bind(s, a, l)		rb_w32_bind(s, a, l)
+
+#ifdef connect
+#undef connect
+#endif
+#define connect(s, a, l)	rb_w32_connect(s, a, l)
+
+#undef FD_SET
+#define FD_SET(f, s)		rb_w32_fdset(f, s)
+
+#undef FD_CLR
+#define FD_CLR(f, s)		rb_w32_fdclr(f, s)
+
+#undef FD_ISSET
+#define FD_ISSET(f, s)		rb_w32_fdisset(f, s)
+
+#undef select
+#define select(n, r, w, e, t)	rb_w32_select(n, r, w, e, t)
+
+#ifdef getpeername
+#undef getpeername
+#endif
+#define getpeername(s, a, l)	rb_w32_getpeername(s, a, l)
+
+#ifdef getsockname
+#undef getsockname
+#endif
+#define getsockname(s, a, l)	rb_w32_getsockname(s, a, l)
+
+#ifdef getsockopt
+#undef getsockopt
+#endif
+#define getsockopt(s, v, n, o, l) rb_w32_getsockopt(s, v, n, o, l)
+
+#ifdef ioctlsocket
+#undef ioctlsocket
+#endif
+#define ioctlsocket(s, c, a)	rb_w32_ioctlsocket(s, c, a)
+
+#ifdef listen
+#undef listen
+#endif
+#define listen(s, b)		rb_w32_listen(s, b)
+
+#ifdef recv
+#undef recv
+#endif
+#define recv(s, b, l, f)	rb_w32_recv(s, b, l, f)
+
+#ifdef recvfrom
+#undef recvfrom
+#endif
+#define recvfrom(s, b, l, f, fr, frl) rb_w32_recvfrom(s, b, l, f, fr, frl)
+
+#ifdef send
+#undef send
+#endif
+#define send(s, b, l, f)	rb_w32_send(s, b, l, f)
+
+#ifdef sendto
+#undef sendto
+#endif
+#define sendto(s, b, l, f, t, tl) rb_w32_sendto(s, b, l, f, t, tl)
+
+#ifdef setsockopt
+#undef setsockopt
+#endif
+#define setsockopt(s, v, n, o, l) rb_w32_setsockopt(s, v, n, o, l)
+
+#ifdef shutdown
+#undef shutdown
+#endif
+#define shutdown(s, h)		rb_w32_shutdown(s, h)
+
+#ifdef socket
+#undef socket
+#endif
+#define socket(s, t, p)		rb_w32_socket(s, t, p)
+
+#ifdef gethostbyaddr
+#undef gethostbyaddr
+#endif
+#define gethostbyaddr(a, l, t)	rb_w32_gethostbyaddr(a, l, t)
+
+#ifdef gethostbyname
+#undef gethostbyname
+#endif
+#define gethostbyname(n)	rb_w32_gethostbyname(n)
+
+#ifdef gethostname
+#undef gethostname
+#endif
+#define gethostname(n, l)	rb_w32_gethostname(n, l)
+
+#ifdef getprotobyname
+#undef getprotobyname
+#endif
+#define getprotobyname(n)	rb_w32_getprotobyname(n)
+
+#ifdef getprotobynumber
+#undef getprotobynumber
+#endif
+#define getprotobynumber(n)	rb_w32_getprotobynumber(n)
+
+#ifdef getservbyname
+#undef getservbyname
+#endif
+#define getservbyname(n, p)	rb_w32_getservbyname(n, p)
+
+#ifdef getservbyport
+#undef getservbyport
+#endif
+#define getservbyport(p, pr)	rb_w32_getservbyport(p, pr)
+
+#ifdef get_osfhandle
+#undef get_osfhandle
+#endif
+#define get_osfhandle(h)	rb_w32_get_osfhandle(h)
+
+#ifdef getcwd
+#undef getcwd
+#endif
+#define getcwd(b, s)		rb_w32_getcwd(b, s)
+
+#ifdef getenv
+#undef getenv
+#endif
+#define getenv(n)		rb_w32_getenv(n)
+
+#ifdef rename
+#undef rename
+#endif
+#define rename(o, n)		rb_w32_rename(o, n)
+
+struct tms {
+	long	tms_utime;
+	long	tms_stime;
+	long	tms_cutime;
+	long	tms_cstime;
+};
+
+#ifdef times
+#undef times
+#endif
+#define times(t) rb_w32_times(t)
+int rb_w32_times(struct tms *);
+
+/* thread stuff */
+HANDLE GetCurrentThreadHandle(void);
+void rb_w32_interrupted(void);
+int  rb_w32_main_context(int arg, void (*handler)(int));
+int  rb_w32_sleep(unsigned long msec);
+void rb_w32_enter_critical(void);
+void rb_w32_leave_critical(void);
+int  rb_w32_putc(int, FILE*);
+int  rb_w32_getc(FILE*);
+int  rb_w32_close(int);
+int  rb_w32_fclose(FILE*);
+size_t rb_w32_read(int, void *, size_t);
+size_t rb_w32_write(int, const void *, size_t);
+int  rb_w32_utime(const char *, struct utimbuf *);
+#define Sleep(msec) (void)rb_w32_sleep(msec)
+
+/*
+== ***CAUTION***
+Since this function is very dangerous, ((*NEVER*))
+* lock any HANDLEs(i.e. Mutex, Semaphore, CriticalSection and so on) or,
+* use anything like TRAP_BEG...TRAP_END block structure,
+in asynchronous_func_t.
+*/
+typedef DWORD (*asynchronous_func_t)(DWORD self, int argc, DWORD* argv);
+DWORD rb_w32_asynchronize(asynchronous_func_t func, DWORD self, int argc, DWORD* argv, DWORD intrval);
+
+#endif

Modified: antargis/branches/rant/ext/3dengine/anim_mesh.h
===================================================================
--- antargis/branches/rant/ext/3dengine/anim_mesh.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/3dengine/anim_mesh.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -19,7 +19,7 @@
    AnimMesh is a skeleton animated mesh.
    It support either shader-based and cpu-based animation.
 */
-class AnimMesh:public SceneNode
+class AGEXPORT AnimMesh:public SceneNode
 {
   AnimMeshData *mData;
   size_t curKey;

Modified: antargis/branches/rant/ext/3dengine/anim_mesh_data.h
===================================================================
--- antargis/branches/rant/ext/3dengine/anim_mesh_data.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/3dengine/anim_mesh_data.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -49,7 +49,7 @@
   }
 };
 
-class AnimMeshData:public AGRubyObject
+class AGEXPORT AnimMeshData:public AGRubyObject
 {
   AntShaderProgram animShader;
   AntShaderProgram animShaderDepth;

Modified: antargis/branches/rant/ext/3dengine/ant_camera.h
===================================================================
--- antargis/branches/rant/ext/3dengine/ant_camera.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/3dengine/ant_camera.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -38,7 +38,7 @@
  */
 
 
-class AntCamera
+class AGEXPORT AntCamera
 {
  public:
   AntCamera(int w,int h);

Modified: antargis/branches/rant/ext/external/headers.hh
===================================================================
--- antargis/branches/rant/ext/external/headers.hh	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/external/headers.hh	2007-07-09 19:19:54 UTC (rev 1139)
@@ -1,8 +1,8 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-
-
-#ifdef SWIG
-
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+
+
+#ifdef SWIG
+
+#endif
+#endif

Modified: antargis/branches/rant/ext/gui/ag_layoutfactory.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_layoutfactory.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/gui/ag_layoutfactory.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -28,7 +28,7 @@
 #include <ag_widget.h>
 #include <ag_xml.h>
 
-class AGLayoutCreator:public AGSingleton
+class AGEXPORT AGLayoutCreator:public AGSingleton
 {
  public:
   AGLayoutCreator();//const AGString &pName);
@@ -46,7 +46,7 @@
 
 };
 
-class AGLayoutFactory
+class AGEXPORT AGLayoutFactory
 {
   std::map<AGString,AGLayoutCreator*> mCreators;
 
@@ -62,7 +62,7 @@
   friend AGLayoutFactory *getLayoutFactory();
 };
 
-AGLayoutFactory *getLayoutFactory();
+AGEXPORT AGLayoutFactory *getLayoutFactory();
 /*
 #define IMPLEMENT_COMPONENT_FACTORY(CLASS) \
 AG##CLASS##LayoutCreator factory_##CLASS

Modified: antargis/branches/rant/ext/math/ag_rand.h
===================================================================
--- antargis/branches/rant/ext/math/ag_rand.h	2007-07-08 18:45:17 UTC (rev 1138)
+++ antargis/branches/rant/ext/math/ag_rand.h	2007-07-09 19:19:54 UTC (rev 1139)
@@ -33,7 +33,7 @@
 // the prng (pseudo-random-number generator)'s state
 // to a string and restore it. This way we can deterministically
 // rerun a "randomized" game
-class AGRandomizer:public AGRandomizerBase
+class AGEXPORT AGRandomizer:public AGRandomizerBase
 {
  public:
   // restore a randomizer from a state-string (pretty long)
@@ -54,12 +54,12 @@
 };
 
 /// calls getMain()->getRand()->rand()
-int agRand(int i);
+AGEXPORT int agRand(int i);
 /// calls getMain()->getRand()->rand()
-float agRand(float f);
+AGEXPORT float agRand(float f);
 
 /// runs a small speed test
-void randSpeed();
+AGEXPORT void randSpeed();
 
 
 #endif



From davidkamphausen at mail.berlios.de  Wed Jul 11 20:41:48 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 11 Jul 2007 20:41:48 +0200
Subject: [Antargis-svn] r1140 - in antargis/branches/rant: . build
	build/configs ext/basic ext/gui ext/math ext/video
Message-ID: <200707111841.l6BIfmEd008504@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-11 20:41:46 +0200 (Wed, 11 Jul 2007)
New Revision: 1140

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/build/create_interface.rb
   antargis/branches/rant/ext/basic/ag_regex.h
   antargis/branches/rant/ext/basic/ag_xml.h
   antargis/branches/rant/ext/basic/headers.hh
   antargis/branches/rant/ext/basic/init.cc
   antargis/branches/rant/ext/gui/ag_menuitem.h
   antargis/branches/rant/ext/gui/headers.hh
   antargis/branches/rant/ext/math/ag_algebra.h
   antargis/branches/rant/ext/math/headers.hh
   antargis/branches/rant/ext/math/init.cc
   antargis/branches/rant/ext/video/headers.hh
   antargis/branches/rant/ext/video/init.cc
Log:
* even more fixes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/Rantfile	2007-07-11 18:41:46 UTC (rev 1140)
@@ -66,7 +66,7 @@
 ###########################################
 # all-target
 buildLibs=sourceDirs.collect{|d|"ext/"+"lib"+makeLibName(d)+".so"}
-interfaceLibs=sourceDirs.collect{|d|"ext/"+makeLibName(d)+".so"}
+interfaceLibs=sourceDirs[1..-1].collect{|d|"ext/"+makeLibName(d)+".so"} # exclude "ext/external"
 allTargets = buildLibs + interfaceLibs
 task :all => allTargets
 #
@@ -109,6 +109,7 @@
             sources=sources.select{|f|not f=~/\.so/}
         end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
+        puts "------",cmd,"--------------!"
 		sys cmd
         if ENV['WINDIR']
             sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
@@ -126,22 +127,27 @@
 	dir,dep=pair
 	libname=makeLibName(dir)
 	target="ext/"+makeLibName(dir)+".so"
-	#tsources=[dir+Dir.separator+libname+"swig.cc"]
-	tsources=[dir+"/"+libname+"swig.cc"]
+
+    # FIXME:re-include this
+    tsources=[]
+    tsources+=[dir+"/"+libname+"swig.cc"]
 	tsources.collect!{|f|f.sub_ext("oo")}
-	tsources+=["ext/lib"+makeLibName(dir)+".so"]
-    
+	#tsources+=["ext/lib"+makeLibName(dir)+".so"]
+    extlibs=["-l"+makeLibName(dir)]
     
 	dep.each{|d|
-		if d[0..0]!="-"
-			tsources+=["ext/"+makeLibName(d)+".so"]
+		if d[0..0]!="-" and d!="ext/external"
+			extlibs+=["-l"+makeLibName(d)]
 		end
-	}
+	}
+    #tsources+=rubyLib
+    
     puts "TARGET:",target
     puts "SOURES:",tsources
     puts "---"
 	task target => tsources do |t|
-		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), t.prerequisites.collect{|f|sys.expand_path(f)}.join(" "))
+		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (t.prerequisites.collect{|f|sys.expand_path(f)}+extlibs+rubyLib).join(" "))
+        puts "------",cmd,"--------------!"
 		sys cmd
 	end
 }
@@ -179,7 +185,7 @@
 }
 
 gen Rule, /^.*swig.(cc|h)$/ => swigSrc do |t|
-	cmd=makeCommand("SWIG_CALL",sys.expand_path(t.name),"-DAGEXPORT -Ibuild -I#{sys.expand_path(getDir(t.name))} #{var :INCLUDESTR} #{sys.expand_path(t.source)}")
+	cmd=makeCommand("SWIG_CALL",sys.expand_path(t.name),"-DAGEXPORT -Ibuild -I#{sys.expand_path(getDir(t.name))} #{var :INCLUDESTR} #{sys.expand_path(t.source)}".gsub("/",Dir.separator))
 	sys cmd
 end
 #
@@ -195,7 +201,7 @@
 puts "?=="
 	$sourceDeps.each{|t|
 		if name=~/#{t[0]}/
-			return t[1].select{|f|not f=~/-.*/}.collect{|f|f+"/interface.i"}.join(":")
+			return t[1].select{|f|not f=~/-.*/}.select{|f|not f=~/external/}.collect{|f|f+"/interface.i"}.join(":")
 		end
 	}
 	return ""
@@ -205,7 +211,8 @@
 	list=Dir[getDirUnix(target)+"/"+"*.h"].select{|f|not f=~/swig.h/}+Dir["build/*.rb"] # FIXME:replace
 	list+=importsForInterface(target).split(":")
 	list
-}
+}
+
 gen Rule, /^.*interface.i$/ => interfaceSrc do |t|
     cmd=makeCommand("CREATEINTERFACE",getDirUnix(sys.expand_path(t.name)),importsForInterface(t.name))
 	sys cmd

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-11 18:41:46 UTC (rev 1140)
@@ -16,7 +16,8 @@
 	"CCACHE"=>"$(ccache)",
 
 	"RUBYLIB"=>"msvcrt-ruby18",
-    "LIBS"=>"-lmingw32 -lSDLmain -lSDL -mwindows",
+    "LIBS"=>"-lmingw32 -lSDL -mwindows",
+    #"LIBS"=>"-lmingw32 -lSDLmain -lSDL -mwindows",
     "LIBDIR"=>"-L#{Dir.pwd}/build/win32/usr/lib",
     "LIBGL"=>"-lopengl32 -lglu32",
 	"LINK"=>"$(CXX)",
@@ -31,9 +32,10 @@
 	"CXX_CALL"=>"$(CCACHE) $(CXX) $(COMPILE_PARAMS)",
 	# build a shared library (.so or .dll)
 	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
-	#"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib --add-stdcall-alias -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	#"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
+	##"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Wl,--enable-auto-image-base -Xlinker --out-implib --add-stdcall-alias -Xlinker $(OUTPUT).a  $(INPUT) $(LIBDIR) -Lext",
 	# generate c++-code from a swig-interface file
-	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) $(INPUT)",
+	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) -Ic:/antargis/rant/build/win32/usr/include $(INPUT) ",
 	# generate dependencies for swig-interface files
 	"SWIGDEPS"=>"$(SWIG) -ruby -c++ -M $(INPUT)",
 

Modified: antargis/branches/rant/build/create_interface.rb
===================================================================
--- antargis/branches/rant/build/create_interface.rb	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/build/create_interface.rb	2007-07-11 18:41:46 UTC (rev 1140)
@@ -76,8 +76,11 @@
 	end
 end
 
-def getFiles(dir)
-	Dir[dir+Dir.separator+"*.h"].select{|f|not f=~/swig.h/} #-[dir+Dir.separator+"swig.h"]
+def getFiles(dir)
+    pattern=dir+"/"+"*.h"
+	files=Dir[pattern].select{|f|not f=~/swig.h/} #-[dir+Dir.separator+"swig.h"]
+    puts "getFiles #{dir}",pattern,"--",files,"----"
+    files  
 end
 
 ## check if the given string is contained in the file specified by filename
@@ -97,7 +100,8 @@
 
 	attr_reader :deriveList
 
-	def initialize(files,allfiles)
+	def initialize(files,allfiles)
+        puts "ParsedClasses:init()",files,"--",allfiles,"-----"
 		@rubyClasses=[]
 		@files=files
 		loadAllDerivations(allfiles)
@@ -298,9 +302,11 @@
 def findFilesWith(str)
     files=[]
     Find.find("ext") {|file|files << file}
-    files=files.select{|f|f=~/\.h$/}.select{|f|File.open(f).read=~/#{str}/}
+    files=files.select{|f|f=~/\.h$/}.select{|f|not f=~/swig.h/}.select{|f|File.open(f).read=~/#{str}/}
     #dirs=findDirsRecursively(".")
+    puts "findFilesWith #{str}:"
     puts files
+    puts "---"
     #exit
     files
     #Dir["*/*"].collect{|f|f.gsub(/\/.*/,"")}.uniq
@@ -312,7 +318,7 @@
 files=getSwigInterfaceFiles(getFiles(myInput.outputDir))
 
 
-cfiles=findFilesWith("swig")
+cfiles=findFilesWith("INCLUDE_SWIG")
 #exit
 
 #parsedClasses=ParsedClasses.new(files,`find $(pwd) -name "*.h"|grep -v swig`.split("\n"))
@@ -320,10 +326,11 @@
 files=parsedClasses.getFileList
 
 addfiles=[]
-myInput.swigInput.each{|inDir|
-	pattern=getDir(inDir)+Dir.separator+"*.h"
-	puts "PATTERN:",pattern
-	addfiles+=Dir[pattern].select{|f|not f=~/swig.h/}
+myInput.swigInput.each{|inDir|
+    puts "inDir #{inDir}"
+	pattern=getDirUnix(inDir)+"/*.h"
+	puts "PATTERN:",pattern,"!!!!"
+	addfiles+=Dir[pattern].select{|f|not f=~/swig.h/}.select{|f|File.open(f).read=~/INCLUDE_SWIG/}
 }
 
 generateInterfaceFile(myInput,files,addfiles)

Modified: antargis/branches/rant/ext/basic/ag_regex.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_regex.h	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/basic/ag_regex.h	2007-07-11 18:41:46 UTC (rev 1140)
@@ -21,7 +21,7 @@
 #ifndef AG_REGEX_H
 #define AG_REGEX_H
 
-#include "/usr/include/regex.h"
+#include <regex.h>
 #include <sys/types.h>
 #include <string>
 

Modified: antargis/branches/rant/ext/basic/ag_xml.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_xml.h	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/basic/ag_xml.h	2007-07-11 18:41:46 UTC (rev 1140)
@@ -123,7 +123,7 @@
 
 class AGEXPORT Parser
 {
-  struct Data
+  struct AGEXPORT Data
   {
     std::list<size_t> stack;
     std::list<size_t> linestack;

Modified: antargis/branches/rant/ext/basic/headers.hh
===================================================================
--- antargis/branches/rant/ext/basic/headers.hh	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/basic/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
@@ -1,37 +1,34 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/external/mtwist.h"
-#include "ext/external/randistrs.h"
-#include "ext/external/sge_config.h"
-#include "ext/external/sge_internal.h"
-#include "ext/external/sge_primitives.h"
-#include "ext/external/sge_surface.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_rubyobj.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_messageobject.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_singleton.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_rand_base.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_main.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_video_base.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_serial.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_config.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_xml.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_string_utf8.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_stringstream.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_fs.h"
-#include "/home/david/projects/antargis/rant/ext/basic/ag_utf8.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/basic/ag_rubyobj.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_messageobject.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_singleton.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_rand_base.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_main.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_video_base.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_serial.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_config.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_xml.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_string_utf8.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_stringstream.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_fs.h"
-%include "/home/david/projects/antargis/rant/ext/basic/ag_utf8.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+
+#include "c:/antargis/rant/ext/basic/ag_config.h"
+#include "c:/antargis/rant/ext/basic/ag_fs.h"
+#include "c:/antargis/rant/ext/basic/ag_geometry.h"
+#include "c:/antargis/rant/ext/basic/ag_main.h"
+#include "c:/antargis/rant/ext/basic/ag_messageobject.h"
+#include "c:/antargis/rant/ext/basic/ag_rand_base.h"
+#include "c:/antargis/rant/ext/basic/ag_rubyobj.h"
+#include "c:/antargis/rant/ext/basic/ag_serial.h"
+#include "c:/antargis/rant/ext/basic/ag_singleton.h"
+#include "c:/antargis/rant/ext/basic/ag_stringstream.h"
+#include "c:/antargis/rant/ext/basic/ag_string_utf8.h"
+#include "c:/antargis/rant/ext/basic/ag_utf8.h"
+#include "c:/antargis/rant/ext/basic/ag_video_base.h"
+#include "c:/antargis/rant/ext/basic/ag_xml.h"
+#ifdef SWIG
+%include "c:/antargis/rant/ext/basic/ag_config.h"
+%include "c:/antargis/rant/ext/basic/ag_fs.h"
+%include "c:/antargis/rant/ext/basic/ag_geometry.h"
+%include "c:/antargis/rant/ext/basic/ag_main.h"
+%include "c:/antargis/rant/ext/basic/ag_messageobject.h"
+%include "c:/antargis/rant/ext/basic/ag_rand_base.h"
+%include "c:/antargis/rant/ext/basic/ag_rubyobj.h"
+%include "c:/antargis/rant/ext/basic/ag_serial.h"
+%include "c:/antargis/rant/ext/basic/ag_singleton.h"
+%include "c:/antargis/rant/ext/basic/ag_stringstream.h"
+%include "c:/antargis/rant/ext/basic/ag_string_utf8.h"
+%include "c:/antargis/rant/ext/basic/ag_utf8.h"
+%include "c:/antargis/rant/ext/basic/ag_video_base.h"
+%include "c:/antargis/rant/ext/basic/ag_xml.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/basic/init.cc
===================================================================
--- antargis/branches/rant/ext/basic/init.cc	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/basic/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
@@ -13,7 +13,7 @@
 
 std::map<std::string,std::list<CastFunction> > agCastFunctions;
 
-void AG_Init_libantargisbasic()
+AGEXPORT void AG_Init_libantargisbasic()
 {
   TRACE;
   if(!hasMain())

Modified: antargis/branches/rant/ext/gui/ag_menuitem.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_menuitem.h	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/gui/ag_menuitem.h	2007-07-11 18:41:46 UTC (rev 1140)
@@ -28,7 +28,7 @@
 
 class AGMenu;
 
-class AGMenuItem:public AGTable
+class AGEXPORT AGMenuItem:public AGTable
 {
  public:
   AGMenuItem(AGWidget *pParent,const AGStringUtf8 &pText);
@@ -55,7 +55,7 @@
   bool mSelected;
 };
 
-class AGSubMenu:public AGMenuItem
+class AGEXPORT AGSubMenu:public AGMenuItem
 {
  public:
   AGSubMenu(AGWidget *pParent,const AGStringUtf8 &ptext);

Modified: antargis/branches/rant/ext/gui/headers.hh
===================================================================
--- antargis/branches/rant/ext/gui/headers.hh	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/gui/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
@@ -1,116 +1,89 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "ext/math/ag_gauss.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ag_serial_vec.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/GLee.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_surfacemanager.h"
-#include "ext/video/ag_gltexture.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_glscreen.h"
-#include "ext/video/ag_sdlscreen.h"
-#include "ext/video/ag_sgeexport.h"
-#include "ext/video/ag_draw.h"
-#include "ext/video/ag_png.h"
-#include "ext/video/ag_sdlpainter.h"
-#include "ext/video/ag_glpainter.h"
-#include "ext/video/ag_fbo.h"
-#include "ext/video/ag_vdebug.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_sdlsurface.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_clip_painttarget.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_projection.h"
-#include "ext/video/ag_painter.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_layoutfactory.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_widget.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_application.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_table.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_layout.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_colorbutton.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_image.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_screenwidget.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_listbox.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_frame.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_text.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_button.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_edit.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_radiogroup.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_scroller.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_tooltip.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_combo.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_menu.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_caption.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_window.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_checkbox.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_menuitem.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_radio.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_theme.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_border.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_background.h"
-#include "/home/david/projects/antargis/rant/ext/gui/ag_local.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/gui/ag_layoutfactory.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_widget.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_application.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_table.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_layout.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_colorbutton.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_image.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_screenwidget.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_listbox.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_frame.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_text.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_button.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_edit.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_radiogroup.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_scroller.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_tooltip.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_combo.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_menu.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_caption.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_window.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_checkbox.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_menuitem.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_radio.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_theme.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_border.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_background.h"
-%include "/home/david/projects/antargis/rant/ext/gui/ag_local.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "c:/antargis/rant/ext/gui/ag_application.h"
+#include "c:/antargis/rant/ext/gui/ag_background.h"
+#include "c:/antargis/rant/ext/gui/ag_border.h"
+#include "c:/antargis/rant/ext/gui/ag_button.h"
+#include "c:/antargis/rant/ext/gui/ag_caption.h"
+#include "c:/antargis/rant/ext/gui/ag_checkbox.h"
+#include "c:/antargis/rant/ext/gui/ag_colorbutton.h"
+#include "c:/antargis/rant/ext/gui/ag_combo.h"
+#include "c:/antargis/rant/ext/gui/ag_edit.h"
+#include "c:/antargis/rant/ext/gui/ag_frame.h"
+#include "c:/antargis/rant/ext/gui/ag_image.h"
+#include "c:/antargis/rant/ext/gui/ag_layout.h"
+#include "c:/antargis/rant/ext/gui/ag_layoutfactory.h"
+#include "c:/antargis/rant/ext/gui/ag_listbox.h"
+#include "c:/antargis/rant/ext/gui/ag_local.h"
+#include "c:/antargis/rant/ext/gui/ag_menu.h"
+#include "c:/antargis/rant/ext/gui/ag_menuitem.h"
+#include "c:/antargis/rant/ext/gui/ag_radio.h"
+#include "c:/antargis/rant/ext/gui/ag_radiogroup.h"
+#include "c:/antargis/rant/ext/gui/ag_screenwidget.h"
+#include "c:/antargis/rant/ext/gui/ag_scroller.h"
+#include "c:/antargis/rant/ext/gui/ag_table.h"
+#include "c:/antargis/rant/ext/gui/ag_text.h"
+#include "c:/antargis/rant/ext/gui/ag_theme.h"
+#include "c:/antargis/rant/ext/gui/ag_tooltip.h"
+#include "c:/antargis/rant/ext/gui/ag_widget.h"
+#include "c:/antargis/rant/ext/gui/ag_window.h"
+#ifdef SWIG
+%include "c:/antargis/rant/ext/gui/ag_application.h"
+%include "c:/antargis/rant/ext/gui/ag_background.h"
+%include "c:/antargis/rant/ext/gui/ag_border.h"
+%include "c:/antargis/rant/ext/gui/ag_button.h"
+%include "c:/antargis/rant/ext/gui/ag_caption.h"
+%include "c:/antargis/rant/ext/gui/ag_checkbox.h"
+%include "c:/antargis/rant/ext/gui/ag_colorbutton.h"
+%include "c:/antargis/rant/ext/gui/ag_combo.h"
+%include "c:/antargis/rant/ext/gui/ag_edit.h"
+%include "c:/antargis/rant/ext/gui/ag_frame.h"
+%include "c:/antargis/rant/ext/gui/ag_image.h"
+%include "c:/antargis/rant/ext/gui/ag_layout.h"
+%include "c:/antargis/rant/ext/gui/ag_layoutfactory.h"
+%include "c:/antargis/rant/ext/gui/ag_listbox.h"
+%include "c:/antargis/rant/ext/gui/ag_local.h"
+%include "c:/antargis/rant/ext/gui/ag_menu.h"
+%include "c:/antargis/rant/ext/gui/ag_menuitem.h"
+%include "c:/antargis/rant/ext/gui/ag_radio.h"
+%include "c:/antargis/rant/ext/gui/ag_radiogroup.h"
+%include "c:/antargis/rant/ext/gui/ag_screenwidget.h"
+%include "c:/antargis/rant/ext/gui/ag_scroller.h"
+%include "c:/antargis/rant/ext/gui/ag_table.h"
+%include "c:/antargis/rant/ext/gui/ag_text.h"
+%include "c:/antargis/rant/ext/gui/ag_theme.h"
+%include "c:/antargis/rant/ext/gui/ag_tooltip.h"
+%include "c:/antargis/rant/ext/gui/ag_widget.h"
+%include "c:/antargis/rant/ext/gui/ag_window.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/math/ag_algebra.h
===================================================================
--- antargis/branches/rant/ext/math/ag_algebra.h	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/math/ag_algebra.h	2007-07-11 18:41:46 UTC (rev 1140)
@@ -6,7 +6,7 @@
 #include <vector>
 #include <ag_string.h>
 
-class AGMatrixN
+class AGEXPORT AGMatrixN
 {
  public:
   AGMatrixN(size_t w,size_t h);

Modified: antargis/branches/rant/ext/math/headers.hh
===================================================================
--- antargis/branches/rant/ext/math/headers.hh	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/math/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
@@ -1,43 +1,27 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/external/mtwist.h"
-#include "ext/external/randistrs.h"
-#include "ext/external/sge_config.h"
-#include "ext/external/sge_internal.h"
-#include "ext/external/sge_primitives.h"
-#include "ext/external/sge_surface.h"
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "/home/david/projects/antargis/rant/ext/math/ag_rand.h"
-#include "/home/david/projects/antargis/rant/ext/math/ag_geometry.h"
-#include "/home/david/projects/antargis/rant/ext/math/ant_frustum.h"
-#include "/home/david/projects/antargis/rant/ext/math/ag_algebra.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/math/ag_rand.h"
-%include "/home/david/projects/antargis/rant/ext/math/ag_geometry.h"
-%include "/home/david/projects/antargis/rant/ext/math/ant_frustum.h"
-%include "/home/david/projects/antargis/rant/ext/math/ag_algebra.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "c:/antargis/rant/ext/math/ag_algebra.h"
+#include "c:/antargis/rant/ext/math/ag_geometry.h"
+#include "c:/antargis/rant/ext/math/ag_rand.h"
+#include "c:/antargis/rant/ext/math/ant_frustum.h"
+#ifdef SWIG
+%include "c:/antargis/rant/ext/math/ag_algebra.h"
+%include "c:/antargis/rant/ext/math/ag_geometry.h"
+%include "c:/antargis/rant/ext/math/ag_rand.h"
+%include "c:/antargis/rant/ext/math/ant_frustum.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/math/init.cc
===================================================================
--- antargis/branches/rant/ext/math/init.cc	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/math/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
@@ -3,7 +3,7 @@
 #include <ag_rand.h>
 
 
-void AG_Init_libantargismath()
+void AGEXPORT AG_Init_libantargismath()
 {
 	TRACE;
 	getMain()->setRand(new AGRandomizer(""));

Modified: antargis/branches/rant/ext/video/headers.hh
===================================================================
--- antargis/branches/rant/ext/video/headers.hh	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/video/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
@@ -1,65 +1,47 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/external/mtwist.h"
-#include "ext/external/randistrs.h"
-#include "ext/external/sge_config.h"
-#include "ext/external/sge_internal.h"
-#include "ext/external/sge_primitives.h"
-#include "ext/external/sge_surface.h"
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "ext/math/ag_gauss.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ag_serial_vec.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_painttarget.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_surface.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_texture.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_screen.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_fontengine.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_video.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_clip.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_rendercontext.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_texturecache.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_font.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_painter.h"
-#include "/home/david/projects/antargis/rant/ext/video/ag_color.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/video/ag_painttarget.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_surface.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_texture.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_screen.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_fontengine.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_video.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_clip.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_rendercontext.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_texturecache.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_font.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_painter.h"
-%include "/home/david/projects/antargis/rant/ext/video/ag_color.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "c:/antargis/rant/ext/video/ag_clip.h"
+#include "c:/antargis/rant/ext/video/ag_color.h"
+#include "c:/antargis/rant/ext/video/ag_font.h"
+#include "c:/antargis/rant/ext/video/ag_fontengine.h"
+#include "c:/antargis/rant/ext/video/ag_painter.h"
+#include "c:/antargis/rant/ext/video/ag_painttarget.h"
+#include "c:/antargis/rant/ext/video/ag_rendercontext.h"
+#include "c:/antargis/rant/ext/video/ag_screen.h"
+#include "c:/antargis/rant/ext/video/ag_surface.h"
+#include "c:/antargis/rant/ext/video/ag_texture.h"
+#include "c:/antargis/rant/ext/video/ag_texturecache.h"
+#include "c:/antargis/rant/ext/video/ag_video.h"
+#ifdef SWIG
+%include "c:/antargis/rant/ext/video/ag_clip.h"
+%include "c:/antargis/rant/ext/video/ag_color.h"
+%include "c:/antargis/rant/ext/video/ag_font.h"
+%include "c:/antargis/rant/ext/video/ag_fontengine.h"
+%include "c:/antargis/rant/ext/video/ag_painter.h"
+%include "c:/antargis/rant/ext/video/ag_painttarget.h"
+%include "c:/antargis/rant/ext/video/ag_rendercontext.h"
+%include "c:/antargis/rant/ext/video/ag_screen.h"
+%include "c:/antargis/rant/ext/video/ag_surface.h"
+%include "c:/antargis/rant/ext/video/ag_texture.h"
+%include "c:/antargis/rant/ext/video/ag_texturecache.h"
+%include "c:/antargis/rant/ext/video/ag_video.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/video/init.cc
===================================================================
--- antargis/branches/rant/ext/video/init.cc	2007-07-09 19:19:54 UTC (rev 1139)
+++ antargis/branches/rant/ext/video/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
@@ -2,7 +2,7 @@
 #include <ag_main.h>
 #include <ag_video.h>
 
-void AG_Init_libantargisvideo()
+void AGEXPORT AG_Init_libantargisvideo()
 {
   TRACE;
   AGVideoManager *video=new AGVideoManager;



From davidkamphausen at mail.berlios.de  Sat Jul 14 15:24:53 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 14 Jul 2007 15:24:53 +0200
Subject: [Antargis-svn] r1141 - in antargis/branches/rant: build
	ext/3dengine ext/basic ext/game ext/gui ext/math ext/sound ext/video
Message-ID: <200707141324.l6EDOrKM004961@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-14 15:24:51 +0200 (Sat, 14 Jul 2007)
New Revision: 1141

Modified:
   antargis/branches/rant/build/create_interface.rb
   antargis/branches/rant/ext/3dengine/anim_mesh_data.h
   antargis/branches/rant/ext/3dengine/ant_particle.h
   antargis/branches/rant/ext/3dengine/ant_projection.h
   antargis/branches/rant/ext/3dengine/headers.hh
   antargis/branches/rant/ext/3dengine/init.cc
   antargis/branches/rant/ext/3dengine/mesh.h
   antargis/branches/rant/ext/3dengine/mesh_2d.h
   antargis/branches/rant/ext/3dengine/mesh_2d_data.h
   antargis/branches/rant/ext/3dengine/mesh_data.h
   antargis/branches/rant/ext/3dengine/mesh_optimizer.h
   antargis/branches/rant/ext/3dengine/scene.cc
   antargis/branches/rant/ext/3dengine/scene.h
   antargis/branches/rant/ext/3dengine/scene_2d.cc
   antargis/branches/rant/ext/3dengine/scene_base.cc
   antargis/branches/rant/ext/3dengine/scene_base.h
   antargis/branches/rant/ext/3dengine/templates.i
   antargis/branches/rant/ext/basic/headers.hh
   antargis/branches/rant/ext/basic/init.cc
   antargis/branches/rant/ext/game/ant_app.h
   antargis/branches/rant/ext/game/entity.h
   antargis/branches/rant/ext/game/entptr.h
   antargis/branches/rant/ext/game/headers.hh
   antargis/branches/rant/ext/game/height_map.h
   antargis/branches/rant/ext/game/heuristic.h
   antargis/branches/rant/ext/game/init.cc
   antargis/branches/rant/ext/game/jobs.h
   antargis/branches/rant/ext/game/map.h
   antargis/branches/rant/ext/game/minimap.h
   antargis/branches/rant/ext/game/path.h
   antargis/branches/rant/ext/game/resource.h
   antargis/branches/rant/ext/game/terrain.h
   antargis/branches/rant/ext/game/water.h
   antargis/branches/rant/ext/gui/ag_background.h
   antargis/branches/rant/ext/gui/ag_border.h
   antargis/branches/rant/ext/gui/ag_button.h
   antargis/branches/rant/ext/gui/ag_caption.h
   antargis/branches/rant/ext/gui/ag_checkbox.h
   antargis/branches/rant/ext/gui/ag_colorbutton.h
   antargis/branches/rant/ext/gui/ag_combo.h
   antargis/branches/rant/ext/gui/ag_edit.h
   antargis/branches/rant/ext/gui/ag_frame.h
   antargis/branches/rant/ext/gui/ag_image.h
   antargis/branches/rant/ext/gui/ag_layout.h
   antargis/branches/rant/ext/gui/ag_listbox.h
   antargis/branches/rant/ext/gui/ag_local.h
   antargis/branches/rant/ext/gui/ag_menu.h
   antargis/branches/rant/ext/gui/ag_radio.h
   antargis/branches/rant/ext/gui/ag_radiogroup.h
   antargis/branches/rant/ext/gui/ag_screenwidget.h
   antargis/branches/rant/ext/gui/ag_scroller.h
   antargis/branches/rant/ext/gui/ag_table.h
   antargis/branches/rant/ext/gui/ag_text.h
   antargis/branches/rant/ext/gui/ag_theme.h
   antargis/branches/rant/ext/gui/ag_tooltip.h
   antargis/branches/rant/ext/gui/ag_widget.h
   antargis/branches/rant/ext/gui/ag_window.h
   antargis/branches/rant/ext/gui/headers.hh
   antargis/branches/rant/ext/gui/init.cc
   antargis/branches/rant/ext/math/ag_geometry.h
   antargis/branches/rant/ext/math/headers.hh
   antargis/branches/rant/ext/sound/ag_mixer.h
   antargis/branches/rant/ext/sound/ag_sound.h
   antargis/branches/rant/ext/sound/headers.hh
   antargis/branches/rant/ext/sound/init.cc
   antargis/branches/rant/ext/video/headers.hh
Log:
* so much changes for windows-compability

Modified: antargis/branches/rant/build/create_interface.rb
===================================================================
--- antargis/branches/rant/build/create_interface.rb	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/build/create_interface.rb	2007-07-14 13:24:51 UTC (rev 1141)
@@ -79,7 +79,7 @@
 def getFiles(dir)
     pattern=dir+"/"+"*.h"
 	files=Dir[pattern].select{|f|not f=~/swig.h/} #-[dir+Dir.separator+"swig.h"]
-    puts "getFiles #{dir}",pattern,"--",files,"----"
+    #puts "getFiles #{dir}",pattern,"--",files,"----"
     files  
 end
 
@@ -101,11 +101,11 @@
 	attr_reader :deriveList
 
 	def initialize(files,allfiles)
-        puts "ParsedClasses:init()",files,"--",allfiles,"-----"
+        #puts "ParsedClasses:init()",files,"--",allfiles,"-----"
 		@rubyClasses=[]
-		@files=files
-		loadAllDerivations(allfiles)
-		@myfiles=files
+		@files=files.collect{|f|f.gsub(/.*\/ext\//,"ext/")}
+		loadAllDerivations(allfiles.collect{|f|f.gsub(/.*\/ext\//,"ext/")})
+		@myfiles=@files #files.collect{|f|f.gsub(/.*ext/,"ext")}
 		processDerivations
 		initLevels
 	end
@@ -234,16 +234,19 @@
 
 	# in correct order
 	def getFileList
-
+
 		# build file list out of class-order (files may appear several times)
 		files=[]
 		l=@levels.values.max
 		(0..l).each{|i|
-			@levels.each{|n,level|
-				if level==i and @class2File[n]
+            puts "LEVEL #{i}"
+			@levels.each{|n,level|
+				if level==i and @class2File[n]
+                    puts n
 					files << @class2File[n]
-				end
+				end
 			}
+            puts "----"
 		}
 
 		# add files of classes with unknown level
@@ -251,16 +254,22 @@
 			if @levels[c].nil? and @class2File[c]
 				files << @class2File[c]
 			end
-		}
-
+		}
+        puts "myfiles:", at myfiles,"---"
+        
+        puts "FILES:",files,"---"
 		files=files.select{|f|@myfiles.member?(f)} # select only "my" files - those included in this directory
+        puts "FILES after select:",files,"---"
 		addfiles=@files-files
 		files+=addfiles                            # add files that are in other directories
+        puts "FILES (add:",files,"---"
 
 		# unique the array
 		if files.length>0
 			files.uniq!
-		end
+		end
+        puts "FILES (uniq):",files,"---"
+
 		files
 	end
 
@@ -280,7 +289,7 @@
 def generateInterfaceFile(myInput,files,addfiles)
 	filename=myInput.interfaceName
 	interfaceI=File.open(filename,"w")
-	puts filename
+	#puts filename
     #raise 1
 	interfaceI.puts interface_template(myInput.moduleName,files,myInput.swigInput,addfiles,myInput.outputDir)
 	
@@ -304,9 +313,9 @@
     Find.find("ext") {|file|files << file}
     files=files.select{|f|f=~/\.h$/}.select{|f|not f=~/swig.h/}.select{|f|File.open(f).read=~/#{str}/}
     #dirs=findDirsRecursively(".")
-    puts "findFilesWith #{str}:"
-    puts files
-    puts "---"
+    #puts "findFilesWith #{str}:"
+    #puts files
+    #puts "---"
     #exit
     files
     #Dir["*/*"].collect{|f|f.gsub(/\/.*/,"")}.uniq

Modified: antargis/branches/rant/ext/3dengine/anim_mesh_data.h
===================================================================
--- antargis/branches/rant/ext/3dengine/anim_mesh_data.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/anim_mesh_data.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -7,13 +7,13 @@
 #include "glsl.h"
 #include "ag_texture.h"
 
-struct KeyFrame
+struct AGEXPORT KeyFrame
 {
   float time;
   AGVector3 v;
 };
 
-struct Bone
+struct AGEXPORT Bone
 {
   size_t id;
   AGVector3 pos,rot;
@@ -30,7 +30,7 @@
   AGVector3 interpolate(const std::vector<KeyFrame> &frames,float t);
 };
 
-struct Animation
+struct AGEXPORT Animation
 {
   float begin;
   float end;

Modified: antargis/branches/rant/ext/3dengine/ant_particle.h
===================================================================
--- antargis/branches/rant/ext/3dengine/ant_particle.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/ant_particle.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -10,7 +10,7 @@
    some very simple particle engine for displaying
    smoke and ugly fire.
 */
-class AntParticle:public SceneNode
+class AGEXPORT AntParticle:public SceneNode
 {
   /// this represents one single particle
   struct Piece

Modified: antargis/branches/rant/ext/3dengine/ant_projection.h
===================================================================
--- antargis/branches/rant/ext/3dengine/ant_projection.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/ant_projection.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -7,7 +7,7 @@
 
 #include <ant_frustum.h>
 
-struct Viewport
+struct AGEXPORT Viewport
 {
   GLint viewport[4];
 #ifndef SWIG
@@ -19,7 +19,7 @@
 };
 
 
-class AntProjection
+class AGEXPORT AntProjection
 {
  public:
   AntProjection();

Modified: antargis/branches/rant/ext/3dengine/headers.hh
===================================================================
--- antargis/branches/rant/ext/3dengine/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,55 +1,61 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/mesh_data.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/scene_base.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/scenenode.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/mesh_2d_data.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/anim_mesh_data.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/mesh.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/mesh_2d.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/ant_particle.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/scene.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/anim_mesh.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/ant_camera.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/mesh_optimizer.h"
-#include "/home/david/projects/antargis/rant/ext/3dengine/ant_projection.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/3dengine/mesh_data.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/scene_base.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/scenenode.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/mesh_2d_data.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/anim_mesh_data.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/mesh.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/mesh_2d.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/ant_particle.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/scene.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/anim_mesh.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/ant_camera.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/mesh_optimizer.h"
-%include "/home/david/projects/antargis/rant/ext/3dengine/ant_projection.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/ant_projection.h"
+#ifdef SWIG
+%include "ext/3dengine/mesh_data.h"
+%include "ext/3dengine/scene_base.h"
+%include "ext/3dengine/scenenode.h"
+%include "ext/3dengine/mesh_2d_data.h"
+%include "ext/3dengine/anim_mesh_data.h"
+%include "ext/3dengine/mesh.h"
+%include "ext/3dengine/mesh_2d.h"
+%include "ext/3dengine/ant_particle.h"
+%include "ext/3dengine/scene.h"
+%include "ext/3dengine/anim_mesh.h"
+%include "ext/3dengine/ant_camera.h"
+%include "ext/3dengine/mesh_optimizer.h"
+%include "ext/3dengine/ant_projection.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/3dengine/init.cc
===================================================================
--- antargis/branches/rant/ext/3dengine/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/init.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,6 +1,6 @@
 #include <ag_debug.h>
 
-void AG_Init_libantargis3dengine()
+AGEXPORT void AG_Init_libantargis3dengine()
 {
   TRACE;
 }

Modified: antargis/branches/rant/ext/3dengine/mesh.h
===================================================================
--- antargis/branches/rant/ext/3dengine/mesh.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/mesh.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -16,7 +16,7 @@
     Actual drawing is done by MeshData.
 
 */
-class Mesh:public SceneNode
+class AGEXPORT Mesh:public SceneNode
 {
   MeshData *mData;
   float mRotation;

Modified: antargis/branches/rant/ext/3dengine/mesh_2d.h
===================================================================
--- antargis/branches/rant/ext/3dengine/mesh_2d.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/mesh_2d.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -7,7 +7,7 @@
 #include "scene_2d.h"
 #include "mesh_2d_data.h"
 
-class Mesh2D:public SceneNode
+class AGEXPORT Mesh2D:public SceneNode
 {
  public:
   Mesh2D(Scene2D *pScene);

Modified: antargis/branches/rant/ext/3dengine/mesh_2d_data.h
===================================================================
--- antargis/branches/rant/ext/3dengine/mesh_2d_data.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/mesh_2d_data.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -5,7 +5,7 @@
 
 #include <ag_texture.h>
 
-class Mesh2DData:public AGRubyObject
+class AGEXPORT Mesh2DData:public AGRubyObject
 {
  public:
   Mesh2DData(AGTexture *pTexture);

Modified: antargis/branches/rant/ext/3dengine/mesh_data.h
===================================================================
--- antargis/branches/rant/ext/3dengine/mesh_data.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/mesh_data.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -10,7 +10,7 @@
 
 // Mesh organizing
 
-class MeshData:public AGRubyObject
+class AGEXPORT MeshData:public AGRubyObject
 {
   VertexArray mArray;
   AGTexture mTexture;

Modified: antargis/branches/rant/ext/3dengine/mesh_optimizer.h
===================================================================
--- antargis/branches/rant/ext/3dengine/mesh_optimizer.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/mesh_optimizer.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -18,7 +18,7 @@
     3) get a VertexArray by calling getArray()
 */
 
-struct MeshVertex
+struct AGEXPORT MeshVertex
 {
   AGVector4 v,c;
   AGVector3 n;
@@ -29,7 +29,7 @@
 };
 
 // generates index list for same vertices (with same colors/normals..)
-class MeshOptimizer
+class AGEXPORT MeshOptimizer
 {
   std::map<MeshVertex,int> mMap;
   std::vector<int> mIndices;
@@ -48,6 +48,6 @@
 
 // some old function ???
 // used in gen_tree ?? this gen_tree shouldn't be used anymore, too
-MeshOptimizer loadFromText(const std::string &pText, bool withTex, float zoom);
+AGEXPORT MeshOptimizer loadFromText(const std::string &pText, bool withTex, float zoom);
 
 #endif

Modified: antargis/branches/rant/ext/3dengine/scene.cc
===================================================================
--- antargis/branches/rant/ext/3dengine/scene.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/scene.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -114,13 +114,13 @@
 
 
 
-Scene::NodeList Scene::getCurrentNodes()
+SceneNodeList Scene::getCurrentNodes()
 {
   STACKTRACE;
   AGVector2 p=mCamera.getPosition().dim2();
-  NodeList l=mTree->get(AGRect2(p+AGVector2(-30,-30),p+AGVector2(30,30)));
+  SceneNodeList l=mTree->get(AGRect2(p+AGVector2(-30,-30),p+AGVector2(30,30)));
 
-  for(NodeList::iterator i=l.begin();i!=l.end();i++)
+  for(SceneNodeList::iterator i=l.begin();i!=l.end();i++)
     {
       if(mNodeSet.find(*i)==mNodeSet.end())
 	cdebug("ERROR:"<<*i);
@@ -141,7 +141,7 @@
 
   {
     STACKTRACE;
-    NodeList l=getCurrentNodes();
+    SceneNodeList l=getCurrentNodes();
     Nodes sorted;
     std::copy(l.rbegin(),l.rend(),std::back_inserter(sorted));
     
@@ -266,7 +266,7 @@
 
   int drawn=0;
 
-  NodeList l=getCurrentNodes();
+  SceneNodeList l=getCurrentNodes();
   Nodes sorted;
   std::copy(l.begin(),l.end(),std::back_inserter(sorted));
 
@@ -355,9 +355,9 @@
 
   AntFrustum cFrustum=mCamera.getCameraProjection().getFrustum();
   
-  NodeList l=getCurrentNodes();
+  SceneNodeList l=getCurrentNodes();
 
-  for(NodeList::iterator i=l.begin();i!=l.end();i++)
+  for(SceneNodeList::iterator i=l.begin();i!=l.end();i++)
     {
       STACKTRACE;
       if((*i)->visible() && (*i)->bbox().collides(frustum))
@@ -380,7 +380,7 @@
 /// x and y are in screen-coordinates in normal fashion
 /// so (0,0) is the top left corner and (1023,767) bottom right.
 /// the same for w and h
-Scene::PickResult Scene::pick(float x,float y,float w,float h)
+PickResult Scene::pick(float x,float y,float w,float h)
 {
   STACKTRACE;
   size_t bufsize=4000;
@@ -430,7 +430,7 @@
 }
 
 /// helper function for gettin PickResult from opengl's buffers
-Scene::PickResult Scene::processHits (int hits, GLuint *buffer,float px,float py)
+PickResult Scene::processHits (int hits, GLuint *buffer,float px,float py)
 {
   STACKTRACE;
   PickResult result;

Modified: antargis/branches/rant/ext/3dengine/scene.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scene.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/scene.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -110,7 +110,7 @@
   /*
   AGVector2 getPosition(const AGVector4 &v) const;
   */
-  NodeList getCurrentNodes();
+  SceneNodeList getCurrentNodes();
 
 
   void setEnabled(bool p);

Modified: antargis/branches/rant/ext/3dengine/scene_2d.cc
===================================================================
--- antargis/branches/rant/ext/3dengine/scene_2d.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/scene_2d.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -18,7 +18,7 @@
 {
   // FIXME
   
-  NodeList nodeList=getCurrentNodes();
+  SceneNodeList nodeList=getCurrentNodes();
   Nodes ns;
   std::copy(nodeList.begin(),nodeList.end(),std::back_inserter(ns));
 
@@ -31,10 +31,10 @@
     (*i)->draw();
 }
 
-SceneBase::PickResult Scene2D::pick(float x,float y,float w,float h)
+PickResult Scene2D::pick(float x,float y,float w,float h)
 {
   PickResult result;
-  NodeList nodeList=getCurrentNodes();
+  SceneNodeList nodeList=getCurrentNodes();
 
   Nodes ns;
   std::copy(nodeList.begin(),nodeList.end(),std::back_inserter(ns));
@@ -85,11 +85,11 @@
   return v.dim2();
 }
 
-SceneBase::NodeList Scene2D::getCurrentNodes()
+SceneNodeList Scene2D::getCurrentNodes()
 {
   //  cdebug("FIXME");
 
-  NodeList l;
+  SceneNodeList l;
   std::copy(mNodes.begin(),mNodes.end(),std::back_inserter(l));
 
   //  throw std::runtime_error("FIXME");

Modified: antargis/branches/rant/ext/3dengine/scene_base.cc
===================================================================
--- antargis/branches/rant/ext/3dengine/scene_base.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/scene_base.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -98,9 +98,9 @@
   //    return;
   // advance only in view
 
-  NodeList l=getCurrentNodes();
+  SceneNodeList l=getCurrentNodes();
 
-  for(NodeList::iterator i=l.begin();i!=l.end();i++)
+  for(SceneNodeList::iterator i=l.begin();i!=l.end();i++)
     {
       if((*i)->visible())
 	(*i)->advance(time);
@@ -136,8 +136,8 @@
   return mCamera;
 }
 
-SceneBase::NodeList SceneBase::getCurrentNodes()
+SceneNodeList SceneBase::getCurrentNodes()
 {
   throw std::runtime_error("not implemented!");
-  return NodeList();
+  return SceneNodeList();
 }

Modified: antargis/branches/rant/ext/3dengine/scene_base.h
===================================================================
--- antargis/branches/rant/ext/3dengine/scene_base.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/scene_base.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -25,12 +25,14 @@
 template<class T>
 class QuadTree;
 
+
+typedef std::vector<PickNode> PickResult;
+typedef std::list<SceneNode*> SceneNodeList;
 
 class AGEXPORT SceneBase:public AGRubyObject
 {
  public:
-  typedef std::vector<PickNode> PickResult;
-  typedef std::list<SceneNode*> NodeList;
+  //
 
   SceneBase(int w,int h);
   virtual ~SceneBase();
@@ -71,7 +73,7 @@
 
 
   /** get currently visible nodes */
-  virtual NodeList getCurrentNodes();
+  virtual SceneNodeList getCurrentNodes();
 
   //  void setEnabled(bool p);
 

Modified: antargis/branches/rant/ext/3dengine/templates.i
===================================================================
--- antargis/branches/rant/ext/3dengine/templates.i	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/3dengine/templates.i	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,4 +1,4 @@
 %template(SceneNodeVector) std::vector<SceneNodePtr>;
 %template(PickResult) std::vector<PickNode>;
 %template(AGPairVec2Surface) std::pair<AGVector2,AGSurface*>;
-%template(SceneNodeList) std::list<SceneNode*>;
\ No newline at end of file
+%template(SceneNodeList) std::list<SceneNode*>;

Modified: antargis/branches/rant/ext/basic/headers.hh
===================================================================
--- antargis/branches/rant/ext/basic/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/basic/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,34 +1,34 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
 
-#include "c:/antargis/rant/ext/basic/ag_config.h"
-#include "c:/antargis/rant/ext/basic/ag_fs.h"
-#include "c:/antargis/rant/ext/basic/ag_geometry.h"
-#include "c:/antargis/rant/ext/basic/ag_main.h"
-#include "c:/antargis/rant/ext/basic/ag_messageobject.h"
-#include "c:/antargis/rant/ext/basic/ag_rand_base.h"
-#include "c:/antargis/rant/ext/basic/ag_rubyobj.h"
-#include "c:/antargis/rant/ext/basic/ag_serial.h"
-#include "c:/antargis/rant/ext/basic/ag_singleton.h"
-#include "c:/antargis/rant/ext/basic/ag_stringstream.h"
-#include "c:/antargis/rant/ext/basic/ag_string_utf8.h"
-#include "c:/antargis/rant/ext/basic/ag_utf8.h"
-#include "c:/antargis/rant/ext/basic/ag_video_base.h"
-#include "c:/antargis/rant/ext/basic/ag_xml.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_utf8.h"
 #ifdef SWIG
-%include "c:/antargis/rant/ext/basic/ag_config.h"
-%include "c:/antargis/rant/ext/basic/ag_fs.h"
-%include "c:/antargis/rant/ext/basic/ag_geometry.h"
-%include "c:/antargis/rant/ext/basic/ag_main.h"
-%include "c:/antargis/rant/ext/basic/ag_messageobject.h"
-%include "c:/antargis/rant/ext/basic/ag_rand_base.h"
-%include "c:/antargis/rant/ext/basic/ag_rubyobj.h"
-%include "c:/antargis/rant/ext/basic/ag_serial.h"
-%include "c:/antargis/rant/ext/basic/ag_singleton.h"
-%include "c:/antargis/rant/ext/basic/ag_stringstream.h"
-%include "c:/antargis/rant/ext/basic/ag_string_utf8.h"
-%include "c:/antargis/rant/ext/basic/ag_utf8.h"
-%include "c:/antargis/rant/ext/basic/ag_video_base.h"
-%include "c:/antargis/rant/ext/basic/ag_xml.h"
+%include "ext/basic/ag_rubyobj.h"
+%include "ext/basic/ag_messageobject.h"
+%include "ext/basic/ag_singleton.h"
+%include "ext/basic/ag_rand_base.h"
+%include "ext/basic/ag_main.h"
+%include "ext/basic/ag_video_base.h"
+%include "ext/basic/ag_geometry.h"
+%include "ext/basic/ag_serial.h"
+%include "ext/basic/ag_config.h"
+%include "ext/basic/ag_xml.h"
+%include "ext/basic/ag_string_utf8.h"
+%include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_fs.h"
+%include "ext/basic/ag_utf8.h"
 #endif
 #endif

Modified: antargis/branches/rant/ext/basic/init.cc
===================================================================
--- antargis/branches/rant/ext/basic/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/basic/init.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -11,7 +11,7 @@
 
 typedef swig_type_info*(*CastFunction)(void**);
 
-std::map<std::string,std::list<CastFunction> > agCastFunctions;
+AGEXPORT std::map<std::string,std::list<CastFunction> > agCastFunctions;
 
 AGEXPORT void AG_Init_libantargisbasic()
 {

Modified: antargis/branches/rant/ext/game/ant_app.h
===================================================================
--- antargis/branches/rant/ext/game/ant_app.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/ant_app.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -36,7 +36,7 @@
 extern std::ofstream out;
 #endif
 
-class GLApp:public AGApplication
+class AGEXPORT GLApp:public AGApplication
 {
   bool shadow;
   float mx,my;
@@ -62,8 +62,8 @@
 
   bool eventFrame(float t);
 
-  virtual void eventClick(const Scene::PickResult &pNodes,int button);
-  virtual void eventHover(const Scene::PickResult &pNodes,int button);
+  virtual void eventClick(const PickResult &pNodes,int button);
+  virtual void eventHover(const PickResult &pNodes,int button);
 
   virtual bool eventMouseButtonDown(AGEvent *m);
   virtual bool eventMouseButtonUp(AGEvent *m);

Modified: antargis/branches/rant/ext/game/entity.h
===================================================================
--- antargis/branches/rant/ext/game/entity.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/entity.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -39,7 +39,7 @@
 
 #include "resource.h"
 
-class AntEntity:public AGRubyObject
+class AGEXPORT AntEntity:public AGRubyObject
   {
   public:
     typedef std::list<SceneNode*> Meshes;

Modified: antargis/branches/rant/ext/game/entptr.h
===================================================================
--- antargis/branches/rant/ext/game/entptr.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/entptr.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,9 +1,10 @@
 #ifndef ENTPTR_H
 #define ENTPTR_H
-
+
+#include <ag_base.h>
 #include "entity.h"
 
-class AntEntityPtr
+class AGEXPORT AntEntityPtr
 {
  public:
   AntEntityPtr(const AntEntityPtr &p);

Modified: antargis/branches/rant/ext/game/headers.hh
===================================================================
--- antargis/branches/rant/ext/game/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,131 +1,97 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "ext/math/ag_gauss.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ag_serial_vec.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/GLee.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_surfacemanager.h"
-#include "ext/video/ag_gltexture.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_glscreen.h"
-#include "ext/video/ag_sdlscreen.h"
-#include "ext/video/ag_sgeexport.h"
-#include "ext/video/ag_draw.h"
-#include "ext/video/ag_png.h"
-#include "ext/video/ag_sdlpainter.h"
-#include "ext/video/ag_glpainter.h"
-#include "ext/video/ag_fbo.h"
-#include "ext/video/ag_vdebug.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_sdlsurface.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_clip_painttarget.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_projection.h"
-#include "ext/video/ag_painter.h"
-#include "ext/gui/ag_image.h"
-#include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
-#include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
-#include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
-#include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
-#include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
-#include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/quadtree.h"
-#include "ext/3dengine/ant_camera.h"
-#include "ext/3dengine/mesh_sort.h"
-#include "ext/3dengine/ant_renderer.h"
-#include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/mesh.h"
-#include "ext/3dengine/vertex_array.h"
-#include "ext/3dengine/glsl.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/anim_mesh_data.h"
-#include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/scene_2d.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/ag_glsl.h"
-#include "ext/3dengine/ant_particle.h"
-#include "/home/david/projects/antargis/rant/ext/game/path.h"
-#include "/home/david/projects/antargis/rant/ext/game/terrain.h"
-#include "/home/david/projects/antargis/rant/ext/game/entity.h"
-#include "/home/david/projects/antargis/rant/ext/game/water.h"
-#include "/home/david/projects/antargis/rant/ext/game/height_map.h"
-#include "/home/david/projects/antargis/rant/ext/game/ant_app.h"
-#include "/home/david/projects/antargis/rant/ext/game/minimap.h"
-#include "/home/david/projects/antargis/rant/ext/game/map.h"
-#include "/home/david/projects/antargis/rant/ext/game/heuristic.h"
-#include "/home/david/projects/antargis/rant/ext/game/jobs.h"
-#include "/home/david/projects/antargis/rant/ext/game/resource.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/game/path.h"
-%include "/home/david/projects/antargis/rant/ext/game/terrain.h"
-%include "/home/david/projects/antargis/rant/ext/game/entity.h"
-%include "/home/david/projects/antargis/rant/ext/game/water.h"
-%include "/home/david/projects/antargis/rant/ext/game/height_map.h"
-%include "/home/david/projects/antargis/rant/ext/game/ant_app.h"
-%include "/home/david/projects/antargis/rant/ext/game/minimap.h"
-%include "/home/david/projects/antargis/rant/ext/game/map.h"
-%include "/home/david/projects/antargis/rant/ext/game/heuristic.h"
-%include "/home/david/projects/antargis/rant/ext/game/jobs.h"
-%include "/home/david/projects/antargis/rant/ext/game/resource.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_local.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_window.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/game/path.h"
+#include "ext/game/terrain.h"
+#include "ext/game/entity.h"
+#include "ext/game/water.h"
+#include "ext/game/height_map.h"
+#include "ext/game/ant_app.h"
+#include "ext/game/minimap.h"
+#include "ext/game/map.h"
+#include "ext/game/heuristic.h"
+#include "ext/game/jobs.h"
+#include "ext/game/resource.h"
+#ifdef SWIG
+%include "ext/game/path.h"
+%include "ext/game/terrain.h"
+%include "ext/game/entity.h"
+%include "ext/game/water.h"
+%include "ext/game/height_map.h"
+%include "ext/game/ant_app.h"
+%include "ext/game/minimap.h"
+%include "ext/game/map.h"
+%include "ext/game/heuristic.h"
+%include "ext/game/jobs.h"
+%include "ext/game/resource.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/game/height_map.h
===================================================================
--- antargis/branches/rant/ext/game/height_map.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/height_map.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -20,7 +20,7 @@
 
 #define FIRSTTERRAIN WATER
 
-class HeightMap:public AGMessageObject
+class AGEXPORT HeightMap:public AGMessageObject
 {
  public:
   HeightMap(SceneBase *pScene,int w,int h);

Modified: antargis/branches/rant/ext/game/heuristic.h
===================================================================
--- antargis/branches/rant/ext/game/heuristic.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/heuristic.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -5,7 +5,7 @@
 
 #include <ag_geometry.h>
 
-class HeuristicFunction
+class AGEXPORT HeuristicFunction
 {
  public:
   typedef std::pair<AGVector2,AGVector2> Input;
@@ -18,7 +18,7 @@
   virtual Output operator()(const Input &input);
 };
 
-class StoredHeuristicFunction:public HeuristicFunction
+class AGEXPORT StoredHeuristicFunction:public HeuristicFunction
 {
   // FIXME: maybe store measure-count, too - and average!!!
 

Modified: antargis/branches/rant/ext/game/init.cc
===================================================================
--- antargis/branches/rant/ext/game/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/init.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -2,7 +2,7 @@
 
 #include <minimap.h>
 
-void AG_Init_libantargisgame()
+AGEXPORT void AG_Init_libantargisgame()
 {
 	TRACE;
 

Modified: antargis/branches/rant/ext/game/jobs.h
===================================================================
--- antargis/branches/rant/ext/game/jobs.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/jobs.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -30,7 +30,7 @@
    Job class won't be exported to Ruby, because their constant
    creation and deletion fills up the GC otherwise.
 */
-class Job
+class AGEXPORT Job
 {
   int priority;
   bool inited;
@@ -53,7 +53,7 @@
   bool valid() const;
 };
 
-class RestJob:public Job
+class AGEXPORT RestJob:public Job
 {
   float mTime;
  public:
@@ -68,7 +68,7 @@
 
 };
 
-class MoveJob:public Job
+class AGEXPORT MoveJob:public Job
 {
   AGVector2 mTarget;
   AGVector3 mTarget3;
@@ -100,7 +100,7 @@
 };
 
 // FIXME: implement near and far fighting (arrows)
-class FightJob:public Job
+class AGEXPORT FightJob:public Job
 {
   AntEntity *mTarget;
   float fightDistance;
@@ -124,8 +124,9 @@
   virtual AGString xmlName() const;
   
 };
-
-class FetchJob:public MoveJob
+
+// FIXME: check if this can be discarded ???
+class AGEXPORT FetchJob:public MoveJob
 {
   AGString mWhat;
   AntEntity *mTarget;

Modified: antargis/branches/rant/ext/game/map.h
===================================================================
--- antargis/branches/rant/ext/game/map.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/map.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -41,7 +41,7 @@
 class AnimMesh;
 class Mesh2D;
 
-class AntMap:public HeightMap
+class AGEXPORT AntMap:public HeightMap
 {
  public:
   typedef std::list<AntEntity*> EntityList;
@@ -116,7 +116,7 @@
 
 };
 
-AntMap *getMap();
+AGEXPORT AntMap *getMap();
 
 
 #endif

Modified: antargis/branches/rant/ext/game/minimap.h
===================================================================
--- antargis/branches/rant/ext/game/minimap.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/minimap.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -22,7 +22,7 @@
    because typically this object is created within an xml-layout-file
 
  */
-class MiniMap:public AGWidget
+class AGEXPORT MiniMap:public AGWidget
 {
  public:
   MiniMap(AGWidget *p,const AGRect2 &r,AntMap *pMap);
@@ -59,8 +59,8 @@
   AGSurface mSurface;
 };
 
-MiniMap *toMiniMap(AGWidget *w);
+//MiniMap *toMiniMap(AGWidget *w);
 
-void registerMinimapCreator();
+AGEXPORT void registerMinimapCreator();
 
 #endif

Modified: antargis/branches/rant/ext/game/path.h
===================================================================
--- antargis/branches/rant/ext/game/path.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/path.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -24,14 +24,14 @@
 
 class Heuristic;
 
-class PathWeighter:public AGRubyObject
+class AGEXPORT PathWeighter:public AGRubyObject
 {
  public:
   virtual ~PathWeighter();
   virtual float weight(float h0,float h1);
 };
 
-class MapPathWeighter:public PathWeighter
+class AGEXPORT MapPathWeighter:public PathWeighter
 {
  public:
   MapPathWeighter(HeightMap *pMap);
@@ -46,7 +46,7 @@
 };
 
 
-struct AGVector2Sort
+struct AGEXPORT AGVector2Sort
 {
   public:
   bool operator()(const AGVector2 &a,const AGVector2 &b)
@@ -56,7 +56,7 @@
 };
 
 
-class SimpleGraph:public AGRubyObject
+class AGEXPORT SimpleGraph:public AGRubyObject
 {
  public:
   struct Node;
@@ -181,11 +181,11 @@
 
 };
 
-SimpleGraph *makeGraph(HeightMap *pMap, MapPathWeighter *pWeighter,size_t res=1);
-HeuristicFunction *computeHeuristic(SimpleGraph *g);
+AGEXPORT SimpleGraph *makeGraph(HeightMap *pMap, MapPathWeighter *pWeighter,size_t res=1);
+AGEXPORT HeuristicFunction *computeHeuristic(SimpleGraph *g);
 
 
-class DecimatedGraph:public SimpleGraph
+class AGEXPORT DecimatedGraph:public SimpleGraph
 {
  public:
   DecimatedGraph();
@@ -202,7 +202,7 @@
 
 struct Path;
 
-class Heuristic
+class AGEXPORT Heuristic
 {
   AGVector2 to;
   HeuristicFunction *p;
@@ -214,7 +214,7 @@
   float distance(const AGVector2&from);
 };
 
-struct Path:public std::list<SimpleGraph::Node*>
+struct AGEXPORT Path:public std::list<SimpleGraph::Node*>
 {
   float weight;
   
@@ -229,7 +229,7 @@
 };
 
 
-class PathDebugging
+class AGEXPORT PathDebugging
 {
  public:
   virtual ~PathDebugging()
@@ -241,7 +241,7 @@
 };
   
 
-class Pathfinder:public AGRubyObject
+class AGEXPORT Pathfinder:public AGRubyObject
 {
  public:
 

Modified: antargis/branches/rant/ext/game/resource.h
===================================================================
--- antargis/branches/rant/ext/game/resource.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/resource.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -17,7 +17,7 @@
 FIXME: maybe remove Resource from c++??
 
 */
-class Resource
+class AGEXPORT Resource
 {
   std::map<std::string,float> r;
  public:

Modified: antargis/branches/rant/ext/game/terrain.h
===================================================================
--- antargis/branches/rant/ext/game/terrain.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/terrain.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
    (Terrain and water is tiled for the ease of culling)
    for more information on drawing-modes and such go to SceneNode.
  */
-class TerrainPiece:public SceneNode
+class AGEXPORT TerrainPiece:public SceneNode
 {
  public:
   TerrainPiece(SceneBase *pScene,Terrain *t,HeightMap &map,int x,int y,int w,int h,const AGVector4 &pPos,int scale);
@@ -58,7 +58,7 @@
 };
 
 
-class TerrainBase:public AGRubyObject
+class AGEXPORT TerrainBase:public AGRubyObject
 {
  public:
   TerrainBase(SceneBase *pScene,HeightMap &map);
@@ -90,7 +90,7 @@
    that in case the terrain changes these will be changed,too.
 
 */
-class Terrain:public TerrainBase
+class AGEXPORT Terrain:public TerrainBase
 {
   // Some containers for all the meshes
   typedef std::list<TerrainPiece*> Pieces;
@@ -126,7 +126,7 @@
   void init();
 };
 
-void setUsing3dTextures(bool use3dTextures);
+AGEXPORT void setUsing3dTextures(bool use3dTextures);
 
 
 #endif

Modified: antargis/branches/rant/ext/game/water.h
===================================================================
--- antargis/branches/rant/ext/game/water.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/game/water.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -21,7 +21,7 @@
    for animation.
    In future some fragment shader using fresnel effects would be nice :-)
 */
-class WaterPiece:public SceneNode
+class AGEXPORT WaterPiece:public SceneNode
 {
   AGTexture tex;
  public:

Modified: antargis/branches/rant/ext/gui/ag_background.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_background.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_background.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -34,7 +34,7 @@
     It is used to draw gradients and tiled backgrounds of widgets.
     It is themable.
  */
-class AGBackground
+class AGEXPORT AGBackground
 {
  public:
   AGBackground(const AGString &pThemeName="");

Modified: antargis/branches/rant/ext/gui/ag_border.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_border.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_border.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -30,7 +30,7 @@
 class AGPainter;
 
 
-class AGBorder
+class AGEXPORT AGBorder
 {
  public:
   AGBorder(const AGString &pTheme="");

Modified: antargis/branches/rant/ext/gui/ag_button.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_button.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_button.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -42,7 +42,7 @@
    Further it can have following states:
 */
 
-class AGButton:public AGWidget
+class AGEXPORT AGButton:public AGWidget
 {
  public:
   /// the different drawing states
@@ -113,6 +113,6 @@
   bool mEnabled;
 };
 
-AGButton &toAGButton(AGWidget &pWidget);
+AGEXPORT AGButton &toAGButton(AGWidget &pWidget);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_caption.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_caption.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_caption.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include "ag_text.h"
 #include "ag_background.h"
 
-class AGCaption:public AGText
+class AGEXPORT AGCaption:public AGText
 {
  public:
   AGCaption(AGWidget *pParent,const AGRect2 &pRect,const AGStringUtf8 &pText,const AGFont &pFont,const AGBackground &pBG);

Modified: antargis/branches/rant/ext/gui/ag_checkbox.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_checkbox.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_checkbox.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -28,7 +28,7 @@
 
 class AGImage;
 
-class AGCheckBox:public AGButton
+class AGEXPORT AGCheckBox:public AGButton
 {
  public:
   AGCheckBox(AGWidget *pParent,AGRect2 pRect);

Modified: antargis/branches/rant/ext/gui/ag_colorbutton.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_colorbutton.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_colorbutton.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -27,7 +27,7 @@
 #include "ag_color.h"
 #include <vector>
 
-class AGColorButton:public AGWidget
+class AGEXPORT AGColorButton:public AGWidget
 {
  public:
   AGColorButton(AGWidget *pParent,const AGRect2 &r,int x,int y);
@@ -47,6 +47,6 @@
   AGColor mColor;
 };
 
-AGColorButton &toAGColorButton(AGWidget &pWidget);
+AGEXPORT AGColorButton &toAGColorButton(AGWidget &pWidget);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_combo.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_combo.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_combo.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -29,7 +29,7 @@
 class AGButton;
 class AGListBox;
 
-class AGComboBox:public AGWidget
+class AGEXPORT AGComboBox:public AGWidget
 {
  public:
   AGComboBox(AGWidget *pParent,const AGRect2 &pRect);

Modified: antargis/branches/rant/ext/gui/ag_edit.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_edit.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_edit.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -33,7 +33,7 @@
 enum AGAlign {EDIT_LEFT,EDIT_RIGHT,EDIT_JUSTIFY,EDIT_CENTER};
 enum AGVAlign {EDIT_TOP,EDIT_BOTTOM,EDIT_VCENTER};
 
-class AGEditLine
+class AGEXPORT AGEditLine
 {
  public:
   AGEditLine(const AGStringUtf8 &pText,AGFont pFont,bool pHardEnd);
@@ -76,7 +76,7 @@
   AGVAlign mVAlign;
 };
 
-class AGEdit:public AGWidget
+class AGEXPORT AGEdit:public AGWidget
 {
  public:
   AGEdit(AGWidget *pParent,const AGRect2 &pRect);
@@ -163,6 +163,6 @@
   int mMaxLength;
 };
 
-AGEdit &toAGEdit(AGWidget &w);
+//AGEdit &toAGEdit(AGWidget &w);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_frame.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_frame.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_frame.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -7,7 +7,7 @@
 
 // INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
 
-class AGFrame:public AGWidget
+class AGEXPORT AGFrame:public AGWidget
 {
  public:
   AGFrame(AGWidget *pParent,const AGRect2 &pRect,size_t width); // transparent frame

Modified: antargis/branches/rant/ext/gui/ag_image.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_image.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_image.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include "ag_widget.h"
 #include "ag_texture.h"
 
-class AGImage:public AGWidget
+class AGEXPORT AGImage:public AGWidget
 {
  public:
   AGImage(AGWidget *pParent,const AGRect2 &r,AGSurface pSurface,bool pTile);

Modified: antargis/branches/rant/ext/gui/ag_layout.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_layout.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_layout.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -28,7 +28,7 @@
 
 class AGTable;
 
-class AGLayout:public AGWidget
+class AGEXPORT AGLayout:public AGWidget
 {
  public:
   AGLayout(AGWidget *pgParent);
@@ -46,9 +46,9 @@
   std::map<int,AGWidget*> mTabIndices;
 };
 
-AGWidget *parseNode(AGWidget *pParent,const Node &pNode);
-void parseChildren(AGWidget *pParent,const Node &pNode);
+AGEXPORT AGWidget *parseNode(AGWidget *pParent,const Node &pNode);
+AGEXPORT void parseChildren(AGWidget *pParent,const Node &pNode);
 //AGTable *parseTable(AGWidget *pParent,const Node &pNode,const AGRect2 &geom);
-AGRect2 getLayoutGeometry(AGWidget *pParent,const Node &pNode);
+AGEXPORT AGRect2 getLayoutGeometry(AGWidget *pParent,const Node &pNode);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_listbox.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_listbox.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_listbox.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -31,7 +31,7 @@
 class AGEdit;
 class AGScroller;
 
-struct AGListBoxItem
+struct AGEXPORT AGListBoxItem
 {
   AGListBoxItem(AGString pID,AGStringUtf8 pValue);
   AGString id;
@@ -40,7 +40,7 @@
 
 
 // Single selection for a start
-class AGListBox:public AGWidget
+class AGEXPORT AGListBox:public AGWidget
 {
  public:
   AGListBox(AGWidget *pParent,const AGRect2 &pRect);
@@ -83,6 +83,6 @@
 };
 
 
-AGListBox &toAGListBox(AGWidget &w);
+//AGListBox &toAGListBox(AGWidget &w);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_local.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_local.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_local.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include <ag_string.h>
 #include <ag_string_utf8.h>
 
-class AGLocalizer
+class AGEXPORT AGLocalizer
 {
  public:
   virtual ~AGLocalizer();
@@ -35,10 +35,10 @@
   
 };
 
-void setLocalizer(AGLocalizer *p);
-AGLocalizer *getLocalizer();
+AGEXPORT void setLocalizer(AGLocalizer *p);
+AGEXPORT AGLocalizer *getLocalizer();
 
-AGStringUtf8 translate(const AGString &s);
+AGEXPORT AGStringUtf8 translate(const AGString &s);
 
 #ifndef SWIG
 #ifdef _

Modified: antargis/branches/rant/ext/gui/ag_menu.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_menu.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_menu.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include "ag_table.h"
 #include "ag_texture.h"
 
-class AGMenu:public AGTable
+class AGEXPORT AGMenu:public AGTable
 {
  public:
   AGMenu(AGWidget *pParent,AGVector2 pWishPos,const AGStringUtf8 &pName);

Modified: antargis/branches/rant/ext/gui/ag_radio.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_radio.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_radio.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -27,7 +27,7 @@
 
 class AGRadioGroup;
 
-class AGRadio:public AGCheckBox
+class AGEXPORT AGRadio:public AGCheckBox
 {
  public:
   AGRadio(AGWidget *pParent,AGRect2 pRect);

Modified: antargis/branches/rant/ext/gui/ag_radiogroup.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_radiogroup.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_radiogroup.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -28,7 +28,7 @@
 class AGRadio;
 
 // derive from AGWidget, so that it can be put into the hierarchy
-class AGRadioGroup:public AGWidget
+class AGEXPORT AGRadioGroup:public AGWidget
 {
  public:
   AGRadioGroup(AGWidget *pParent,const AGRect2 &pr);

Modified: antargis/branches/rant/ext/gui/ag_screenwidget.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_screenwidget.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_screenwidget.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include "ag_widget.h"
 #include "ag_texture.h"
 
-class AGScreenWidget:public AGWidget
+class AGEXPORT AGScreenWidget:public AGWidget
 {
  public:
   AGScreenWidget();

Modified: antargis/branches/rant/ext/gui/ag_scroller.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_scroller.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_scroller.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -29,7 +29,7 @@
 class AGBorder;
 class AGBackground;
 
-class AGScroller:public AGWidget
+class AGEXPORT AGScroller:public AGWidget
 {
  public:
   AGScroller(AGWidget *pParent,const AGRect2 &pRect,bool pHor);

Modified: antargis/branches/rant/ext/gui/ag_table.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_table.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_table.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -37,7 +37,7 @@
    @todo children should be re-arranged whenever AGTable::arrange() is called!
 */
 
-class AGTable:public AGWidget
+class AGEXPORT AGTable:public AGWidget
 {
  public:
   AGTable(AGWidget *pWidget,const AGRect2 &pRect);

Modified: antargis/branches/rant/ext/gui/ag_text.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_text.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_text.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -26,7 +26,7 @@
 #include "ag_widget.h"
 #include "ag_font.h"
 
-class AGText:public AGWidget
+class AGEXPORT AGText:public AGWidget
 {
  public:
   AGText(AGWidget *pParent,const AGRect2 &pRect,const AGStringUtf8 &pText,const AGFont &pFont);
@@ -48,6 +48,6 @@
   bool mFixedSize;
 };
 
-AGText &toAGText(AGWidget &w);
+//AGText &toAGText(AGWidget &w);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_theme.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_theme.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_theme.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -28,7 +28,7 @@
 
 #include <map>
 
-class AGTheme
+class AGEXPORT AGTheme
 {
  public:
   AGTheme();
@@ -64,11 +64,11 @@
   std::map<AGString,int> mInts;
 };
 
-AGTheme *getTheme();
-void setTheme(const AGTheme &aTheme);
-void loadTheme(const AGData &pXML);
-bool loadThemeFile(const AGFilename &pFilename);
+AGEXPORT AGTheme *getTheme();
+AGEXPORT void setTheme(const AGTheme &aTheme);
+AGEXPORT void loadTheme(const AGData &pXML);
+AGEXPORT bool loadThemeFile(const AGFilename &pFilename);
 
-AGString addPoint(const AGString &pTheme);
+AGEXPORT AGString addPoint(const AGString &pTheme);
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_tooltip.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_tooltip.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_tooltip.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -25,7 +25,7 @@
 
 #include <ag_widget.h>
 
-class AGTooltip:public AGWidget
+class AGEXPORT AGTooltip:public AGWidget
 {
  public:
   AGTooltip(const AGRect2 &pRect,const AGStringUtf8 &pText);

Modified: antargis/branches/rant/ext/gui/ag_widget.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_widget.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_widget.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -256,8 +256,8 @@
 
 //AGWidget *toAGWidget(AGMessageObject *o);
 
-void setNewClippingTechnique(bool f);
-bool getNewClippingTechnique();
+AGEXPORT void setNewClippingTechnique(bool f);
+AGEXPORT bool getNewClippingTechnique();
 
 
 #endif

Modified: antargis/branches/rant/ext/gui/ag_window.h
===================================================================
--- antargis/branches/rant/ext/gui/ag_window.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/ag_window.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -25,7 +25,7 @@
 
 #include "ag_table.h"
 
-class AGWindow:public AGTable
+class AGEXPORT AGWindow:public AGTable
 {
  public:
   AGWindow(AGWidget *pWidget,const AGRect2 &pRect,const AGStringUtf8 &pTitle="",const AGString &pTheme="");
@@ -54,6 +54,6 @@
   AGWidget *mClient;
 };
 
-AGWindow &toAGWindow(AGWidget &w);
+//AGWindow &toAGWindow(AGWidget &w);
 
 #endif

Modified: antargis/branches/rant/ext/gui/headers.hh
===================================================================
--- antargis/branches/rant/ext/gui/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -30,60 +30,60 @@
 #include "ext/video/ag_texture.h"
 #include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_video.h"
-#include "c:/antargis/rant/ext/gui/ag_application.h"
-#include "c:/antargis/rant/ext/gui/ag_background.h"
-#include "c:/antargis/rant/ext/gui/ag_border.h"
-#include "c:/antargis/rant/ext/gui/ag_button.h"
-#include "c:/antargis/rant/ext/gui/ag_caption.h"
-#include "c:/antargis/rant/ext/gui/ag_checkbox.h"
-#include "c:/antargis/rant/ext/gui/ag_colorbutton.h"
-#include "c:/antargis/rant/ext/gui/ag_combo.h"
-#include "c:/antargis/rant/ext/gui/ag_edit.h"
-#include "c:/antargis/rant/ext/gui/ag_frame.h"
-#include "c:/antargis/rant/ext/gui/ag_image.h"
-#include "c:/antargis/rant/ext/gui/ag_layout.h"
-#include "c:/antargis/rant/ext/gui/ag_layoutfactory.h"
-#include "c:/antargis/rant/ext/gui/ag_listbox.h"
-#include "c:/antargis/rant/ext/gui/ag_local.h"
-#include "c:/antargis/rant/ext/gui/ag_menu.h"
-#include "c:/antargis/rant/ext/gui/ag_menuitem.h"
-#include "c:/antargis/rant/ext/gui/ag_radio.h"
-#include "c:/antargis/rant/ext/gui/ag_radiogroup.h"
-#include "c:/antargis/rant/ext/gui/ag_screenwidget.h"
-#include "c:/antargis/rant/ext/gui/ag_scroller.h"
-#include "c:/antargis/rant/ext/gui/ag_table.h"
-#include "c:/antargis/rant/ext/gui/ag_text.h"
-#include "c:/antargis/rant/ext/gui/ag_theme.h"
-#include "c:/antargis/rant/ext/gui/ag_tooltip.h"
-#include "c:/antargis/rant/ext/gui/ag_widget.h"
-#include "c:/antargis/rant/ext/gui/ag_window.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_window.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_local.h"
 #ifdef SWIG
-%include "c:/antargis/rant/ext/gui/ag_application.h"
-%include "c:/antargis/rant/ext/gui/ag_background.h"
-%include "c:/antargis/rant/ext/gui/ag_border.h"
-%include "c:/antargis/rant/ext/gui/ag_button.h"
-%include "c:/antargis/rant/ext/gui/ag_caption.h"
-%include "c:/antargis/rant/ext/gui/ag_checkbox.h"
-%include "c:/antargis/rant/ext/gui/ag_colorbutton.h"
-%include "c:/antargis/rant/ext/gui/ag_combo.h"
-%include "c:/antargis/rant/ext/gui/ag_edit.h"
-%include "c:/antargis/rant/ext/gui/ag_frame.h"
-%include "c:/antargis/rant/ext/gui/ag_image.h"
-%include "c:/antargis/rant/ext/gui/ag_layout.h"
-%include "c:/antargis/rant/ext/gui/ag_layoutfactory.h"
-%include "c:/antargis/rant/ext/gui/ag_listbox.h"
-%include "c:/antargis/rant/ext/gui/ag_local.h"
-%include "c:/antargis/rant/ext/gui/ag_menu.h"
-%include "c:/antargis/rant/ext/gui/ag_menuitem.h"
-%include "c:/antargis/rant/ext/gui/ag_radio.h"
-%include "c:/antargis/rant/ext/gui/ag_radiogroup.h"
-%include "c:/antargis/rant/ext/gui/ag_screenwidget.h"
-%include "c:/antargis/rant/ext/gui/ag_scroller.h"
-%include "c:/antargis/rant/ext/gui/ag_table.h"
-%include "c:/antargis/rant/ext/gui/ag_text.h"
-%include "c:/antargis/rant/ext/gui/ag_theme.h"
-%include "c:/antargis/rant/ext/gui/ag_tooltip.h"
-%include "c:/antargis/rant/ext/gui/ag_widget.h"
-%include "c:/antargis/rant/ext/gui/ag_window.h"
+%include "ext/gui/ag_layoutfactory.h"
+%include "ext/gui/ag_widget.h"
+%include "ext/gui/ag_application.h"
+%include "ext/gui/ag_table.h"
+%include "ext/gui/ag_layout.h"
+%include "ext/gui/ag_colorbutton.h"
+%include "ext/gui/ag_image.h"
+%include "ext/gui/ag_screenwidget.h"
+%include "ext/gui/ag_listbox.h"
+%include "ext/gui/ag_frame.h"
+%include "ext/gui/ag_text.h"
+%include "ext/gui/ag_button.h"
+%include "ext/gui/ag_edit.h"
+%include "ext/gui/ag_radiogroup.h"
+%include "ext/gui/ag_scroller.h"
+%include "ext/gui/ag_tooltip.h"
+%include "ext/gui/ag_combo.h"
+%include "ext/gui/ag_menu.h"
+%include "ext/gui/ag_caption.h"
+%include "ext/gui/ag_window.h"
+%include "ext/gui/ag_checkbox.h"
+%include "ext/gui/ag_menuitem.h"
+%include "ext/gui/ag_radio.h"
+%include "ext/gui/ag_theme.h"
+%include "ext/gui/ag_border.h"
+%include "ext/gui/ag_background.h"
+%include "ext/gui/ag_local.h"
 #endif
 #endif

Modified: antargis/branches/rant/ext/gui/init.cc
===================================================================
--- antargis/branches/rant/ext/gui/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/gui/init.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,7 +1,8 @@
-#include <ag_debug.h>
+#include <ag_base.h>
+#include <ag_debug.h>
 #include <ag_layout.h>
 
-void AG_Init_libantargisgui()
+AGEXPORT void AG_Init_libantargisgui()
 {
 	TRACE;
 

Modified: antargis/branches/rant/ext/math/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/math/ag_geometry.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/math/ag_geometry.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -133,7 +133,7 @@
 };
 
 // 2-dim homogenous vector
-class AGVector3
+class AGEXPORT AGVector3
 {
  public:
   float v[3];
@@ -210,7 +210,7 @@
 };
 
 
-class AGMatrix3
+class AGEXPORT AGMatrix3
 {
   float a[3][3];
  public:
@@ -261,7 +261,7 @@
   AGString toString() const;
 };
 
-class AGLine2
+class AGEXPORT AGLine2
 {
   AGVector2 v0,v1;
  public:
@@ -294,7 +294,7 @@
   AGString toString() const;
 };
 
-class AGLine3
+class AGEXPORT AGLine3
 {
   AGVector3 v0,v1;
  public:
@@ -326,13 +326,13 @@
   AGString toString() const;
 };
 
-class AGCollisionData
+class AGEXPORT AGCollisionData
 {
 };
 
 class AGRect2;
 
-class AGTriangle2
+class AGEXPORT AGTriangle2
 {
   AGVector2 p[3];
  public:
@@ -371,7 +371,7 @@
   AGString toString() const;
 };
 
-class AGCircle2
+class AGEXPORT AGCircle2
 {
   AGVector3 p;
   float radius;
@@ -389,7 +389,7 @@
 };
 
 class AGVector4;
-class AGTriangle3
+class AGEXPORT AGTriangle3
 {
   AGVector3 p[3];
  public:
@@ -490,7 +490,7 @@
 };
 
 
-class AGVector4
+class AGEXPORT AGVector4
 {
  public:
   float v[4];
@@ -580,7 +580,7 @@
 #endif
 };
 
-class AGMatrix4
+class AGEXPORT AGMatrix4
 {
   float a[16];
  public:
@@ -644,7 +644,7 @@
 };
 
 // axis-aligned
-class AGRect3
+class AGEXPORT AGRect3
 {
   AGVector3 base,dir;
  public:
@@ -656,7 +656,7 @@
 };
 
 // axis-aligned
-class AGBox3
+class AGEXPORT AGBox3
 {
  public:
   AGVector3 base,dir;

Modified: antargis/branches/rant/ext/math/headers.hh
===================================================================
--- antargis/branches/rant/ext/math/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/math/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -14,14 +14,14 @@
 #include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "c:/antargis/rant/ext/math/ag_algebra.h"
-#include "c:/antargis/rant/ext/math/ag_geometry.h"
-#include "c:/antargis/rant/ext/math/ag_rand.h"
-#include "c:/antargis/rant/ext/math/ant_frustum.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
 #ifdef SWIG
-%include "c:/antargis/rant/ext/math/ag_algebra.h"
-%include "c:/antargis/rant/ext/math/ag_geometry.h"
-%include "c:/antargis/rant/ext/math/ag_rand.h"
-%include "c:/antargis/rant/ext/math/ant_frustum.h"
+%include "ext/math/ag_rand.h"
+%include "ext/math/ant_frustum.h"
+%include "ext/math/ag_algebra.h"
+%include "ext/math/ag_geometry.h"
 #endif
 #endif

Modified: antargis/branches/rant/ext/sound/ag_mixer.h
===================================================================
--- antargis/branches/rant/ext/sound/ag_mixer.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/sound/ag_mixer.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -28,7 +28,7 @@
 #include <ag_surface.h> // for decryptor
 
 // use widget, though this isn't one, because it provides useable functions
-class AGSound:public AGMessageObject
+class AGEXPORT AGSound:public AGMessageObject
 // #Widget
 {
  public:
@@ -63,7 +63,7 @@
 
 };
 
-AGSound *getSoundManager();
+AGEXPORT AGSound *getSoundManager();
 
 #endif
 

Modified: antargis/branches/rant/ext/sound/ag_sound.h
===================================================================
--- antargis/branches/rant/ext/sound/ag_sound.h	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/sound/ag_sound.h	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,7 +1,8 @@
 #ifndef AG_SOUND_H
 #define AG_SOUND_H
+
+#include <ag_base.h>
+AGEXPORT void initSoundEngine();
 
-void initSoundEngine();
-
 #endif
 

Modified: antargis/branches/rant/ext/sound/headers.hh
===================================================================
--- antargis/branches/rant/ext/sound/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/sound/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -1,31 +1,21 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_base.h"
-#include "ext/basic/ag_collector.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_debug.h"
-#include "ext/basic/ag_exception.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_profiler.h"
-#include "ext/basic/ag_regex.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_tools.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_plugin.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_kill.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_mutex.h"
-#include "/home/david/projects/antargis/rant/ext/sound/ag_mixer.h"
-#ifdef SWIG
-%include "/home/david/projects/antargis/rant/ext/sound/ag_mixer.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/sound/ag_mixer.h"
+#ifdef SWIG
+%include "ext/sound/ag_mixer.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/sound/init.cc
===================================================================
--- antargis/branches/rant/ext/sound/init.cc	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/sound/init.cc	2007-07-14 13:24:51 UTC (rev 1141)
@@ -3,7 +3,7 @@
 
 extern void initSoundEngine();
 
-void AG_Init_libantargissound()
+AGEXPORT void AG_Init_libantargissound()
 {
 	initSoundEngine();
 }

Modified: antargis/branches/rant/ext/video/headers.hh
===================================================================
--- antargis/branches/rant/ext/video/headers.hh	2007-07-11 18:41:46 UTC (rev 1140)
+++ antargis/branches/rant/ext/video/headers.hh	2007-07-14 13:24:51 UTC (rev 1141)
@@ -18,30 +18,30 @@
 #include "ext/math/ag_geometry.h"
 #include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
-#include "c:/antargis/rant/ext/video/ag_clip.h"
-#include "c:/antargis/rant/ext/video/ag_color.h"
-#include "c:/antargis/rant/ext/video/ag_font.h"
-#include "c:/antargis/rant/ext/video/ag_fontengine.h"
-#include "c:/antargis/rant/ext/video/ag_painter.h"
-#include "c:/antargis/rant/ext/video/ag_painttarget.h"
-#include "c:/antargis/rant/ext/video/ag_rendercontext.h"
-#include "c:/antargis/rant/ext/video/ag_screen.h"
-#include "c:/antargis/rant/ext/video/ag_surface.h"
-#include "c:/antargis/rant/ext/video/ag_texture.h"
-#include "c:/antargis/rant/ext/video/ag_texturecache.h"
-#include "c:/antargis/rant/ext/video/ag_video.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_color.h"
 #ifdef SWIG
-%include "c:/antargis/rant/ext/video/ag_clip.h"
-%include "c:/antargis/rant/ext/video/ag_color.h"
-%include "c:/antargis/rant/ext/video/ag_font.h"
-%include "c:/antargis/rant/ext/video/ag_fontengine.h"
-%include "c:/antargis/rant/ext/video/ag_painter.h"
-%include "c:/antargis/rant/ext/video/ag_painttarget.h"
-%include "c:/antargis/rant/ext/video/ag_rendercontext.h"
-%include "c:/antargis/rant/ext/video/ag_screen.h"
-%include "c:/antargis/rant/ext/video/ag_surface.h"
-%include "c:/antargis/rant/ext/video/ag_texture.h"
-%include "c:/antargis/rant/ext/video/ag_texturecache.h"
-%include "c:/antargis/rant/ext/video/ag_video.h"
+%include "ext/video/ag_painttarget.h"
+%include "ext/video/ag_surface.h"
+%include "ext/video/ag_texture.h"
+%include "ext/video/ag_screen.h"
+%include "ext/video/ag_fontengine.h"
+%include "ext/video/ag_video.h"
+%include "ext/video/ag_clip.h"
+%include "ext/video/ag_rendercontext.h"
+%include "ext/video/ag_texturecache.h"
+%include "ext/video/ag_font.h"
+%include "ext/video/ag_painter.h"
+%include "ext/video/ag_color.h"
 #endif
 #endif



From davidkamphausen at mail.berlios.de  Sat Jul 14 15:27:45 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 14 Jul 2007 15:27:45 +0200
Subject: [Antargis-svn] r1142 - in antargis/branches/rant/ruby: . editor
Message-ID: <200707141327.l6EDRjjJ005439@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-14 15:27:44 +0200 (Sat, 14 Jul 2007)
New Revision: 1142

Modified:
   antargis/branches/rant/ruby/dialogs.rb
   antargis/branches/rant/ruby/editor/dialogs.rb
   antargis/branches/rant/ruby/editview.rb
Log:
* some small fixes

Modified: antargis/branches/rant/ruby/dialogs.rb
===================================================================
--- antargis/branches/rant/ruby/dialogs.rb	2007-07-14 13:24:51 UTC (rev 1141)
+++ antargis/branches/rant/ruby/dialogs.rb	2007-07-14 13:27:44 UTC (rev 1142)
@@ -113,11 +113,11 @@
 		updateText
 	end
 	def setText(text)
-		toAGEdit(getChild("text")).setText(_(text))
+		getChild("text").setText(_(text))
 	end
 	def setTitle(text)
 		# it's AGText # FIXME: maybe exchange all AGText usages by AGEdit
-		toAGText(getChild("title")).setText(_(text))
+		getChild("title").setText(_(text))
 	end
 
 	def setFace(s)
@@ -253,7 +253,7 @@
 		super(parent,"data/gui/layout/savedialog.xml")
 	end
 	def eventOk(e)
-		filename=toAGEdit(getChild("Filename")).getText
+		filename=getChild("Filename").getText
 		#puts "FILENAME:"+filename.to_s
 		if not filename =~ /.*\.antlvl/ then
 			filename=filename.to_s+".antlvl"
@@ -277,7 +277,7 @@
 		getChild("window").getChild("title").setText(_("Save campaign"))
 	end
 	def eventOk(e)
-		filename=toAGEdit(getChild("Filename")).getText.to_s
+		filename=getChild("Filename").getText.to_s
 		puts "FILENAME:"+filename.to_s
 		if not filename =~ /.*\.antcmp/ then
 			filename=filename+".antcmp"
@@ -301,7 +301,7 @@
 	def initialize(parent)
 		super(parent,"data/gui/layout/loaddialog.xml")
 		d=getDirectory(getSavePath)
-		@lb=toAGListBox(getChild("Files"))
+		@lb=getChild("Files")
 		puts d
 		d.each { |x|
 			if x =~ /.*\.antlvl/ then

Modified: antargis/branches/rant/ruby/editor/dialogs.rb
===================================================================
--- antargis/branches/rant/ruby/editor/dialogs.rb	2007-07-14 13:24:51 UTC (rev 1141)
+++ antargis/branches/rant/ruby/editor/dialogs.rb	2007-07-14 13:27:44 UTC (rev 1142)
@@ -21,14 +21,14 @@
 	def initialize(parent,ent)
 		super(parent,"data/gui/layout/editpropdialog.xml")
 		@ent=ent
-		menCountW=toAGEdit(getChild("MenCount"))
-		nameW=toAGEdit(getChild("AntName"))
+		menCountW=getChild("MenCount")
+		nameW=getChild("AntName")
 		menCountW.setText(AGStringUtf8.new(@ent.getXMLProp("men")))
 		nameW.setText(AGStringUtf8.new(@ent.getName))
 		
 		getChild("NpcTypeView").hide if @ent.class!=AntNPC
 		if @ent.class==AntNPC
-			@npcTypeW=toAGEdit(getChild("NpcType"))
+			@npcTypeW=getChild("NpcType")
 			@npcTypeW.setText(AGStringUtf8.new(@ent.npcType))
 		end
 
@@ -49,8 +49,8 @@
 
 	end
 	def eventOk(e)
-		menCountW=toAGEdit(getChild("MenCount"))
-		nameW=toAGEdit(getChild("AntName"))
+		menCountW=getChild("MenCount")
+		nameW=getChild("AntName")
 		@ent.setName(nameW.getText.to_s)
 		@ent.setXMLProp("men",menCountW.getText.to_s)
 		close

Modified: antargis/branches/rant/ruby/editview.rb
===================================================================
--- antargis/branches/rant/ruby/editview.rb	2007-07-14 13:24:51 UTC (rev 1141)
+++ antargis/branches/rant/ruby/editview.rb	2007-07-14 13:27:44 UTC (rev 1142)
@@ -73,7 +73,7 @@
 			@newDialog.loadXML(loadFile("data/gui/layout/newdialog.xml"))
 			addHandler(@newDialog.getChild("ok"),:sigClick,:eventNewMapEnd)
 			addHandler(@newDialog.getChild("cancel"),:sigClick,:eventNewMapEnd)
-			addHandler(toAGWindow(@newDialog.getChild("window")),:sigClose,:eventNewMapEnd)
+			addHandler(@newDialog.getChild("window"),:sigClose,:eventNewMapEnd)
 		end
 		GC.start
 		return true
@@ -87,8 +87,8 @@
 			@layout.removeChild(d)
 			#d.close
 			if name=="ok"
-				w=toAGEdit(d.getChild("width")).getText.to_s.to_i
-				h=toAGEdit(d.getChild("height")).getText.to_s.to_i
+				w=d.getChild("width").getText.to_s.to_i
+				h=d.getChild("height").getText.to_s.to_i
 				
 				if w and h
 					w=2**(Math::log(w)/Math::log(2)).to_i



From davidkamphausen at mail.berlios.de  Sat Jul 14 15:40:35 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 14 Jul 2007 15:40:35 +0200
Subject: [Antargis-svn] r1143 - in antargis/branches/rant: ext/game
	ruby/entities
Message-ID: <200707141340.l6EDeZcn006076@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-14 15:40:35 +0200 (Sat, 14 Jul 2007)
New Revision: 1143

Modified:
   antargis/branches/rant/ext/game/ant_app.cc
   antargis/branches/rant/ruby/entities/entities.rb
Log:
* yay - it runs !!!

Modified: antargis/branches/rant/ext/game/ant_app.cc
===================================================================
--- antargis/branches/rant/ext/game/ant_app.cc	2007-07-14 13:27:44 UTC (rev 1142)
+++ antargis/branches/rant/ext/game/ant_app.cc	2007-07-14 13:40:35 UTC (rev 1143)
@@ -42,7 +42,7 @@
   if(hx>=0)
     {
       // check hovering
-      Scene::PickResult nodes=scene.pick(hx,hy,1,1);
+      PickResult nodes=scene.pick(hx,hy,1,1);
       
       if(nodes.size())
 	eventHover(nodes,hb);
@@ -92,7 +92,7 @@
 	    {
 	      STACKTRACE;
 	      AGVector2 p=e->getMousePosition();
-	      Scene::PickResult nodes=scene.pick(p[0],p[1],1,1);
+	      PickResult nodes=scene.pick(p[0],p[1],1,1);
 
 	      eventClick(nodes,e->getButton());
 	    }
@@ -105,11 +105,11 @@
   return AGApplication::eventMouseButtonUp(e);
 }
 
-void GLApp::eventClick(const Scene::PickResult &pNodes,int button)
+void GLApp::eventClick(const PickResult &pNodes,int button)
 {
 }
 
-void GLApp::eventHover(const Scene::PickResult &pNodes,int button)
+void GLApp::eventHover(const PickResult &pNodes,int button)
 {
 }
 

Modified: antargis/branches/rant/ruby/entities/entities.rb
===================================================================
--- antargis/branches/rant/ruby/entities/entities.rb	2007-07-14 13:27:44 UTC (rev 1142)
+++ antargis/branches/rant/ruby/entities/entities.rb	2007-07-14 13:40:35 UTC (rev 1143)
@@ -95,7 +95,7 @@
 		node.set("uid", at uid.to_s)
 	end
 	def getDescription
-		"This is an entity - no more info here."
+		_("This is an entity - no more info here.")
 	end
 
 	# simple comparison operator, so that ents can be distinguished



From davidkamphausen at mail.berlios.de  Mon Jul 16 20:33:27 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Mon, 16 Jul 2007 20:33:27 +0200
Subject: [Antargis-svn] r1144 - in antargis/branches/rant: . build
	build/win32 build/win32/ruby_patch ext/gui ext/video ruby
Message-ID: <200707161833.l6GIXRbE012255@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-16 20:33:27 +0200 (Mon, 16 Jul 2007)
New Revision: 1144

Added:
   antargis/branches/rant/build/win32/ruby_patch/
   antargis/branches/rant/build/win32/ruby_patch/win32.h
Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/TODO
   antargis/branches/rant/build/configure.rb
   antargis/branches/rant/build/win32/makeLibs.sh
   antargis/branches/rant/configure
   antargis/branches/rant/ext/gui/ag_text.cc
   antargis/branches/rant/ext/video/ag_color.h
   antargis/branches/rant/ruby/antargislib.rb
Log:
* more windows changes

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/Rantfile	2007-07-16 18:33:27 UTC (rev 1144)
@@ -2,7 +2,10 @@
 import "autoclean"                    # autoclean includes the a simple facility for a clean-make-target
 import "package/tgz"                  # support for packaging (tar.gz, zip)
 import "rubydoc"
+import "c/dependencies"
 
+#gen C::Dependencies
+
 require 'build/base_tools.rb'
 
 puts "ERROR: Please run ./configure before building!" unless File.exists?("config.rb")
@@ -112,7 +115,7 @@
         puts "------",cmd,"--------------!"
 		sys cmd
         if ENV['WINDIR']
-            sys "mv #{sys.expand_path(t.name)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll")}.a"
+            sys "copy #{sys.expand_path(t.name).gsub("/",Dir.separator)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll").gsub("/",Dir.separator)}.a"
         end
 	end
 }

Modified: antargis/branches/rant/TODO
===================================================================
--- antargis/branches/rant/TODO	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/TODO	2007-07-16 18:33:27 UTC (rev 1144)
@@ -1,3 +1,9 @@
+* download allinoneruby.rb
+* build allinoneruby.exe
+* put ag_sdl*.tar.gz into svn
+* put up instructions into wiki
+
+
 * docs
 * configure
 * "contrib"

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/build/configure.rb	2007-07-16 18:33:27 UTC (rev 1144)
@@ -172,7 +172,7 @@
         paths=getPath
         paths.each{|p|
             currentPath=p+Dir.separator+program
-            puts "TST #{currentPath}"
+            #puts "TST #{currentPath}"
             if File.exists?(currentPath)
                 puts "FOUND! at #{currentPath}"
                 return currentPath

Modified: antargis/branches/rant/build/win32/makeLibs.sh
===================================================================
--- antargis/branches/rant/build/win32/makeLibs.sh	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/build/win32/makeLibs.sh	2007-07-16 18:33:27 UTC (rev 1144)
@@ -67,7 +67,7 @@
 cd tmp
 tar xfz ../libs/ruby-1.8.6.tar.gz
 cd ruby-1.8.6
-        ./configure --prefix=/usr --enable-debug
+        ./configure --prefix=/usr --enable-debug --enable-install-doc
 ####                # patch fake.rb
 #####                cat fake.rb |sed -e "s/\"\\\\\";/\"\\\\\"\";/">fake.tmp
 #####                mv fake.tmp fake.rb

Added: antargis/branches/rant/build/win32/ruby_patch/win32.h
===================================================================
--- antargis/branches/rant/build/win32/ruby_patch/win32.h	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/build/win32/ruby_patch/win32.h	2007-07-16 18:33:27 UTC (rev 1144)
@@ -0,0 +1,558 @@
+#ifndef RUBY_WIN32_H
+#define RUBY_WIN32_H
+
+/*
+ *  Copyright (c) 1993, Intergraph Corporation
+ *
+ *  You may distribute under the terms of either the GNU General Public
+ *  License or the Artistic License, as specified in the perl README file.
+ *
+ */
+
+//
+// Definitions for NT port of Perl
+//
+
+
+//
+// Ok now we can include the normal include files.
+//
+
+// #include <stdarg.h> conflict with varargs.h?
+// There is function-name conflitct, so we rename it
+#if !defined(IN) && !defined(FLOAT)
+#define OpenFile  WINAPI_OpenFile
+#ifdef __BORLANDC__
+#define USE_WINSOCK2
+#endif
+#ifdef USE_WINSOCK2
+#include <winsock2.h>
+#include <windows.h>
+#else
+#include <windows.h>
+#include <winsock.h>
+#endif
+#undef OpenFile
+#endif
+
+#define NT 1			/* deprecated */
+
+#ifdef _WIN32_WCE
+#undef CharNext
+#define CharNext CharNextA
+#endif
+
+//
+// We're not using Microsoft's "extensions" to C for
+// Structured Exception Handling (SEH) so we can nuke these
+//
+#undef try
+#undef except
+#undef finally
+#undef leave
+
+#if defined(__cplusplus)
+extern "C++" {
+#endif
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <direct.h>
+#include <process.h>
+#include <time.h>
+#include <math.h>
+#include <signal.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+#if !defined(__BORLANDC__)
+# include <sys/utime.h>
+#else
+# include <utime.h>
+#endif
+#include <io.h>
+#include <malloc.h>
+
+#if defined(__cplusplus)
+}
+#endif
+
+#ifdef _M_IX86
+# define WIN95 1
+#else
+# undef  WIN95
+#endif
+
+#ifdef WIN95
+extern DWORD rb_w32_osid(void);
+#define rb_w32_iswinnt()  (rb_w32_osid() == VER_PLATFORM_WIN32_NT)
+#define rb_w32_iswin95()  (rb_w32_osid() == VER_PLATFORM_WIN32_WINDOWS)
+#else
+#define rb_w32_iswinnt()  TRUE
+#define rb_w32_iswin95()  FALSE
+#endif
+
+#define WNOHANG -1
+
+#undef getc
+#undef putc
+#undef fgetc
+#undef fputc
+#undef getchar
+#undef putchar
+#undef fgetchar
+#undef fputchar
+#undef utime
+#define getc(_stream)		rb_w32_getc(_stream)
+#define putc(_c, _stream)	rb_w32_putc(_c, _stream)
+#define fgetc(_stream)		getc(_stream)
+#define fputc(_c, _stream)	putc(_c, _stream)
+#define getchar()		rb_w32_getc(stdin)
+#define putchar(_c)		rb_w32_putc(_c, stdout)
+#define fgetchar()		getchar()
+#define fputchar(_c)		putchar(_c)
+#define utime(_p, _t)		rb_w32_utime(_p, _t)
+
+#define strcasecmp(s1, s2)	stricmp(s1, s2)
+#define strncasecmp(s1, s2, n)	strnicmp(s1, s2, n)
+
+#define close(h)		rb_w32_close(h)
+#define fclose(f)		rb_w32_fclose(f)
+//#define read(f, b, s)		rb_w32_read(f, b, s)
+//#define write(f, b, s)		rb_w32_write(f, b, s)
+#define getpid()		rb_w32_getpid()
+#define sleep(x)		rb_w32_sleep((x)*1000)
+#ifdef __BORLANDC__
+#define creat(p, m)		_creat(p, m)
+#define eof()			_eof()
+#define filelength(h)		_filelength(h)
+#define mktemp(t)		_mktemp(t)
+#define tell(h)			_tell(h)
+#define unlink(p)		_unlink(p)
+#define _open			_sopen
+#define sopen			_sopen
+#undef fopen
+#define fopen(p, m)		rb_w32_fopen(p, m)
+#undef fdopen
+#define fdopen(h, m)		rb_w32_fdopen(h, m)
+#undef fsopen
+#define fsopen(p, m, sh)	rb_w32_fsopen(p, m, sh)
+#endif
+#define fsync(h)		_commit(h)
+#undef stat
+#define stat(path,st)		rb_w32_stat(path,st)
+#undef execv
+#define execv(path,argv)	do_aspawn(P_OVERLAY,path,argv)
+#if !defined(__BORLANDC__) && !defined(_WIN32_WCE)
+#undef isatty
+#define isatty(h)		rb_w32_isatty(h)
+#endif
+#undef mkdir
+#define mkdir(p, m)		rb_w32_mkdir(p, m)
+#undef rmdir
+#define rmdir(p)		rb_w32_rmdir(p)
+#undef unlink
+#define unlink(p)		rb_w32_unlink(p)
+
+#ifdef __MINGW32__
+struct timezone {
+  int tz_minuteswest;
+  int tz_dsttime;
+};
+#undef isascii
+#define isascii __isascii
+#endif
+extern void   NtInitialize(int *, char ***);
+extern int    rb_w32_cmdvector(const char *, char ***);
+extern rb_pid_t pipe_exec(char *, int, FILE **, FILE **);
+extern int    flock(int fd, int oper);
+extern int    rb_w32_accept(int, struct sockaddr *, int *);
+extern int    rb_w32_bind(int, struct sockaddr *, int);
+extern int    rb_w32_connect(int, struct sockaddr *, int);
+extern void   rb_w32_fdset(int, fd_set*);
+extern void   rb_w32_fdclr(int, fd_set*);
+extern int    rb_w32_fdisset(int, fd_set*);
+extern long   rb_w32_select(int, fd_set *, fd_set *, fd_set *, struct timeval *);
+extern int    rb_w32_getpeername(int, struct sockaddr *, int *);
+extern int    rb_w32_getsockname(int, struct sockaddr *, int *);
+extern int    rb_w32_getsockopt(int, int, int, char *, int *);
+extern int    rb_w32_ioctlsocket(int, long, u_long *);
+extern int    rb_w32_listen(int, int);
+extern int    rb_w32_recv(int, char *, int, int);
+extern int    rb_w32_recvfrom(int, char *, int, int, struct sockaddr *, int *);
+extern int    rb_w32_send(int, const char *, int, int);
+extern int    rb_w32_sendto(int, const char *, int, int, struct sockaddr *, int);
+extern int    rb_w32_setsockopt(int, int, int, char *, int);
+extern int    rb_w32_shutdown(int, int);
+extern int    rb_w32_socket(int, int, int);
+extern SOCKET rb_w32_get_osfhandle(int);
+extern struct hostent * rb_w32_gethostbyaddr(char *, int, int);
+extern struct hostent * rb_w32_gethostbyname(char *);
+extern int    rb_w32_gethostname(char *, int);
+extern struct protoent * rb_w32_getprotobyname(char *);
+extern struct protoent * rb_w32_getprotobynumber(int);
+extern struct servent  * rb_w32_getservbyname(char *, char *);
+extern struct servent  * rb_w32_getservbyport(int, char *);
+extern char * rb_w32_getenv(const char *);
+extern int    rb_w32_rename(const char *, const char *);
+extern int    rb_w32_stat(const char *, struct stat *);
+extern char **rb_w32_get_environ(void);
+extern void   rb_w32_free_environ(char **);
+
+#define vsnprintf(s,n,f,l) rb_w32_vsnprintf(s,n,f,l)
+#define snprintf   rb_w32_snprintf
+extern int rb_w32_vsnprintf(char *, size_t, const char *, va_list);
+extern int rb_w32_snprintf(char *, size_t, const char *, ...);
+
+extern int chown(const char *, int, int);
+extern int link(char *, char *);
+extern int gettimeofday(struct timeval *, struct timezone *);
+extern rb_pid_t waitpid (rb_pid_t, int *, int);
+extern int do_spawn(int, char *);
+extern int do_aspawn(int, char *, char **);
+extern int kill(int, int);
+extern int fcntl(int, int, ...);
+extern rb_pid_t rb_w32_getpid(void);
+
+#if !defined(__BORLANDC__) && !defined(_WIN32_WCE)
+extern int rb_w32_isatty(int);
+#endif
+extern int rb_w32_mkdir(const char *, int);
+extern int rb_w32_rmdir(const char *);
+extern int rb_w32_unlink(const char*);
+
+#ifdef __BORLANDC__
+extern FILE *rb_w32_fopen(const char *, const char *);
+extern FILE *rb_w32_fdopen(int, const char *);
+extern FILE *rb_w32_fsopen(const char *, const char *, int);
+#endif
+
+#include <float.h>
+#if !defined __MINGW32__ || defined __NO_ISOCEXT
+#ifndef isnan
+#define isnan(x) _isnan(x)
+#endif
+#ifndef finite
+#define finite(x) _finite(x)
+#endif
+#ifndef copysign
+#define copysign(a, b) _copysign(a, b)
+#endif
+#ifndef scalb
+#define scalb(a, b) _scalb(a, b)
+#endif
+#endif
+
+#if !defined S_IFIFO && defined _S_IFIFO
+#define S_IFIFO _S_IFIFO
+#endif
+
+#ifdef __BORLANDC__
+#undef S_ISDIR
+#undef S_ISFIFO
+#undef S_ISBLK
+#undef S_ISCHR
+#undef S_ISREG
+#define S_ISDIR(m)  (((unsigned short)(m) & S_IFMT) == S_IFDIR)
+#define S_ISFIFO(m) (((unsigned short)(m) & S_IFMT) == S_IFIFO)
+#define S_ISBLK(m)  (((unsigned short)(m) & S_IFMT) == S_IFBLK)
+#define S_ISCHR(m)  (((unsigned short)(m) & S_IFMT) == S_IFCHR)
+#define S_ISREG(m)  (((unsigned short)(m) & S_IFMT) == S_IFREG)
+#endif
+
+#if !defined S_IRUSR && !defined __MINGW32__
+#define S_IRUSR 0400
+#endif
+#ifndef S_IRGRP
+#define S_IRGRP 0040
+#endif
+#ifndef S_IROTH
+#define S_IROTH 0004
+#endif
+
+#if !defined S_IWUSR && !defined __MINGW32__
+#define S_IWUSR 0200
+#endif
+#ifndef S_IWGRP
+#define S_IWGRP 0020
+#endif
+#ifndef S_IWOTH
+#define S_IWOTH 0002
+#endif
+
+#if !defined S_IXUSR && !defined __MINGW32__
+#define S_IXUSR 0100
+#endif
+#ifndef S_IXGRP
+#define S_IXGRP 0010
+#endif
+#ifndef S_IXOTH
+#define S_IXOTH 0001
+#endif
+
+//
+// define this so we can do inplace editing
+//
+
+#define SUFFIX
+
+//
+// stubs
+//
+#if !defined(__BORLANDC__)
+extern int       ioctl (int, unsigned int, long);
+#endif
+extern rb_uid_t  getuid (void);
+extern rb_uid_t  geteuid (void);
+extern rb_gid_t  getgid (void);
+extern rb_gid_t  getegid (void);
+extern int       setuid (rb_uid_t);
+extern int       setgid (rb_gid_t);
+
+extern char *rb_w32_strerror(int);
+
+#define strerror(e) rb_w32_strerror(e)
+
+#define PIPE_BUF 1024
+
+#define LOCK_SH 1
+#define LOCK_EX 2
+#define LOCK_NB 4
+#define LOCK_UN 8
+
+
+#ifndef SIGINT
+#define SIGINT 2
+#endif
+#ifndef SIGKILL
+#define SIGKILL	9
+#endif
+
+
+/* #undef va_start */
+/* #undef va_end */
+
+/* winsock error map */
+#define EWOULDBLOCK	WSAEWOULDBLOCK
+#define EINPROGRESS	WSAEINPROGRESS
+#define EALREADY	WSAEALREADY
+#define ENOTSOCK	WSAENOTSOCK
+#define EDESTADDRREQ	WSAEDESTADDRREQ
+#define EMSGSIZE	WSAEMSGSIZE
+#define EPROTOTYPE	WSAEPROTOTYPE
+#define ENOPROTOOPT	WSAENOPROTOOPT
+#define EPROTONOSUPPORT	WSAEPROTONOSUPPORT
+#define ESOCKTNOSUPPORT	WSAESOCKTNOSUPPORT
+#define EOPNOTSUPP	WSAEOPNOTSUPP
+#define EPFNOSUPPORT	WSAEPFNOSUPPORT
+#define EAFNOSUPPORT	WSAEAFNOSUPPORT
+#define EADDRINUSE	WSAEADDRINUSE
+#define EADDRNOTAVAIL	WSAEADDRNOTAVAIL
+#define ENETDOWN	WSAENETDOWN
+#define ENETUNREACH	WSAENETUNREACH
+#define ENETRESET	WSAENETRESET
+#define ECONNABORTED	WSAECONNABORTED
+#define ECONNRESET	WSAECONNRESET
+#define ENOBUFS		WSAENOBUFS
+#define EISCONN		WSAEISCONN
+#define ENOTCONN	WSAENOTCONN
+#define ESHUTDOWN	WSAESHUTDOWN
+#define ETOOMANYREFS	WSAETOOMANYREFS
+#define ETIMEDOUT	WSAETIMEDOUT
+#define ECONNREFUSED	WSAECONNREFUSED
+#define ELOOP		WSAELOOP
+/*#define ENAMETOOLONG	WSAENAMETOOLONG*/
+#define EHOSTDOWN	WSAEHOSTDOWN
+#define EHOSTUNREACH	WSAEHOSTUNREACH
+/*#define ENOTEMPTY	WSAENOTEMPTY*/
+#define EPROCLIM	WSAEPROCLIM
+#define EUSERS		WSAEUSERS
+#define EDQUOT		WSAEDQUOT
+#define ESTALE		WSAESTALE
+#define EREMOTE		WSAEREMOTE
+
+#define F_SETFL 1
+#define O_NONBLOCK 1
+
+#ifdef accept
+#undef accept
+#endif
+#define accept(s, a, l)		rb_w32_accept(s, a, l)
+
+#ifdef bind
+#undef bind
+#endif
+#define bind(s, a, l)		rb_w32_bind(s, a, l)
+
+#ifdef connect
+#undef connect
+#endif
+#define connect(s, a, l)	rb_w32_connect(s, a, l)
+
+#undef FD_SET
+#define FD_SET(f, s)		rb_w32_fdset(f, s)
+
+#undef FD_CLR
+#define FD_CLR(f, s)		rb_w32_fdclr(f, s)
+
+#undef FD_ISSET
+#define FD_ISSET(f, s)		rb_w32_fdisset(f, s)
+
+#undef select
+#define select(n, r, w, e, t)	rb_w32_select(n, r, w, e, t)
+
+#ifdef getpeername
+#undef getpeername
+#endif
+#define getpeername(s, a, l)	rb_w32_getpeername(s, a, l)
+
+#ifdef getsockname
+#undef getsockname
+#endif
+#define getsockname(s, a, l)	rb_w32_getsockname(s, a, l)
+
+#ifdef getsockopt
+#undef getsockopt
+#endif
+#define getsockopt(s, v, n, o, l) rb_w32_getsockopt(s, v, n, o, l)
+
+#ifdef ioctlsocket
+#undef ioctlsocket
+#endif
+#define ioctlsocket(s, c, a)	rb_w32_ioctlsocket(s, c, a)
+
+#ifdef listen
+#undef listen
+#endif
+#define listen(s, b)		rb_w32_listen(s, b)
+
+#ifdef recv
+#undef recv
+#endif
+#define recv(s, b, l, f)	rb_w32_recv(s, b, l, f)
+
+#ifdef recvfrom
+#undef recvfrom
+#endif
+#define recvfrom(s, b, l, f, fr, frl) rb_w32_recvfrom(s, b, l, f, fr, frl)
+
+#ifdef send
+#undef send
+#endif
+#define send(s, b, l, f)	rb_w32_send(s, b, l, f)
+
+#ifdef sendto
+#undef sendto
+#endif
+#define sendto(s, b, l, f, t, tl) rb_w32_sendto(s, b, l, f, t, tl)
+
+#ifdef setsockopt
+#undef setsockopt
+#endif
+#define setsockopt(s, v, n, o, l) rb_w32_setsockopt(s, v, n, o, l)
+
+#ifdef shutdown
+#undef shutdown
+#endif
+#define shutdown(s, h)		rb_w32_shutdown(s, h)
+
+#ifdef socket
+#undef socket
+#endif
+#define socket(s, t, p)		rb_w32_socket(s, t, p)
+
+#ifdef gethostbyaddr
+#undef gethostbyaddr
+#endif
+#define gethostbyaddr(a, l, t)	rb_w32_gethostbyaddr(a, l, t)
+
+#ifdef gethostbyname
+#undef gethostbyname
+#endif
+#define gethostbyname(n)	rb_w32_gethostbyname(n)
+
+#ifdef gethostname
+#undef gethostname
+#endif
+#define gethostname(n, l)	rb_w32_gethostname(n, l)
+
+#ifdef getprotobyname
+#undef getprotobyname
+#endif
+#define getprotobyname(n)	rb_w32_getprotobyname(n)
+
+#ifdef getprotobynumber
+#undef getprotobynumber
+#endif
+#define getprotobynumber(n)	rb_w32_getprotobynumber(n)
+
+#ifdef getservbyname
+#undef getservbyname
+#endif
+#define getservbyname(n, p)	rb_w32_getservbyname(n, p)
+
+#ifdef getservbyport
+#undef getservbyport
+#endif
+#define getservbyport(p, pr)	rb_w32_getservbyport(p, pr)
+
+#ifdef get_osfhandle
+#undef get_osfhandle
+#endif
+#define get_osfhandle(h)	rb_w32_get_osfhandle(h)
+
+#ifdef getcwd
+#undef getcwd
+#endif
+#define getcwd(b, s)		rb_w32_getcwd(b, s)
+
+#ifdef getenv
+#undef getenv
+#endif
+#define getenv(n)		rb_w32_getenv(n)
+
+#ifdef rename
+#undef rename
+#endif
+#define rename(o, n)		rb_w32_rename(o, n)
+
+struct tms {
+	long	tms_utime;
+	long	tms_stime;
+	long	tms_cutime;
+	long	tms_cstime;
+};
+
+#ifdef times
+#undef times
+#endif
+#define times(t) rb_w32_times(t)
+int rb_w32_times(struct tms *);
+
+/* thread stuff */
+HANDLE GetCurrentThreadHandle(void);
+void rb_w32_interrupted(void);
+int  rb_w32_main_context(int arg, void (*handler)(int));
+int  rb_w32_sleep(unsigned long msec);
+void rb_w32_enter_critical(void);
+void rb_w32_leave_critical(void);
+int  rb_w32_putc(int, FILE*);
+int  rb_w32_getc(FILE*);
+int  rb_w32_close(int);
+int  rb_w32_fclose(FILE*);
+size_t rb_w32_read(int, void *, size_t);
+size_t rb_w32_write(int, const void *, size_t);
+int  rb_w32_utime(const char *, struct utimbuf *);
+#define Sleep(msec) (void)rb_w32_sleep(msec)
+
+/*
+== ***CAUTION***
+Since this function is very dangerous, ((*NEVER*))
+* lock any HANDLEs(i.e. Mutex, Semaphore, CriticalSection and so on) or,
+* use anything like TRAP_BEG...TRAP_END block structure,
+in asynchronous_func_t.
+*/
+typedef DWORD (*asynchronous_func_t)(DWORD self, int argc, DWORD* argv);
+DWORD rb_w32_asynchronize(asynchronous_func_t func, DWORD self, int argc, DWORD* argv, DWORD intrval);
+
+#endif

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/configure	2007-07-16 18:33:27 UTC (rev 1144)
@@ -49,7 +49,7 @@
 CFG.checkProgram("g++")
 CFG.checkProgram("swig")
 CFG.checkProgram("ruby")
-CFG.checkProgram("sdl-config")
+CFG.checkProgram("sdl-config",false)
 
 CFG.addCheck("sdl-config --libs",false) do
         libs=nil

Modified: antargis/branches/rant/ext/gui/ag_text.cc
===================================================================
--- antargis/branches/rant/ext/gui/ag_text.cc	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/ext/gui/ag_text.cc	2007-07-16 18:33:27 UTC (rev 1144)
@@ -70,11 +70,6 @@
   return mText;
 }
 
-AGText &toAGText(AGWidget &w)
-{
-  return dynamic_cast<AGText&>(w);
-}
-
 void AGText::setFont(const AGFont &f)
 {
   mFont=f;

Modified: antargis/branches/rant/ext/video/ag_color.h
===================================================================
--- antargis/branches/rant/ext/video/ag_color.h	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/ext/video/ag_color.h	2007-07-16 18:33:27 UTC (rev 1144)
@@ -43,7 +43,9 @@
 
   AGColor();
 
+#ifndef SWIG
   AGColor &operator=(const AGColor&c);
+#endif
   AGColor &operator*=(float f);
 
   AGColor operator*(float f) const;

Modified: antargis/branches/rant/ruby/antargislib.rb
===================================================================
--- antargis/branches/rant/ruby/antargislib.rb	2007-07-14 13:40:35 UTC (rev 1143)
+++ antargis/branches/rant/ruby/antargislib.rb	2007-07-16 18:33:27 UTC (rev 1144)
@@ -22,7 +22,12 @@
 
 		@@extDir=Dir.pwd+"/ext"
 		# add programdir to path
-		$:.push(@@extDir)
+		$:.push(@@extDir)
+        if ENV["PATH"].split(";").length>3 # FIXME: is windows ?
+            ENV["PATH"]+=";.\\ext"
+        else
+            ENV["PATH"]+=":./ext"
+        end
 	end
 end
 



From davidkamphausen at mail.berlios.de  Mon Jul 16 21:29:07 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Mon, 16 Jul 2007 21:29:07 +0200
Subject: [Antargis-svn] r1145 - in contrib: . binary oldsources
Message-ID: <200707161929.l6GJT7Rm015732@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-16 20:48:58 +0200 (Mon, 16 Jul 2007)
New Revision: 1145

Added:
   contrib/binary/
   contrib/binary/ag_ruby_bin.tar.gz
   contrib/binary/ag_sdl_libs.tar.gz
   contrib/oldsources/
   contrib/oldsources/SDL-1.2.11.tar.gz
   contrib/oldsources/SDL_image-1.2.5.tar.gz
   contrib/oldsources/SDL_mixer-1.2.7.tar.gz
   contrib/oldsources/SDL_ttf-2.0.8.tar.gz
   contrib/oldsources/freetype-2.1.10-bin.zip
   contrib/oldsources/freetype-2.1.10-lib.zip
   contrib/oldsources/jpeg-6b-4-bin.zip
   contrib/oldsources/jpeg-6b-4-lib.zip
   contrib/oldsources/libogg-1.1.3.tar.gz
   contrib/oldsources/libpng-1.2.8-bin.zip
   contrib/oldsources/libpng-1.2.8-lib.zip
   contrib/oldsources/libvorbis-1.1.2.tar.gz
   contrib/oldsources/ruby-1.8.4.tar.gz
   contrib/oldsources/smpeg-0.4.4.tar.gz
   contrib/oldsources/tiff-3.8.2-1-bin.zip
   contrib/oldsources/tiff-3.8.2-1-lib.zip
   contrib/oldsources/zlib-1.2.3-bin.zip
   contrib/oldsources/zlib-1.2.3-lib.zip
Removed:
   contrib/SDL-1.2.11.tar.gz
   contrib/SDL_image-1.2.5.tar.gz
   contrib/SDL_mixer-1.2.7.tar.gz
   contrib/SDL_ttf-2.0.8.tar.gz
   contrib/freetype-2.1.10-bin.zip
   contrib/freetype-2.1.10-lib.zip
   contrib/jpeg-6b-4-bin.zip
   contrib/jpeg-6b-4-lib.zip
   contrib/libogg-1.1.3.tar.gz
   contrib/libpng-1.2.8-bin.zip
   contrib/libpng-1.2.8-lib.zip
   contrib/libvorbis-1.1.2.tar.gz
   contrib/ruby-1.8.4.tar.gz
   contrib/smpeg-0.4.4.tar.gz
   contrib/tiff-3.8.2-1-bin.zip
   contrib/tiff-3.8.2-1-lib.zip
   contrib/zlib-1.2.3-bin.zip
   contrib/zlib-1.2.3-lib.zip
Log:


Deleted: contrib/SDL-1.2.11.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/SDL_image-1.2.5.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/SDL_mixer-1.2.7.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/SDL_ttf-2.0.8.tar.gz
===================================================================
(Binary files differ)

Added: contrib/binary/ag_ruby_bin.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/binary/ag_ruby_bin.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/binary/ag_sdl_libs.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/binary/ag_sdl_libs.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Deleted: contrib/freetype-2.1.10-bin.zip
===================================================================
(Binary files differ)

Deleted: contrib/freetype-2.1.10-lib.zip
===================================================================
(Binary files differ)

Deleted: contrib/jpeg-6b-4-bin.zip
===================================================================
(Binary files differ)

Deleted: contrib/jpeg-6b-4-lib.zip
===================================================================
(Binary files differ)

Deleted: contrib/libogg-1.1.3.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/libpng-1.2.8-bin.zip
===================================================================
(Binary files differ)

Deleted: contrib/libpng-1.2.8-lib.zip
===================================================================
(Binary files differ)

Deleted: contrib/libvorbis-1.1.2.tar.gz
===================================================================
(Binary files differ)

Added: contrib/oldsources/SDL-1.2.11.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/SDL-1.2.11.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/SDL_image-1.2.5.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/SDL_image-1.2.5.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/SDL_mixer-1.2.7.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/SDL_mixer-1.2.7.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/SDL_ttf-2.0.8.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/SDL_ttf-2.0.8.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/freetype-2.1.10-bin.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/freetype-2.1.10-bin.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/freetype-2.1.10-lib.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/freetype-2.1.10-lib.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/jpeg-6b-4-bin.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/jpeg-6b-4-bin.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/jpeg-6b-4-lib.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/jpeg-6b-4-lib.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/libogg-1.1.3.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/libogg-1.1.3.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/libpng-1.2.8-bin.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/libpng-1.2.8-bin.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/libpng-1.2.8-lib.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/libpng-1.2.8-lib.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/libvorbis-1.1.2.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/libvorbis-1.1.2.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/ruby-1.8.4.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/ruby-1.8.4.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/smpeg-0.4.4.tar.gz
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/smpeg-0.4.4.tar.gz
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/tiff-3.8.2-1-bin.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/tiff-3.8.2-1-bin.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/tiff-3.8.2-1-lib.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/tiff-3.8.2-1-lib.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/zlib-1.2.3-bin.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/zlib-1.2.3-bin.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: contrib/oldsources/zlib-1.2.3-lib.zip
===================================================================
(Binary files differ)


Property changes on: contrib/oldsources/zlib-1.2.3-lib.zip
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Deleted: contrib/ruby-1.8.4.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/smpeg-0.4.4.tar.gz
===================================================================
(Binary files differ)

Deleted: contrib/tiff-3.8.2-1-bin.zip
===================================================================
(Binary files differ)

Deleted: contrib/tiff-3.8.2-1-lib.zip
===================================================================
(Binary files differ)

Deleted: contrib/zlib-1.2.3-bin.zip
===================================================================
(Binary files differ)

Deleted: contrib/zlib-1.2.3-lib.zip
===================================================================
(Binary files differ)



From davidkamphausen at mail.berlios.de  Sat Jul 21 09:44:40 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 21 Jul 2007 09:44:40 +0200
Subject: [Antargis-svn] r1146 - antargis/branches/rant/ext/basic
Message-ID: <200707210744.l6L7iekL015563@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-21 09:44:39 +0200 (Sat, 21 Jul 2007)
New Revision: 1146

Added:
   antargis/branches/rant/ext/basic/ag_geometry.cc
   antargis/branches/rant/ext/basic/ag_geometry.h
   antargis/branches/rant/ext/basic/ag_video_base.cc
Log:
*added missing files

Added: antargis/branches/rant/ext/basic/ag_geometry.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_geometry.cc	2007-07-16 18:48:58 UTC (rev 1145)
+++ antargis/branches/rant/ext/basic/ag_geometry.cc	2007-07-21 07:44:39 UTC (rev 1146)
@@ -0,0 +1,2591 @@
+/*
+ * Copyright (c) 2005 by David Kamphausen. All rights reserved.
+ *
+ * ag_triangle.cc
+ * by David Kamphausen (david.kamphausen at web.de)
+ *
+ * The "Antargis" project, including all files needed to compile it,
+ * is free software; you can redistribute it and/or use it and/or modify it
+ * under the terms of the GNU General Public License as published
+ * by the Free Software Foundation; either version 2 of the License,
+ * or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ * You should have received a copy of the GNU General Public
+ * License along with this program.
+ */
+
+#include <ag_geometry.h>
+#include <ag_tools.h>
+#include <ag_debug.h>
+#include <assert.h>
+#include <cmath>
+#include <map>
+#include <list>
+#include <ag_tools.h>
+#include <ag_xml.h>
+#include <ag_debug.h>
+#include <ag_stringstream.h>
+#include <ag_gauss.h>
+
+#include <ruby.h>
+
+#define MAXF 100000.0f
+
+AGVector2 invalidVec2;
+
+bool collide1d(float a1,float a2,float b1,float b2, bool normal=true)
+{
+  float amin=std::min(a1,a2);
+  float amax=std::max(a1,a2);
+  float bmin=std::min(b1,b2);
+  float bmax=std::max(b1,b2);
+
+  if(normal && (amax==bmin || bmax==amin))
+    return false;
+
+  return (amin>=bmin && amin<=bmax) || (amax>=bmin && amax<=bmax) || (bmin>=amin && bmin<=amax) || (bmax>=amin && bmax<=amin);
+}
+
+struct AGSweepResult
+{
+  enum CollisionState { COL_AT, COL_ALWAYS, COL_NEVER };
+  CollisionState state;
+  float t0;
+  float t1;
+
+  AGSweepResult()
+  {
+    state=COL_ALWAYS;
+  }
+
+  void combine(const AGSweepResult &r)
+  {
+    if(state==COL_AT)
+      {
+	if(r.state==COL_NEVER)
+	  state=COL_NEVER;
+	else if(r.state!=COL_ALWAYS) // ALWAYS has no effect
+	  {
+	    t0=std::max(t0,r.t0);
+	    t1=std::min(t1,r.t1);
+	  }
+      }
+    else if(state==COL_ALWAYS)
+      {
+	if(r.state==COL_NEVER)
+	  state=COL_NEVER;
+	else if(r.state!=COL_ALWAYS) // ALWAYS has no effect
+	  {
+	    state=COL_AT;
+	    t0=r.t0;
+	    t1=r.t1;
+	  }
+	
+      }
+    // COL_NEVER cannot be changed
+  }
+
+  bool collision(float delta) const
+  {
+    return state==COL_ALWAYS || (state==COL_AT && t1>0 && t0<delta);
+  }
+
+  float begin(float delta) const
+  {
+    if(state==COL_ALWAYS || state==COL_NEVER)
+      return MAXF;
+
+    if(t0>=0.0f && t0<delta)
+      return t0;
+    else
+      return MAXF;
+  }
+
+  bool always() const
+  {
+    return state == COL_ALWAYS;
+  }
+};
+
+AGSweepResult collide1d(float pa1,float pa2,float pb1,float pb2,float v)
+{
+  float a1=std::min(pa1,pa2);
+  float a2=std::max(pa1,pa2);
+  float b1=std::min(pb1,pb2);
+  float b2=std::max(pb1,pb2);
+  AGSweepResult r;
+
+  if(v>0)
+    {
+      r.t0=(b1-a2)/v;
+      r.t1=(b2-a1)/v;
+      r.state = AGSweepResult::COL_AT;
+
+      assert(r.t0 <= r.t1);
+    }
+  else if(v<0)
+    {
+      r.t0=(b2-a1)/v;
+      r.t1=(b1-a2)/v;
+      r.state = AGSweepResult::COL_AT;
+
+      assert(r.t0 <= r.t1);
+    }
+  else
+    {
+      if (a2 < b1 || a1 > b2)
+        r.state = AGSweepResult::COL_NEVER;
+      else
+        r.state = AGSweepResult::COL_ALWAYS;
+    }
+  return r;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// AGAngle
+/////////////////////////////////////////////////////////////////////////////
+
+AGAngle::AGAngle(float p):angle(p)
+{
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// AGVector2
+/////////////////////////////////////////////////////////////////////////////
+
+AGVector2::AGVector2(const AGString &s)
+{
+  assert(s.length()>=5);
+  assert(s[0]=='(');
+  assert(s[s.length()-1]==')');
+  AGString p=s.substr(1,s.length()-2);
+  size_t i=p.find(",");
+  assert(i!=p.npos);
+  v[0]=p.substr(0,i).toFloat();
+  v[1]=p.substr(i+1,p.length()-i-1).toFloat();
+}
+
+
+AGVector2::AGVector2(float pX,float pY)
+{
+  v[0]=pX;
+  v[1]=pY;
+}
+AGVector2::AGVector2(const AGVector2 &a)
+{
+  v[0]=a.v[0];
+  v[1]=a.v[1];
+}
+AGVector2::AGVector2(const AGAngle &a)
+{
+  v[0]=sin(a.angle);
+  v[1]=-cos(a.angle);
+}
+
+AGVector2::AGVector2()
+{
+  v[0]=v[1]=0;
+}
+
+void AGVector2::saveXML(Node &node) const
+{
+  node.set("x",AGString(v[0]));
+  node.set("y",AGString(v[1]));
+}
+void AGVector2::loadXML(const Node &node)
+{
+  v[0]=node.get("x").toFloat();
+  v[1]=node.get("y").toFloat();
+}
+
+AGVector2 AGVector2::operator-() const
+{
+  return AGVector2(-v[0],-v[1]);
+}
+
+
+float getArcInternal(float x,float y)
+{
+  if(y==0.0)
+    {
+      if(x<0.0)
+	return -M_PI/2.0;
+      else
+	return M_PI/2.0;
+    }
+  else if(y<0.0)
+    {
+      float a=M_PI+atan(x/y);
+      if(a>M_PI)
+	a-=M_PI*2.0;
+      return a;
+    }
+  else
+    return atan(x/y);
+}
+
+
+AGAngle AGVector2::getAngle() const
+{
+  return AGAngle(getArcInternal(v[0],v[1]));
+}
+
+
+bool AGVector2::operator==(const AGVector2 &a) const
+{
+  return v[0]==a.v[0] && v[1]==a.v[1] && v[2]==a.v[2];
+}
+bool AGVector2::operator!=(const AGVector2 &a) const
+{
+  return !operator==(a);
+}
+
+AGString AGVector2::toString() const
+{
+  std::ostringstream os;
+  os<<"("<<v[0]<<","<<v[1]<<")";
+  return AGString(os.str());
+}
+
+float AGVector2::length2() const
+{
+  return v[0]*v[0]+v[1]*v[1];
+}
+
+AGVector2 AGVector2::dim2() const
+{
+  return *this;
+}
+
+
+bool AGVector2::nonZero() const
+{
+  return length2()!=0.0f;
+}
+
+AGVector2 AGVector2::normal() const
+{
+  return AGVector2(-v[1],v[0]);
+}
+
+void AGVector2::setX(float pX)
+{
+  v[0]=pX;
+}
+void AGVector2::setY(float pY)
+{
+  v[1]=pY;
+}
+
+float AGVector2::getX() const
+{
+  return v[0];
+}
+float AGVector2::getY() const
+{
+  return v[1];
+}
+
+(AGVector2::operator float*)()
+{
+  return v;
+}
+(AGVector2::operator const float*)() const
+{
+  return v;
+}
+
+AGVector2 AGVector2::operator-(const AGVector2 &p) const
+{
+  return AGVector2(v[0]-p.v[0],v[1]-p.v[1]);
+}
+AGVector2 AGVector2::operator+(const AGVector2 &p) const
+{
+  return AGVector2(v[0]+p.v[0],v[1]+p.v[1]);
+}
+AGVector2 &AGVector2::operator+=(const AGVector2 &p)
+{
+  v[0]+=p.v[0];
+  v[1]+=p.v[1];
+  return *this;
+}
+AGVector2 &AGVector2::operator-=(const AGVector2 &p)
+{
+  v[0]-=p.v[0];
+  v[1]-=p.v[1];
+  return *this;
+}
+
+float AGVector2::operator*(const AGVector2 &p) const
+{
+  return v[0]*p.v[0]+v[1]*p.v[1];
+}
+AGVector2 &AGVector2::operator*=(float f)
+{
+  v[0]*=f;
+  v[1]*=f;
+  return *this;
+}
+AGVector2 &AGVector2::operator/=(float f)
+{
+  v[0]/=f;
+  v[1]/=f;
+  return *this;
+}
+AGVector2 AGVector2::operator*(float f) const
+{
+  return AGVector2(v[0]*f,v[1]*f);
+}
+AGVector2 AGVector2::operator/(float f) const
+{
+  f=1.0/f;
+  return AGVector2(v[0]*f,v[1]*f);
+}
+
+float AGVector2::length() const
+{
+  return sqrt(v[0]*v[0]+v[1]*v[1]);
+}
+
+AGVector2 AGVector2::normalized() const
+{
+  if(length2()!=0.0f)
+    return *this/length();
+  else
+    return *this;
+}
+void AGVector2::normalize()
+{
+  if(length2()!=0.0f)
+    operator/=(length());
+}
+
+float AGVector2::operator[](int index) const
+{
+  assert(index>=0 && index<2);
+  return v[index];
+}
+float &AGVector2::operator[](int index)
+{
+  assert(index>=0 && index<2);
+  return v[index];
+}
+
+
+/////////////////////////////////////////////////////////////////////////////
+// AGVector3
+/////////////////////////////////////////////////////////////////////////////
+
+AGVector3::AGVector3(const AGVector2 &p,float h)
+{
+  v[0]=p[0];
+  v[1]=p[1];
+  v[2]=h;
+}
+
+AGVector3::AGVector3(float pX,float pY,float pZ)
+{
+  v[0]=pX;
+  v[1]=pY;
+  v[2]=pZ;
+}
+AGVector3::AGVector3(const AGVector3 &a)
+{
+  v[0]=a.v[0];
+  v[1]=a.v[1];
+  v[2]=a.v[2];
+}
+AGVector3::AGVector3(const AGAngle &a)
+{
+  v[0]=sin(a.angle);
+  v[1]=-cos(a.angle);
+  v[2]=0.0f;
+}
+
+AGVector3::AGVector3()
+{
+  v[0]=v[1]=0;
+  v[2]=0.0f;
+}
+
+AGVector2 AGVector3::dim2() const
+{
+  return AGVector2(v[0],v[1]);
+}
+
+
+AGVector3 AGVector3::operator-() const
+{
+  return AGVector3(-v[0],-v[1],-v[2]);
+}
+
+
+void AGVector3::saveXML(Node &node) const
+{
+  node.set("x",AGString(v[0]));
+  node.set("y",AGString(v[1]));
+  node.set("z",AGString(v[2]));
+}
+void AGVector3::loadXML(const Node &node)
+{
+  v[0]=node.get("x").toFloat();
+  v[1]=node.get("y").toFloat();
+  v[2]=node.get("z").toFloat();
+}
+
+
+
+
+/*
+float getArcInternal(float x,float y)
+{
+  if(y==0.0)
+    {
+      if(x<0.0)
+	return -M_PI/2.0;
+      else
+	return M_PI/2.0;
+    }
+  else if(y<0.0)
+    {
+      float a=M_PI+atan(x/y);
+      if(a>M_PI)
+	a-=M_PI*2.0;
+      return a;
+    }
+  else
+    return atan(x/y);
+}
+*/
+
+AGAngle AGVector3::getAngle() const
+{
+  return AGAngle(getArcInternal(v[0],v[1]));
+}
+
+
+bool AGVector3::operator==(const AGVector3 &a) const
+{
+  float m=std::max(v[0],std::max(v[1],v[2]));
+  
+  m*=0.0001;
+  return fabs(v[0]-a.v[0])<m && fabs(v[1]-a.v[1])<m && fabs(v[2]-a.v[2])<m;
+}
+bool AGVector3::operator!=(const AGVector3 &a) const
+{
+  return !operator==(a);
+}
+
+AGString AGVector3::toString() const
+{
+  std::ostringstream os;
+  os<<"("<<v[0]<<","<<v[1]<<","<<v[2]<<")";
+  return AGString(os.str());
+}
+
+float AGVector3::length2() const
+{
+  return v[0]*v[0]+v[1]*v[1]+v[2]*v[2];
+}
+
+
+bool AGVector3::nonZero() const
+{
+  return length2()!=0.0f;
+}
+
+AGVector3 AGVector3::normal() const
+{
+  return AGVector3(-v[1],v[0],v[2]);
+}
+
+void AGVector3::setX(float pX)
+{
+  v[0]=pX;
+}
+void AGVector3::setY(float pY)
+{
+  v[1]=pY;
+}
+void AGVector3::setZ(float pZ)
+{
+  v[2]=pZ;
+}
+
+float AGVector3::getX() const
+{
+  return v[0];
+}
+float AGVector3::getY() const
+{
+  return v[1];
+}
+
+float AGVector3::getZ() const
+{
+  return v[2];
+}
+
+(AGVector3::operator float*)()
+{
+  return v;
+}
+AGVector3 AGVector3::operator%(const AGVector3 &a) const
+{
+  return AGVector3(v[1] * a.v[2] - v[2] * a.v[1],
+		   v[2] * a.v[0] - v[0] * a.v[2],
+		   v[0] * a.v[1] - v[1] * a.v[0]);
+}
+
+
+AGVector3 AGVector3::operator-(const AGVector3 &p) const
+{
+  return AGVector3(v[0]-p.v[0],v[1]-p.v[1],v[2]-p.v[2]);
+}
+AGVector3 AGVector3::operator+(const AGVector3 &p) const
+{
+  return AGVector3(v[0]+p.v[0],v[1]+p.v[1],v[2]+p.v[2]);
+}
+AGVector3 &AGVector3::operator+=(const AGVector3 &p)
+{
+  v[0]+=p.v[0];
+  v[1]+=p.v[1];
+  v[2]+=p.v[2];
+  return *this;
+}
+AGVector3 &AGVector3::operator-=(const AGVector3 &p)
+{
+  v[0]+=p.v[0];
+  v[1]+=p.v[1];
+  v[2]+=p.v[2];
+  return *this;
+}
+
+AGVector3 &AGVector3::operator*=(float f)
+{
+  v[0]*=f;
+  v[1]*=f;
+  v[2]*=f;
+  return *this;
+}
+AGVector3 &AGVector3::operator/=(float f)
+{
+  v[0]/=f;
+  v[1]/=f;
+  v[2]/=f;
+  return *this;
+}
+AGVector3 AGVector3::operator*(float f) const
+{
+  return AGVector3(v[0]*f,v[1]*f,v[2]*f);
+}
+AGVector3 AGVector3::operator/(float f) const
+{
+  f=1.0/f;
+  return AGVector3(v[0]*f,v[1]*f,v[2]*f);
+}
+
+float AGVector3::length() const
+{
+  return sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);
+}
+
+AGVector3 AGVector3::normalized() const
+{
+  if(length2()!=0.0f)
+    return *this/length();
+  else
+    return *this;
+}
+void AGVector3::normalize()
+{
+  if(length2()!=0.0f)
+    operator/=(length());
+}
+
+float AGVector3::operator[](int index) const
+{
+  assert(index>=0 && index<3);
+  return v[index];
+}
+float &AGVector3::operator[](int index)
+{
+  assert(index>=0 && index<3);
+  return v[index];
+}
+
+
+////////////////////////////////////////////////////////////////////////////
+// AGMatrix
+/////////////////////////////////////////////////////////////////////////////
+
+AGMatrix3::AGMatrix3()
+{
+  a[0][1]=a[0][2]=
+    a[1][0]=a[1][2]=
+    a[2][0]=a[2][1]=0.0f;
+
+  a[0][0]=a[1][1]=a[2][2]=1.0f;
+}
+
+AGMatrix3::AGMatrix3(const AGAngle &n)
+{
+  a[0][0]=cos(n.angle);
+  a[1][0]=sin(n.angle);
+  a[0][1]=-sin(n.angle);
+  a[1][1]=cos(n.angle);
+  a[2][0]=a[2][1]=a[0][2]=a[1][2]=0.0f;
+  a[2][2]=1.0f;
+}
+
+AGMatrix3::AGMatrix3(const AGVector3 &n)
+{
+  a[0][0]=a[1][1]=a[2][2]=1.0f;
+  a[0][1]=a[0][2]=
+    a[1][0]=a[1][2]=
+    a[2][0]=a[2][1]=0.0f;
+  a[2][0]=n[0];
+  a[2][1]=n[1];
+}
+
+AGMatrix3::AGMatrix3(float x,float y)
+{
+  a[0][0]=x;
+  a[1][1]=y;
+  a[2][2]=1.0f;
+  a[0][1]=a[0][2]=
+    a[1][0]=a[1][2]=
+    a[2][0]=a[2][1]=0.0f;
+  a[2][0]=0.0f;
+  a[2][1]=0.0f;
+  
+}
+
+AGMatrix3 AGMatrix3::transposed() const
+{
+  AGMatrix3 a;
+  for(size_t x=0;x<3;x++)
+    for(size_t y=0;y<3;y++)
+      a.set(x,y,get(y,x));
+  return a;
+}
+
+
+AGMatrix3 AGMatrix3::inverted() const
+{
+  // gauss-alg.
+  AGMatrix3 a;
+  AGMatrix3 b(*this);
+
+  gauss(a,b,3);
+  return a;
+}
+
+void AGMatrix3::swapRows(size_t a,size_t b)
+{
+  if(a==b)
+    return;
+  assert(a<3);
+  assert(b<3);
+  for(size_t x=0;x<3;x++)
+    {
+      float t=get(x,a);
+      set(x,a,get(x,b));
+      set(x,b,t);
+    }
+}
+
+void AGMatrix3::swapCols(size_t a,size_t b)
+{
+  if(a==b)
+    return;
+  assert(a<3);
+  assert(b<3);
+  for(size_t y=0;y<3;y++)
+    {
+      float t=get(a,y);
+      set(a,y,get(b,y));
+      set(b,y,t);
+    }
+}
+
+
+void AGMatrix3::set(size_t x,size_t y,float f)
+{
+  assert(x>=0 && x<3);
+  assert(y>=0 && y<3);
+  a[x][y]=f;
+}
+float AGMatrix3::get(size_t x,size_t y) const
+{
+  assert(x>=0 && x<3);
+  assert(y>=0 && y<3);
+  return a[x][y];
+}
+
+float &AGMatrix3::get(size_t x,size_t y)
+{
+  assert(x>=0 && x<3);
+  assert(y>=0 && y<3);
+  return a[x][y];
+}
+
+AGMatrix3::Row AGMatrix3::operator[](size_t y)
+{
+  Row r;
+  r.matrix=this;
+  r.y=y;
+  return r;
+}
+const AGMatrix3::Row AGMatrix3::operator[](size_t y) const
+{
+  Row r;
+  r.matrix=const_cast<AGMatrix3*>(this);
+  r.y=y;
+  return r;
+}
+
+AGMatrix3 AGMatrix3::operator-() const
+{
+  AGMatrix3 n;
+  for(size_t x=0;x<3;x++)
+    for(size_t y=0;y<3;y++)
+      n[x][y]=-(*this)[x][y];
+  return n;
+}
+
+
+
+AGMatrix3 AGMatrix3::operator*(const AGMatrix3 &m) const
+{
+  AGMatrix3 n;
+  size_t x,y;
+  for(x=0;x<3;x++)
+    for(y=0;y<3;y++)
+      n.a[x][y]=a[0][y]*m.a[x][0]+
+	a[1][y]*m.a[x][1]+
+	a[2][y]*m.a[x][2];
+  return n;
+}
+AGMatrix3 &AGMatrix3::operator*=(const AGMatrix3 &m)
+{
+  *this=(*this)*m;
+  return *this;
+}
+
+AGVector3 AGMatrix3::operator*(const AGVector3 &v) const
+{
+  return AGVector3(a[0][0]*v[0]+a[1][0]*v[1]+a[2][0]*v[2],
+		   a[0][1]*v[0]+a[1][1]*v[1]+a[2][1]*v[2],
+		   a[0][2]*v[0]+a[1][2]*v[1]+a[2][2]*v[2]);
+}
+
+AGString AGMatrix3::toString() const
+{
+  std::ostringstream os;
+  os<<"("<<a[0][0]<<","<<a[1][0]<<","<<a[2][0]<<")"<<std::endl;
+  os<<"("<<a[0][1]<<","<<a[1][1]<<","<<a[2][1]<<")"<<std::endl;
+  os<<"("<<a[0][2]<<","<<a[1][2]<<","<<a[2][2]<<")"<<std::endl;
+  return AGString(os.str());
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// AGTriangle2
+/////////////////////////////////////////////////////////////////////////////
+
+AGTriangle2::AGTriangle2(const AGVector2 &v0,const AGVector2 &v1,const AGVector2 &v2)
+{
+  p[0]=v0;
+  p[1]=v1;
+  p[2]=v2;
+}
+
+AGRect2 AGTriangle2::getBBox() const
+{
+  float minx=std::min(p[0].getX(),std::min(p[1].getX(),p[2].getX()));
+  float maxx=std::max(p[0].getX(),std::max(p[1].getX(),p[2].getX()));
+  float miny=std::min(p[0].getY(),std::min(p[1].getY(),p[2].getY()));
+  float maxy=std::max(p[0].getY(),std::max(p[1].getY(),p[2].getY()));
+
+  return AGRect2(minx,miny,maxx-minx,maxy-miny);
+}
+
+
+void AGTriangle2::apply(const AGMatrix3 &m)
+{
+  p[0]=(m*AGVector3(p[0],1)).dim2();
+  p[1]=(m*AGVector3(p[1],1)).dim2();
+  p[2]=(m*AGVector3(p[2],1)).dim2();
+}
+
+/* FIXME: this will be some sweep-base collision detection,
+   HOWEVER there's the angular-velocity still missing :-(
+
+AGCollisionData AGTriangle2::collide(const AGTriangle2 &t,const AGVector &v0,const AGVector &v1) const
+{
+  AGCollisionData data;
+
+  AGVector v=v1-v0;
+
+  float t0,t1;
+
+  std::vector<AGVector> v=getNormals();
+  append(v,t.getNormals());
+  std::vector<AGVector>::iterator i=v.begin();
+  for(;i!=v.end();i++)
+    {
+      float min1,min2,max1,max2;
+      size_t j;
+      for(j=0;j<3;j++)
+	{
+	  if(j==0)
+	    {
+	      min1=max1=(*i)*p[j];
+	      min2=max2=(*i)*t.p[j];
+	    }
+	  else
+	    {
+	      float v0=(*i)*p[j];
+	      float v1=(*i)*t.p[j];
+	      min1=std::min(min1,v0);
+	      max1=std::max(max1,v0);
+	      min2=std::min(min2,v1);
+	      max2=std::max(max2,v1);
+	    }
+	}
+      
+      float a1=
+    }
+}
+*/
+
+std::vector<AGVector2> AGTriangle2::collisionPoints(const AGLine2 &l) const
+{
+  std::vector<AGVector2> ps;
+  std::vector<AGLine2> lines=getLines();
+  std::vector<AGLine2>::iterator i=lines.begin();
+  AGVector2 p;
+  //  cdebug(toString());
+  for(;i!=lines.end();i++)
+    {
+      p=i->collisionPoint(l);
+      if(p!=invalidVec2)
+	ps.push_back(p);
+    }
+  return ps;
+}
+
+AGTriangle2 AGTriangle2::applied(const AGMatrix3 &m) const
+{
+  return AGTriangle2((m*AGVector3(p[0],1)).dim2(),
+		     (m*AGVector3(p[1],1)).dim2(),
+		     (m*AGVector3(p[2],1)).dim2());
+}
+
+AGString AGTriangle2::toString() const
+{
+  std::ostringstream os;
+  os<<"["<<p[0].toString()<<" "<<p[1].toString()<<" "<<p[2].toString()<<"]";
+  return AGString(os.str());
+}
+
+AGVector2 AGTriangle2::get(int index) const
+{
+  return p[index];
+}
+
+
+AGVector2 AGTriangle2::operator[](int index) const
+{
+  return p[index];
+}
+
+bool AGTriangle2::collide(const AGTriangle2 &t) const
+{
+  std::vector<AGVector2> v=getNormals();
+  append(v,t.getNormals());
+  std::vector<AGVector2>::iterator i=v.begin();
+
+  for(;i!=v.end();i++)
+    {
+      float min1,min2,max1,max2;
+      size_t j;
+      for(j=0;j<3;j++)
+	{
+	  if(j==0)
+	    {
+	      min1=max1=(*i)*p[j];
+	      min2=max2=(*i)*t.p[j];
+	    }
+	  else
+	    {
+	      float v0=(*i)*p[j];
+	      float v1=(*i)*t.p[j];
+	      min1=std::min(min1,v0);
+	      max1=std::max(max1,v0);
+	      min2=std::min(min2,v1);
+	      max2=std::max(max2,v1);
+	    }
+	}
+      if(!collide1d(min1,max1,min2,max2))
+	return false;
+    }
+  return true;
+}
+
+std::vector<AGVector2> AGTriangle2::getNormals() const
+{
+  std::vector<AGVector2> l;
+  l.push_back((p[1]-p[0]).normalized().normal());
+  l.push_back((p[2]-p[1]).normalized().normal());
+  l.push_back((p[0]-p[2]).normalized().normal());
+  return l;
+}
+
+std::vector<AGLine2> AGTriangle2::getLines() const
+{
+  std::vector<AGLine2> v;
+  v.push_back(AGLine2(p[0],p[1]));
+  v.push_back(AGLine2(p[1],p[2]));
+  v.push_back(AGLine2(p[2],p[0]));
+  return v;
+}
+
+bool AGTriangle2::contains(const AGVector2 &pp) const
+{
+  std::vector<AGVector2> l=getNormals(); // BEWARE: dont' change the order in getNormals!!!
+
+  if(AGsign((pp-p[0])*l[0])==AGsign((p[2]-p[0])*l[0]))
+    if(AGsign((pp-p[1])*l[1])==AGsign((p[0]-p[1])*l[1]))
+      if(AGsign((pp-p[2])*l[2])==AGsign((p[1]-p[2])*l[2]))
+	return true;
+  return false;
+}
+
+
+AGVector2 AGTriangle2::touchPoint(const AGTriangle2 &t) const
+{
+  // assume that one point of a triangle is contained in the other and return this point
+  size_t i;
+  for(i=0;i<3;i++)
+    {
+      if(contains(t[i]))
+	return t[i];
+      else if(t.contains((*this)[i]))
+	return (*this)[i];
+    }
+  return invalidVec2;
+}
+
+AGVector2 AGTriangle2::touchVector(const AGTriangle2 &t) const
+{
+  //#ifdef OLD_TOUCH_APPROXIMATION
+  // try to get line, which has two intersections with other triangle's lines
+
+  std::vector<AGLine2> l0=getLines();
+  std::vector<AGLine2> l1=t.getLines();
+
+  std::vector<AGLine2>::iterator i,j;
+
+  std::map<AGLine2*,int> sum;
+
+  for(i=l0.begin();i!=l0.end();i++)
+    for(j=l1.begin();j!=l1.end();j++)
+      {
+	if(i->collide(*j))
+	  {
+	    sum[&(*i)]++;
+	    sum[&(*j)]++;
+	  }
+      }
+  std::map<AGLine2*,int>::iterator k=sum.begin();
+  for(;k!=sum.end();k++)
+    {
+      if(k->second==2)
+	return k->first->normal();
+    }
+
+  // FIXME: not found - find other approximation
+
+  //#else
+  {
+  size_t i;
+  for(i=0;i<3;i++)
+    {
+      if(contains(t[i]))
+	return nearestLine(t[i]).normal();
+      else if(t.contains((*this)[i]))
+	return t.nearestLine((*this)[i]).normal();
+    }
+  return invalidVec2;
+  }
+  //#endif
+}
+
+AGLine2 AGTriangle2::nearestLine(const AGVector2 &v) const
+{
+  std::vector<AGLine2> l=getLines();
+  std::vector<AGLine2>::iterator i;
+  std::map<float,AGLine2> dist;
+  for(i=l.begin();i!=l.end();i++)
+    {
+      dist[i->distance(v)]=*i;
+      //      cdebug(i->distance(v)<<i->toString());
+    }
+  return dist.begin()->second;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// AGCircle2
+/////////////////////////////////////////////////////////////////////////////
+
+AGCircle2::AGCircle2(const AGVector3 &v,float rad):p(v),radius(rad)
+{
+}
+
+bool AGCircle2::inCircle(const AGVector3 &v) const
+{
+  return (v-p).length2()<radius*radius;
+}
+bool AGCircle2::outCircle(const AGVector3 &v) const
+{
+  return (v-p).length2()>radius*radius;
+}
+
+bool AGCircle2::inCircle(const AGTriangle2 &t) const
+{
+  return inCircle(t.get(0)) && inCircle(t.get(1)) && inCircle(t.get(2));
+}
+bool AGCircle2::outCircle(const AGTriangle2 &t) const
+{
+  return outCircle(t.get(0)) && outCircle(t.get(1)) && outCircle(t.get(2));
+}
+
+AGVector3 AGCircle2::getPos() const
+{
+  return p;
+}
+float AGCircle2::getRadius() const
+{
+  return radius;
+}
+
+
+
+/////////////////////////////////////////////////////////////////////////////
+// AGTriangle3
+/////////////////////////////////////////////////////////////////////////////
+AGTriangle3::AGTriangle3(const AGVector3 &v0,const AGVector3 &v1,const AGVector3 &v2)
+{
+  p[0]=v0;
+  p[1]=v1;
+  p[2]=v2;
+}
+
+AGVector4 AGTriangle3::collide(const AGLine3 &pLine) const
+{
+  AGVector3 normal=(p[1]-p[0])%(p[2]-p[0]);
+  AGVector4 mfalse(0,0,0,0);
+  if(normal.length2()==0)
+    return mfalse; // bad triangle
+  normal.normalize();
+  float v0=(pLine.getV0()-p[0])*normal;
+  float v1=(pLine.getV1()-p[0])*normal;
+  float vall=v0-v1;
+  float v=v0/vall;
+
+  if(v<0 || v>1)
+    return mfalse; // line doesn't intersect triangle's plane
+
+  AGVector3 ip=pLine.getV1()*v+pLine.getV0()*(1-v);
+
+  assert(fabs((ip-p[0])*normal)<0.00001);
+  // check if point is on triangle (already checked that point is in plane)
+  AGVector3 n0=(p[2]-p[1])%normal;
+  AGVector3 n1=(p[2]-p[0])%normal;
+  AGVector3 n2=(p[0]-p[1])%normal;
+  n0.normalize();
+  n1.normalize();
+  n2.normalize();
+
+  if(n0==n1 || n0==n2 || n1==n2)
+    return mfalse;
+
+  assert(fabs(n0*normal)<0.0001);
+  assert(fabs(n1*normal)<0.0001);
+  assert(fabs(n2*normal)<0.0001);
+
+  assert(fabs((p[2]-p[1])*n0)<0.0001);
+  assert(fabs((p[2]-p[0])*n1)<0.0001);
+  assert(fabs((p[0]-p[1])*n2)<0.0001);
+
+  if(AGsign((p[0]-p[1])*n0)!=AGsign((ip-p[1])*n0))
+    return mfalse;
+  if(AGsign((p[1]-p[2])*n1)!=AGsign((ip-p[2])*n1))
+    return mfalse;
+  if(AGsign((p[2]-p[1])*n2)!=AGsign((ip-p[1])*n2))
+    return mfalse;
+
+
+  return AGVector4(ip,1);
+}
+
+
+AGString AGTriangle3::toString() const
+{
+  std::ostringstream os;
+  os<<"["<<p[0].toString()<<";"<<p[1].toString()<<";"<<p[2].toString()<<"]";
+  return AGString(os.str());
+}
+
+AGVector3 AGTriangle3::operator[](int index) const
+{
+  assert(index>=0);
+  assert(index<3);
+  return p[index];
+}
+
+
+/////////////////////////////////////////////////////////////////////////////
+// AGRect2F
+/////////////////////////////////////////////////////////////////////////////
+
+AGRect2::AGRect2(const SDL_Rect &r)
+{
+  v0=AGVector2(r.x,r.y);
+  v1=AGVector2(r.x+r.w,r.y+r.h);
+}
+
+
+AGRect2::AGRect2(const AGString &ps)
+{
+  std::istringstream is;
+  char c;
+  float x,y,w,h;
+  is.str(ps);
+  is>>c;
+  is>>x;
+  is>>c;
+  is>>y;
+  is>>c;
+  is>>w;
+  is>>c;
+  is>>h;
+  is>>c;
+  v0=AGVector2(x,y);
+  v1=AGVector2(x+w,y+h);
+}
+
+
+AGRect2::AGRect2()
+{
+}
+
+AGRect2::AGRect2(const AGVector2 &pv0,const AGVector2 &pv1):
+  v0(pv0),v1(pv1)
+{
+}
+
+AGRect2::AGRect2(float x,float y,float w,float h):
+  v0(x,y),v1(x+w,y+h)
+{
+}
+
+AGRect2 AGRect2::alignGrid() const
+{
+  return AGRect2((int)x(),
+		 (int)y(),
+		 (int)w(),
+		 (int)h());
+}
+
+
+void AGRect2::check() const
+{
+  float mx0=std::min(x0(),x1());
+  float my0=std::min(y0(),y1());
+  float mx1=std::max(x0(),x1());
+  float my1=std::max(y0(),y1());
+
+  AGRect2 *p=const_cast<AGRect2*>(this);
+  p->v0[0]=mx0;
+  p->v0[1]=my0;
+  p->v1[0]=mx1;
+  p->v1[1]=my1;
+}
+
+AGRect2& AGRect2::operator+=(const AGRect2 &r)
+{
+  if(width()==0 || height()==0)
+    *this=r;
+  else
+    {
+      include(r[0]);
+      include(r[1]);
+    }
+  return *this;
+}
+
+
+
+AGRect2 AGRect2::intersect(const AGRect2 &r) const
+{
+  check();
+  r.check();
+
+  float mx0=std::max(x0(),r.x0());
+  float my0=std::max(y0(),r.y0());
+  float mx1=std::min(x1(),r.x1());
+  float my1=std::min(y1(),r.y1());
+
+  if(mx0>mx1)
+    mx0=mx1;
+  if(my0>my1)
+    my0=my1;
+
+  return AGRect2(AGVector2(mx0,my0),
+		 AGVector2(mx1,my1));
+}
+
+std::vector<AGRect2> AGRect2::difference(const AGRect2 &r) const
+{
+  std::vector<AGRect2> l;
+  for(int i=0;i<3;i++)
+    for(int j=0;j<3;j++)
+      {
+	
+	float nx,ny,nw,nh;
+	
+	switch(i)
+	  {
+	  case 0:
+	    nx=x0();
+	    nw=r.x0()-x0();
+	    break;
+	  case 1:
+	    nx=r.x0();
+	    nw=r.x1()-r.x0();
+	    break;
+	  case 2:
+	    nx=r.x1();
+	    nw=x1()-r.x1();
+	    break;
+	  };
+	switch(j)
+	  {
+	  case 0:
+	    ny=y0();
+	    nh=r.y0()-y0();
+	    break;
+	  case 1:
+	    ny=r.y0();
+	    nh=r.y1()-r.y0();
+	    break;
+	  case 2:
+	    ny=r.y1();
+	    nh=y1()-r.y1();
+	    break;
+	  };
+	if(nw>0 && nh>0)
+	  {
+	    AGRect2 n=intersect(AGRect2(nx,ny,nw,nh));
+	    if(n.w()>0 && n.h()>0)
+	      if(!r.contains(n))
+		l.push_back(n);
+	  }
+      }
+  return l;
+}
+
+
+
+AGVector2 AGRect2::operator[](size_t i) const
+{
+  switch(i)
+    {
+    case 0:
+      return v0;
+    case 1:
+      return v1;
+    default:
+      throw AGString("invalid index in AGRect2::operator[]");
+    }
+  return v0;
+}
+AGVector2 &AGRect2::operator[](size_t i)
+{
+  switch(i)
+    {
+    case 0:
+      return v0;
+    case 1:
+      return v1;
+    default:
+      throw AGString("invalid index in AGRect2::operator[]");
+    }
+  return v0;
+}
+
+AGRect2 AGRect2::shrink(float f) const
+{
+  AGVector2 d(f,f);
+  return AGRect2(v0+d,v1-d);
+}
+
+AGRect2 AGRect2::grow(float f) const
+{
+  AGVector2 d(f,f);
+  return AGRect2(v0-d,v1+d);
+}
+
+
+bool AGRect2::operator==(const AGRect2 &r) const
+{
+  return v0==r.v0 && v1==r.v1;
+}
+bool AGRect2::operator!=(const AGRect2 &r) const
+{
+  return v0!=r.v0 || v1!=r.v1;
+}
+
+
+
+SDL_Rect AGRect2::sdl() const
+{
+  SDL_Rect r;
+  r.x=int(v0[0]);
+  r.y=int(v0[1]);
+  r.w=int(v1[0]-v0[0]+0.1); // prevent shitty rounding error !
+  r.h=int(v1[1]-v0[1]+0.1);
+
+  return r;
+}
+
+float AGRect2::setWidth(float w)
+{
+  v1[0]=v0[0]+w;
+  return w;
+}
+float AGRect2::setHeight(float h)
+{
+  v1[1]=v0[1]+h;
+  return h;
+}
+
+float AGRect2::x0() const
+{
+  return v0[0];
+}
+float AGRect2::y0() const
+{
+  return v0[1];
+}
+float AGRect2::x1() const
+{
+  return v1[0];
+}
+float AGRect2::y1() const
+{
+  return v1[1];
+}
+
+AGRect2 AGRect2::origin() const
+{
+  return AGRect2(0,0,w(),h());
+}
+
+float AGRect2::content() const
+{
+  return (v1[0]-v0[0])*(v1[1]-v0[1]);
+}
+
+
+void AGRect2::include(const AGVector2 &v)
+{
+  v0[0]=std::min(v0[0],v[0]);
+  v0[1]=std::min(v0[1],v[1]);
+  v1[0]=std::max(v1[0],v[0]);
+  v1[1]=std::max(v1[1],v[1]);
+}
+
+
+std::list<AGRect2> AGRect2::split() const
+{
+  std::list<AGRect2> l;
+  float hw=(v1[0]-v0[0])/2;
+  float hh=(v1[1]-v0[1])/2;
+  l.push_back(AGRect2(v0[0]   ,v0[1]   ,hw,hh));
+  l.push_back(AGRect2(v0[0]+hw,v0[1]   ,hw,hh));
+  l.push_back(AGRect2(v0[0]   ,v0[1]+hh,hw,hh));
+  l.push_back(AGRect2(v0[0]+hw,v0[1]+hh,hw,hh));
+
+  return l;
+}
+
+
+bool AGRect2::contains(const AGRect2 &v) const
+{
+  return contains(v.getV0()) && contains(v.getV1()) && contains(v.getV01()) && contains(v.getV10());
+}
+AGVector2 AGRect2::getV0() const
+{
+  return v0;
+}
+AGVector2 AGRect2::getV1() const
+{
+  return v1;
+}
+AGVector2 AGRect2::getV01() const
+{
+  return AGVector2(v0[0],v1[1]);
+}
+AGVector2 AGRect2::getV10() const
+{
+  return AGVector2(v1[0],v0[1]);
+}
+
+
+bool AGRect2::contains(const AGVector2 &v) const
+{
+  return (v.getX()>= v0.getX() && v.getY()>=v0.getY() && v.getX()<=v1.getX() && v.getY()<=v1.getY());
+}
+
+AGString AGRect2::toString() const
+{
+  return v0.toString()+":"+v1.toString();
+}
+
+
+void AGRect2::setX(float p)
+{
+  float mw=w();
+  v0.setX(p);
+  v1.setX(p+mw);
+}
+void AGRect2::setY(float p)
+{
+  float mh=h();
+  v0.setY(p);
+  v1.setY(p+mh);
+}
+
+void AGRect2::setLeft(float p)
+{
+  float mw=w();
+  v0.setX(p);
+  v1.setX(p+mw);
+}
+void AGRect2::setTop(float p)
+{
+  float mh=h();
+  v0.setY(p);
+  v1.setY(p+mh);
+}
+
+void AGRect2::setRight(float p)
+{
+  v1.setX(p);
+}
+void AGRect2::setBottom(float p)
+{
+  v1.setY(p);
+}
+
+
+
+bool AGRect2::collide(const AGRect2 &r) const
+{
+  return collide1d(v0.getX(),v1.getX(),r.v0.getX(),r.v1.getX()) && collide1d(v0.getY(),v1.getY(),r.v0.getY(),r.v1.getY());
+}
+
+AGRect2 AGRect2::operator+(const AGVector2 &v) const
+{
+  return AGRect2(v0+v,v1+v);
+}
+AGRect2 &AGRect2::operator+=(const AGVector2 &v)
+{
+  v0+=v;
+  v1+=v;
+  return *this;
+}
+
+AGRect2 &AGRect2::operator-=(const AGVector2 &v)
+{
+  v0-=v;
+  v1-=v;
+  return *this;
+}
+
+float AGRect2::x() const
+{
+  return v0.getX();
+}
+float AGRect2::y() const
+{
+  return v0.getY();
+}
+float AGRect2::w() const
+{
+  return v1.getX()-v0.getX();
+}
+float AGRect2::h() const
+{
+  return v1.getY()-v0.getY();
+}
+
+float AGRect2::width() const
+{
+  return v1.getX()-v0.getX();
+}
+float AGRect2::height() const
+{
+  return v1.getY()-v0.getY();
+}
+
+
+/////////////////////////////////////////////////////////////////////////////
+// AGLine
+/////////////////////////////////////////////////////////////////////////////
+
+AGLine2::AGLine2()
+{
+}
+
+AGLine2::AGLine2(const AGVector2 &pv0,const AGVector2 &pv1):
+  v0(pv0),v1(pv1)
+{
+}
+
+AGVector2 &AGLine2::operator[](size_t i)
+{
+  switch(i)
+    {
+    case 0:
+      return v0;
+    case 1:
+      return v1;
+    default:
+      throw AGString("wrong index in AGLine::op[]");
+    }
+  return v0;
+}
+AGVector2 AGLine2::operator[](size_t i) const
+{
+  switch(i)
+    {
+    case 0:
+      return v0;
+    case 1:
+      return v1;
+    default:
+      throw AGString("wrong index in AGLine::op[]");
+    }
+  return v0;
+}
+
+  
+AGVector2 AGLine2::getV0() const
+{
+  return v0;
+}
+AGVector2 AGLine2::getV1() const
+{
+  return v1;
+}
+
+bool AGLine2::has(const AGVector2 &v) const
+{
+  return v0==v || v1==v;
+}
+
+AGVector2 AGLine2::collisionPointNI(const AGLine2 &l) const
+{
+  float dx, dy;
+  float ldx, ldy;
+  dx = v1.getX() - v0.getX();
+  dy = v1.getY() - v0.getY();
+  ldx = l.v1.getX() - l.v0.getX();
+  ldy = l.v1.getY() - l.v0.getY();
+
+  AGVector2 p;
+  
+  if(dx==0.0f)
+    {
+      if(ldx==0.0f)
+	return invalidVec2; // invalid
+      
+      // ldy!=0 !!
+      float lm = ldy/ldx;
+      float lb = l.v0.getY() - lm * l.v0.getX();
+
+      //      cdebug(lm);
+      //      cdebug(lb);
+      
+      assert(lm!=0.0f);
+      p=AGVector2(v0.getX(),lm*v0.getX()+lb);
+    }
+  else if(ldx==0.0f)
+    {
+      p=l.collisionPointNI(*this);
+    }
+  else
+    {
+      // ldy!=0 && dy!=0
+      float m =dy/dx;
+      float lm =ldy/ldx;
+      float b = v0.getY() - m * v0.getX();
+      float lb=l.v0.getY() - lm * l.v0.getX();
+
+      if(m == lm)
+	return AGVector2(0,0); // parallel
+      float x=(lb-b)/(m-lm); 
+      p=AGVector2(x,m*x+b);
+    }
+  return p;
+}
+AGVector2 AGLine2::collisionPoint(const AGLine2 &l) const
+{
+  AGVector2 p=collisionPointNI(l);
+  if(p==invalidVec2)
+    return p;
+  // check for inclusion
+  if(includes(p) && l.includes(p))
+    {
+    assert(distance(p)<0.01);
+    assert(l.distance(p)<0.01);
+    return p;
+  }
+  else
+    return invalidVec2;
+}
+
+bool AGLine2::includes(const AGVector2 &v) const
+{
+  float f=(v-v0)*((v1-v0).normalized());
+  if(f>=0 && f<(v1-v0).length())
+  {
+    /*    cdebug(v0.toString()<<"  "<<v1.toString()<<"  "<<v.toString());
+    cdebug((v-v0).toString()<<"   "<<(v1-v0).toString()<<"   "<<(v1-v0).normalized().toString()<<"   "<<(v1-v0).length());
+    cdebug(f);*/
+    return true;
+  }
+  return false;
+}
+
+AGRect2 AGLine2::getBBox() const
+{
+  return AGRect2(std::min(v0.getX(),v1.getX()),std::min(v0.getY(),v1.getY()),fabs(v0.getX()-v1.getX()),fabs(v1.getY()-v0.getY()));
+}
+
+bool AGLine2::collide(const AGLine2 &l) const
+{
+  AGVector2 d0,d1;
+  AGVector2 n0,n1;
+
+  d0=direction();
+  d1=l.direction();
+  n0=normal();
+  n1=l.normal();
+  
+  bool t0=collide1d(v0*d0,v1*d0,l.v0*d0,l.v1*d0,false);
+  bool t1=collide1d(v0*d1,v1*d1,l.v0*d1,l.v1*d1,false);
+
+  bool t2=collide1d(v0*n0,v1*n0,l.v0*n0,l.v1*n0,false);
+  bool t3=collide1d(v0*n1,v1*n1,l.v0*n1,l.v1*n1,false);
+
+  return t0 && t1 && t2 && t3;
+}
+
+AGVector2 AGLine2::normal() const
+{
+  return (v1-v0).normalized().normal();
+}
+
+AGVector2 AGLine2::direction() const
+{
+  return v1-v0;
+}
+
+
+
+AGString AGLine2::toString() const
+{
+  std::ostringstream os;
+  os<<"("<<v0.toString()<<"-"<<v1.toString()<<")";
+  return AGString(os.str());
+}
+
+float AGLine2::distance(const AGVector2 &v) const
+{
+  return fabs(normal()*(v-v0));
+}
+
+
+/////////////////////////////////////////////////////////////////////////////
+// AGLine3
+/////////////////////////////////////////////////////////////////////////////
+
+AGLine3::AGLine3()
+{
+}
+
+AGLine3::AGLine3(const AGVector3 &pv0,const AGVector3 &pv1):
+  v0(pv0),v1(pv1)
+{
+}
+
+float AGLine3::distance(const AGVector3 &p) const
+{
+  AGVector3 dir=direction();
+  AGVector3 diff=p-v0;
+  AGVector3 normal1=dir%diff;
+  AGVector3 plane_normal=dir%normal1;
+  plane_normal.normalize();
+  return fabs(diff*plane_normal);
+}
+
+  
+AGVector3 AGLine3::getV0() const
+{
+  return v0;
+}
+AGVector3 AGLine3::getV1() const
+{
+  return v1;
+}
+
+bool AGLine3::has(const AGVector3 &v) const
+{
+  return v0==v || v1==v;
+}
+
+AGVector3 AGLine3::direction() const
+{
+  return v1-v0;
+}
+
+
+AGString AGLine3::toString() const
+{
+  AGStringStream os;
+  os<<"("<<v0.toString()<<"-"<<v1.toString()<<")";
+  return os.str();
+}
+/*
+float AGLine3::distance(const AGVector3 &v) const
+{
+  return fabs(normal()*(v-v0));
+  }*/
+
+
+
+///////////////////////////////////////////////////////////////
+// AGVector4
+///////////////////////////////////////////////////////////////
+
+
+AGVector4::AGVector4(float pX,float pY,float pZ,float pW)
+{
+  v[0]=pX;
+  v[1]=pY;
+  v[2]=pZ;
+  v[3]=pW;
+}
+AGVector4::AGVector4(const AGVector4 &a)
+{
+  v[0]=a.v[0];
+  v[1]=a.v[1];
+  v[2]=a.v[2];
+  v[3]=a.v[3];
+}
+AGVector4::AGVector4(const AGVector3 &a,float h)
+{
+  v[0]=a.v[0];
+  v[1]=a.v[1];
+  v[2]=a.v[2];
+  v[3]=h;
+}
+
+AGVector3 AGVector4::dim3() const
+{
+  return AGVector3(v[0],v[1],v[2]);
+}
+AGVector2 AGVector4::dim2() const
+{
+  return AGVector2(v[0],v[1]);
+}
+
+
+AGVector4::AGVector4()
+{
+  v[0]=v[1]=v[2]=0.0f;
+  v[3]=1.0f;
+}
+
+AGVector4 AGVector4::operator-() const
+{
+  return AGVector4(-v[0],-v[1],-v[2],-v[3]);
+}
+
+
+void AGVector4::setX(float pX)
+{
+  v[0]=pX;
+}
+void AGVector4::setY(float pY)
+{
+  v[1]=pY;
+}
+void AGVector4::setZ(float pZ)
+{
+  v[2]=pZ;
+}
+void AGVector4::setW(float pW)
+{
+  v[3]=pW;
+}
+
+float AGVector4::getX() const
+{
+  return v[0];
+}
+float AGVector4::getY() const
+{
+  return v[1];
+}
+float AGVector4::getZ() const
+{
+  return v[2];
+}
+float AGVector4::getW() const
+{
+  return v[3];
+}
+
+AGVector4 AGVector4::operator-(const AGVector4 &p) const
+{
+  return AGVector4(v[0]-p.v[0],
+		   v[1]-p.v[1],
+		   v[2]-p.v[2],
+		   v[3]-p.v[3]);
+}
+AGVector4 AGVector4::operator+(const AGVector4 &p) const
+{
+  return AGVector4(v[0]+p.v[0],
+		   v[1]+p.v[1],
+		   v[2]+p.v[2],
+		   v[3]+p.v[3]);
+}
+AGVector4 &AGVector4::operator+=(const AGVector4 &p)
+{
+  v[0]+=p.v[0];
+  v[1]+=p.v[1];
+  v[2]+=p.v[2];
+  v[3]+=p.v[3];
+  return *this;
+}
+AGVector4 &AGVector4::operator-=(const AGVector4 &p)
+{
+  v[0]-=p.v[0];
+  v[1]-=p.v[1];
+  v[2]-=p.v[2];
+  v[3]-=p.v[3];
+  return *this;
+}
+
+float AGVector4::operator*(const AGVector4 &p) const
+{
+  return v[0]*p.v[0]+
+    v[1]*p.v[1]+
+    v[2]*p.v[2]+
+    v[3]*p.v[3];
+}
+AGVector4 &AGVector4::operator*=(float f)
+{
+  v[0]*=f;
+  v[1]*=f;
+  v[2]*=f;
+  v[3]*=f;
+  return *this;
+}
+AGVector4 &AGVector4::operator/=(float f)
+{
+  v[0]/=f;
+  v[1]/=f;
+  v[2]/=f;
+  v[3]/=f;
+  return *this;
+}
+AGVector4 AGVector4::operator*(float f) const
+{
+  return AGVector4(v[0]*f,v[1]*f,v[2]*f,v[3]*f);
+}
+AGVector4 AGVector4::operator/(float f) const
+{
+  return AGVector4(v[0]/f,v[1]/f,v[2]/f,v[3]/f);
+}
+
+bool AGVector4::operator==(const AGVector4 &a) const
+{
+  return v[0]==a.v[0] &&
+    v[1]==a.v[1] &&
+    v[2]==a.v[2] &&
+    v[3]==a.v[3];
+}
+bool AGVector4::operator!=(const AGVector4 &a) const
+{
+  return !operator==(a);
+}
+
+float AGVector4::length() const
+{
+  return sqrt(length2());
+}
+float AGVector4::length2() const
+{
+  return v[0]*v[0]+
+    v[1]*v[1]+
+    v[2]*v[2]+
+    v[3]*v[3];
+}
+
+float AGVector4::length3() const
+{
+  return sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);
+}
+
+AGVector4 AGVector4::normalized() const
+{
+  return *this*(1.0f/length());
+}
+void AGVector4::normalize()
+{
+  operator*=(1.0f/length());
+}
+
+AGVector4 AGVector4::normalized3() const
+{
+  return *this*(1.0f/length3());
+}
+void AGVector4::normalize3()
+{
+  operator*=(1.0f/length3());
+}
+
+float &AGVector4::operator[](int index)
+{
+  assert(index>=0 && index<4);
+  return v[index];
+}
+
+float AGVector4::operator[](int index) const
+{
+  assert(index>=0 && index<4);
+  return v[index];
+}
+
+bool AGVector4::nonZero() const
+{
+  return v[0]!=0 ||
+    v[1]!=0 ||
+    v[2]!=0 ||
+    v[3]!=0;
+}
+
+AGString AGVector4::toString() const
+{
+  AGStringStream os;
+  os<<"("<<v[0]<<","<<v[1]<<","<<v[2]<<","<<v[3]<<")";
+  return os.str();
+}
+
+(AGVector4::operator float*)()
+{
+  return v;
+}
+
+(AGVector4::operator const float*)() const
+{
+  return v;
+}
+
+AGVector4 AGVector4::operator%(const AGVector4 &a) const
+{
+  return AGVector4(v[1] * a.v[2] - v[2] * a.v[1],
+		   v[2] * a.v[0] - v[0] * a.v[2],
+		   v[0] * a.v[1] - v[1] * a.v[0]);
+}
+
+///////////////////////////////////////////////////////////////
+// AGMatrix4
+///////////////////////////////////////////////////////////////
+
+AGMatrix4::AGMatrix4(float v[16])
+{
+  for(size_t i=0;i<16;i++)
+    a[i]=v[i];
+}
+AGMatrix4::AGMatrix4(float angle,const AGVector3&d)
+{
+  float co=cos(angle);
+  float si=sin(angle);
+  /*
+  set(0,0,co + d[0]*d[0]*(1-co));
+  set(0,1,d[0]*d[1]*(1-co)-d[2]*si);
+  set(0,2,d[0]*d[2]*(1-co)+d[1]*si);
+
+  set(1,0,d[1]*d[0]*(1-co)+d[2]*si);
+  set(1,1,co+d[1]*d[1]*(1-co));
+  set(1,2,d[1]*d[2]*(1-co)-d[0]*si);
+
+  set(2,0,d[2]*d[0]*(1-co)-d[1]*si);
+  set(2,1,d[2]*d[1]*(1-co)+d[0]*si);
+  set(2,2,co + d[2]*d[2]*(1-co));
+  */
+    set(0,0,co + d[0]*d[0]*(1-co));
+  set(1,0,d[0]*d[1]*(1-co)-d[2]*si);
+  set(2,0,d[0]*d[2]*(1-co)+d[1]*si);
+
+  set(0,1,d[1]*d[0]*(1-co)+d[2]*si);
+  set(1,1,co+d[1]*d[1]*(1-co));
+  set(2,1,d[1]*d[2]*(1-co)-d[0]*si);
+
+  set(0,2,d[2]*d[0]*(1-co)-d[1]*si);
+  set(1,2,d[2]*d[1]*(1-co)+d[0]*si);
+  set(2,2,co + d[2]*d[2]*(1-co));
+  
+  set(3,0,0);
+  set(3,1,0);
+  set(3,2,0);
+
+  set(0,3,0);
+  set(1,3,0);
+  set(2,3,0);
+
+  set(3,3,1);
+}
+
+
+AGMatrix4::AGMatrix4()
+{
+  get(0,1)=get(0,2)=get(0,3)=
+    get(1,0)=get(1,2)=get(1,3)=
+    get(2,0)=get(2,1)=get(2,3)=
+    get(3,0)=get(3,1)=get(3,2)=0.0f;
+
+  get(0,0)=get(1,1)=get(2,2)=get(3,3)=1.0f;
+}
+
+/*AGMatrix3::AGMatrix4(const AGAngle &n)
+{
+  a[0][0]=cos(n.angle);
+  a[1][0]=sin(n.angle);
+  a[0][1]=-sin(n.angle);
+  a[1][1]=cos(n.angle);
+  a[2][0]=a[2][1]=a[0][2]=a[1][2]=0.0f;
+  a[2][2]=1.0f;
+  }*/
+
+AGMatrix4::AGMatrix4(const AGVector4 &n)
+{
+  get(0,0)=get(1,1)=get(2,2)=get(3,3)=1.0f;
+  get(0,1)=get(0,2)=get(0,3)=
+    get(1,0)=get(1,2)=get(1,3)=
+    get(2,0)=get(2,1)=get(2,3)=0.0f;
+  get(3,0)=n[0];
+  get(3,1)=n[1];
+  get(3,2)=n[2];
+}
+
+AGMatrix4 &AGMatrix4::operator+=(const AGMatrix4 &m)
+{
+  for(size_t x=0;x<4;x++)
+    for(size_t y=0;y<4;y++)
+      get(x,y)+=m.get(x,y);
+  return *this;
+}
+
+AGMatrix4 AGMatrix4::transposed() const
+{
+  AGMatrix4 a;
+  for(size_t x=0;x<4;x++)
+    for(size_t y=0;y<4;y++)
+      a.get(x,y)=get(y,x);
+  return a;
+}
+
+
+
+AGMatrix4 AGMatrix4::inverted() const
+{
+  // gauss-alg.
+  AGMatrix4 a;
+  AGMatrix4 b(*this);
+
+  gauss(a,b,4);
+  return a;
+}
+
+void AGMatrix4::swapRows(size_t a,size_t b)
+{
+  if(a==b)
+    return;
+  assert(a<4);
+  assert(b<4);
+  for(size_t x=0;x<4;x++)
+    {
+      float t=get(x,a);
+      set(x,a,get(x,b));
+      set(x,b,t);
+    }
+}
+
+void AGMatrix4::swapCols(size_t a,size_t b)
+{
+  if(a==b)
+    return;
+  assert(a<4);
+  assert(b<4);
+  for(size_t y=0;y<4;y++)
+    {
+      float t=get(a,y);
+      set(a,y,get(b,y));
+      set(b,y,t);
+    }
+}
+
+
+AGMatrix3 AGMatrix4::get3x3(size_t x,size_t y) const
+{
+  AGMatrix3 m;
+  assert(x<2);
+  assert(y<2);
+  for(size_t i=0;i<3;i++)
+    for(size_t j=0;j<3;j++)
+      m.set(i,j,get(i+x,j+y));
+  return m;
+}
+
+
+void AGMatrix4::set(size_t x,size_t y,float f)
+{
+  assert(x>=0 && x<4);
+  assert(y>=0 && y<4);
+  a[x*4+y]=f;
+}
+float AGMatrix4::get(size_t x,size_t y) const
+{
+  assert(x>=0 && x<4);
+  assert(y>=0 && y<4);
+  return a[4*x+y];
+}
+
+float &AGMatrix4::get(size_t x,size_t y)
+{
+  assert(x>=0 && x<4);
+  assert(y>=0 && y<4);
+  return a[4*x+y];
+}
+
+AGMatrix4 AGMatrix4::operator*(const AGMatrix4 &m) const
+{
+  AGMatrix4 n;
+  size_t x,y;
+  for(x=0;x<4;x++)
+    for(y=0;y<4;y++)
+      n(x,y)=get(0,y)*m(x,0)+
+	get(1,y)*m(x,1)+
+	get(2,y)*m(x,2)+
+	get(3,y)*m(x,3);
+  return n;
+}
+AGMatrix4 &AGMatrix4::operator*=(const AGMatrix4 &m)
+{
+  *this=(*this)*m;
+  return *this;
+}
+
+AGVector4 AGMatrix4::operator*(const AGVector4 &v) const
+{
+  return AGVector4(get(0,0)*v[0]+get(1,0)*v[1]+get(2,0)*v[2]+get(3,0)*v[3],
+		   get(0,1)*v[0]+get(1,1)*v[1]+get(2,1)*v[2]+get(3,1)*v[3],
+		   get(0,2)*v[0]+get(1,2)*v[1]+get(2,2)*v[2]+get(3,2)*v[3],
+		   get(0,3)*v[0]+get(1,3)*v[1]+get(2,3)*v[2]+get(3,3)*v[3]);
+}
+
+AGString AGMatrix4::toString() const
+{
+  std::ostringstream os;
+  os<<"("<<get(0,0)<<","<<get(1,0)<<","<<get(2,0)<<","<<get(3,0)<<")"<<std::endl;
+  os<<"("<<get(0,1)<<","<<get(1,1)<<","<<get(2,1)<<","<<get(3,1)<<")"<<std::endl;
+  os<<"("<<get(0,2)<<","<<get(1,2)<<","<<get(2,2)<<","<<get(3,2)<<")"<<std::endl;
+  os<<"("<<get(0,3)<<","<<get(1,3)<<","<<get(2,3)<<","<<get(3,3)<<")"<<std::endl;
+  return AGString(os.str());
+}
+
+(AGMatrix4::operator float*)()
+{
+  return a;
+}
+
+(AGMatrix4::operator const float*)() const
+{
+  return a;
+}
+
+/*
+double gMatrixDoubleBuf[16];
+(AGMatrix4::operator const double*)() const
+{
+  for(int i=0;i<16;i++)
+    gMatrixDoubleBuf[i]=a[i];
+  return gMatrixDoubleBuf;
+  }*/
+
+float AGMatrix4::operator()(size_t x,size_t y) const
+{
+  return get(x,y);
+}
+float &AGMatrix4::operator()(size_t x,size_t y)
+{
+  return get(x,y);
+}
+
+AGVector4 AGMatrix4::getRow(size_t i) const
+{
+  //  return AGVector4(get(i,0),get(i,1),get(i,2),get(i,3));
+  return AGVector4(get(0,i),get(1,i),get(2,i),get(3,i));
+}
+
+
+AGMatrix4::MRow AGMatrix4::operator[](size_t y)
+{
+  MRow r;
+  r.matrix=this;
+  r.y=y;
+  return r;
+}
+/*
+const AGMatrix4::Row AGMatrix4::operator[](size_t y) const
+{
+  Row r;
+  r.matrix=const_cast<AGMatrix4*>(this);
+  r.y=y;
+  return r;
+  }*/
+
+
+///////////////////////////////////////////////////////////////
+// AGBox3
+///////////////////////////////////////////////////////////////
+
+AGBox3::AGBox3(const AGVector3 &pBase,const AGVector3 &pDir):
+  base(pBase),dir(pDir)
+{
+  // assert that pDir[i]>0
+  for(size_t i=0;i<3;i++)
+    if(dir[i]<0)
+      {
+	base[i]+=dir[i];
+	dir[i]=-dir[i];
+      }
+  mValid=true;
+}
+
+
+
+AGBox3::AGBox3():base(AGVector3(0,0,0)),dir(AGVector3(0,0,0))
+{
+  mValid=false;
+}
+
+bool AGBox3::valid() const
+{
+  return mValid;
+}
+
+
+bool AGBox3::collides(const AGMatrix4 &frustum) const
+{
+  std::vector<AGVector3> a=getVertices();
+  float minx,miny,minz;
+  float maxx,maxy,maxz;
+
+  minx=miny=minz=10000;
+  maxx=maxy=maxz=-10000;
+  // simply check, if any of the box's vertices lie inside the frustum
+  for(std::vector<AGVector3>::iterator i=a.begin();i!=a.end();i++)
+    {
+      AGVector4 p(frustum*AGVector4(*i,1));
+      p/=p[3];
+      if(p[0]>=-1 && p[0]<=1 &&
+	 p[1]>=-1 && p[1]<=1 &&
+	 p[2]>=-1 && p[2]<=1)
+	return true;
+
+      minx=std::min(minx,p[0]);
+      miny=std::min(miny,p[1]);
+      minz=std::min(minz,p[2]);
+
+      maxx=std::max(maxx,p[0]);
+      maxy=std::max(maxy,p[1]);
+      maxz=std::max(maxz,p[2]);
+	
+    }
+
+  return AGBox3(AGVector3(-1,-1,-1),AGVector3(2,2,2)).collides(AGBox3(AGVector3(minx,miny,minz),AGVector3(maxx-minx,maxy-miny,maxz-minz)));
+}
+
+bool AGBox3::collides(const AGBox3 &box) const
+{
+  AGVector3 a=base+dir;
+  AGVector3 b=box.base+box.dir;
+
+  /*  cdebug(base.toString()<<"   "<<a.toString());
+  cdebug(box.base.toString()<<"   "<<b.toString());
+
+  cdebug(collide1d(base[0],a[0],box.base[0],b[0]));
+  cdebug(collide1d(base[1],a[1],box.base[1],b[1]));
+  cdebug(collide1d(base[2],a[2],box.base[2],b[2]));
+  */
+
+  return collide1d(base[0],a[0],box.base[0],b[0]) &&
+    collide1d(base[1],a[1],box.base[1],b[1]) &&
+    collide1d(base[2],a[2],box.base[2],b[2]);
+}
+
+
+
+std::vector<AGVector3> AGBox3::getVertices() const
+{
+  std::vector<AGVector3> a;
+  a.push_back(base+AGVector3(0,0,0));
+  a.push_back(base+AGVector3(dir[0],0,0));
+  a.push_back(base+AGVector3(0,dir[1],0));
+  a.push_back(base+AGVector3(0,0,dir[2]));
+
+  a.push_back(base+AGVector3(dir[0],dir[1],0));
+  a.push_back(base+AGVector3(dir[0],0,dir[2]));
+  a.push_back(base+AGVector3(0,dir[1],dir[2]));
+  a.push_back(base+AGVector3(dir[0],dir[1],dir[2]));
+  return a;
+}
+
+AGBox3 AGBox3::operator-(const AGVector3 &v) const
+{
+  if(valid())
+    return AGBox3(base-v,dir);
+  else
+    return AGBox3();
+}
+AGBox3 AGBox3::operator+(const AGVector3 &v) const
+{
+  if(valid())
+    return AGBox3(base+v,dir);
+  else
+    return AGBox3();
+}
+
+
+
+void AGBox3::include(const AGVector3&p)
+{
+  if(!mValid)
+    {
+      base=p;
+      dir=AGVector3(0,0,0);
+      mValid=true;
+      return;
+    }
+  AGVector3 b=base,b2=base+dir;
+
+  base[0]=std::min(b[0],p[0]);
+  base[1]=std::min(b[1],p[1]);
+  base[2]=std::min(b[2],p[2]);
+  AGVector3 n;
+  n[0]=std::max(b2[0],p[0]);
+  n[1]=std::max(b2[1],p[1]);
+  n[2]=std::max(b2[2],p[2]);
+  dir[0]=n[0]-base[0];
+  dir[1]=n[1]-base[1];
+  dir[2]=n[2]-base[2];
+}
+
+bool AGBox3::collides(const AGVector3&p) const
+{
+  return p[0]>=base[0] && p[1]>=base[1] && p[2]>=base[2] &&
+    p[0]<base[0]+dir[0] && p[1]<base[1]+dir[1] && p[2]<base[2]+dir[2];
+}
+bool AGBox3::collides(const AGLine3&p) const
+{
+  // FIXME: implement like this:http://www.garagegames.com/index.php?sec=mg&mod=resource&page=view&qid=309
+
+  std::vector<AGRect3> sides=getSides();
+  for(std::vector<AGRect3>::iterator i=sides.begin();i!=sides.end();++i)
+    {
+      if((*i).collides(p))
+	return true;
+    }
+  return false;
+}
+
+bool AGBox3::contains(const AGTriangle3 &t) const
+{
+  for(size_t i=0;i<3;i++)
+    if(!collides(t[i]))
+      return false;
+  return true;
+}
+
+
+std::vector<AGRect3> AGBox3::getSides() const
+{
+  AGVector3 b2=base+dir;
+  std::vector<AGRect3> s;
+  s.push_back(AGRect3(base,AGVector3(dir[0],dir[1],0)));
+  s.push_back(AGRect3(base,AGVector3(dir[0],0,dir[2])));
+  s.push_back(AGRect3(base,AGVector3(0,dir[1],dir[2])));
+  s.push_back(AGRect3(b2,AGVector3(-dir[0],-dir[1],0)));
+  s.push_back(AGRect3(b2,AGVector3(-dir[0],0,-dir[2])));
+  s.push_back(AGRect3(b2,AGVector3(0,-dir[1],-dir[2])));
+  return s;
+}
+
+bool AGBox3::includes(const AGBox3 &b)
+{
+  AGVector3 u0=base+dir;
+  AGVector3 u1=b.base+b.dir;
+  return (b.base[0]>=base[0] && b.base[1]>=base[1] && b.base[2]>=base[2] &&
+	  u1[0]<=u0[0] && u1[1]<=u0[1] && u1[2]<=u0[2]);
+}
+
+AGString AGBox3::toString() const
+{
+  std::ostringstream os;
+  os<<"["<<base.toString()<<";"<<dir.toString()<<"]";
+  return AGString(os.str());
+}
+
+std::vector<AGBox3> AGBox3::split() const
+{
+  std::vector<AGBox3> r;
+  AGVector3 d=dir*0.5;
+  AGVector3 x(dir[0],0,0);
+  AGVector3 y(0,dir[1],0);
+  AGVector3 z(0,0,dir[2]);
+  r.push_back(AGBox3(base      ,d));
+  r.push_back(AGBox3(base+x    ,d));
+  r.push_back(AGBox3(base  +y  ,d));
+  r.push_back(AGBox3(base+x+y  ,d));
+  r.push_back(AGBox3(base    +z,d));
+  r.push_back(AGBox3(base+x  +z,d));
+  r.push_back(AGBox3(base  +y+z,d));
+  r.push_back(AGBox3(base+x+y+z,d));
+  return r;
+}
+
+///////////////////////////////////////////////////////////////
+// AGRect3
+///////////////////////////////////////////////////////////////
+
+AGRect3::AGRect3(const AGVector3 &pBase,const AGVector3 &pDir):
+  base(pBase),dir(pDir)
+{
+  // assert that dir[i]>=0
+  for(size_t i=0;i<3;i++)
+    if(dir[i]<0)
+      {
+	base[i]+=dir[i];
+	dir[i]=-dir[i];
+      }
+}
+
+bool AGRect3::collides(const AGLine3&pLine) const
+{
+  AGVector3 d0,d1; // directions of rect's sides
+  if(dir[0]==0)
+    {
+      d0=AGVector3(0,dir[1],0);
+      d1=AGVector3(0,0,dir[2]);
+    }
+  else if(dir[1]==0)
+    {
+      d0=AGVector3(dir[0],0,0);
+      d1=AGVector3(0,0,dir[2]);
+    }
+  else
+    {
+      d0=AGVector3(dir[0],0,0);
+      d1=AGVector3(0,dir[1],0);
+    }
+
+  AGVector3 normal=d0%d1;
+
+  float v0=(pLine.getV0()-base)*normal;
+  float v1=(pLine.getV1()-base)*normal;
+  if(AGsign(v0)==AGsign(v1))
+    return false;
+
+  float vall=v1-v0;
+  float v=-v0/vall;
+  AGVector3 ip=pLine.getV1()*v+pLine.getV0()*(1-v);
+
+  //  cdebug("ip:"<<ip.toString());
+  //  cdebug("dist:"<<(ip-base)*normal);
+  
+  for(size_t i=0;i<3;i++)
+    {
+      if(fabs(dir[i])<0.0001)
+	continue;
+      if(ip[i]<base[i] || ip[i]>base[i]+dir[i])
+	{
+	  //	  cdebug("fail:"<<i);
+	  return false;
+	}
+    }
+  return true;
+}
+
+AGString AGRect3::toString() const
+{
+  std::ostringstream os;
+  os<<"["<<base.toString()<<";"<<dir.toString()<<"]";
+  return AGString(os.str());
+}
+
+
+
+
+std::ostream &operator<<(std::ostream &o,const AGVector2&v)
+{
+  o<<v.toString();
+  return o;
+}
+
+std::ostream &operator<<(std::ostream &o,const AGVector3&v)
+{
+  o<<v.toString();
+  return o;
+}
+
+std::ostream &operator<<(std::ostream &o,const AGVector4&v)
+{
+  o<<v.toString();
+  return o;
+}
+
+std::ostream &operator<<(std::ostream &o,const AGRect2&v)
+{
+  o<<v.toString();
+  return o;
+}
+
+std::ostream &operator<<(std::ostream &o,const AGBox3&v)
+{
+  o<<"("<<v.base<<" "<<v.dir<<"/"<<v.valid()<<")";
+  return o;
+}

Added: antargis/branches/rant/ext/basic/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-16 18:48:58 UTC (rev 1145)
+++ antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-21 07:44:39 UTC (rev 1146)
@@ -0,0 +1,706 @@
+/*
+ * Copyright (c) 2005 by David Kamphausen. All rights reserved.
+ *
+ * ag_geometry.h
+ * by David Kamphausen (david.kamphausen at web.de)
+ *
+ * The "Antargis" project, including all files needed to compile it,
+ * is free software; you can redistribute it and/or use it and/or modify it
+ * under the terms of the GNU General Public License as published
+ * by the Free Software Foundation; either version 2 of the License,
+ * or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ * You should have received a copy of the GNU General Public
+ * License along with this program.
+ */
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#ifndef AG_TRIANGLE_H
+#define AG_TRIANGLE_H
+
+#include <SDL.h>
+#include <iostream>
+#include <list>
+#include <vector>
+#include <ag_base.h>
+#include <ag_string.h>
+
+/* There are following classes:
+
+   We do NOT use templates here, because of SWIG-problems.
+
+   - AGVector2 - 2d vector
+   - AGVector3 - is homogenous 2d and inhom 3d
+   - AGVector4 - hom. 3d
+   - AGMatrix3 - 3x3 Matrix
+   - AGMatrix4 - 4x4 Matrix
+
+   - AGLine2     - 2d Line (eats AGVector3)
+   - AGTriangle2 - 2d triangle (eats AGVector3)
+
+   ATTENTION: the classes may NOT be virtual, as they're possibly used in an array, where then the size is NOT sizeof(v[x]) !!!
+*/
+
+
+class AGRect2;
+class AGBox3;
+class Node;
+
+/** \brief Simple structure holding an angle in degrees
+ */
+struct AGEXPORT AGAngle
+{
+  float angle;
+  
+  /// @param an angle in degrees
+  explicit AGAngle(float a);
+};
+
+class AGEXPORT AGVector2
+{
+ public:
+  float v[2];
+
+  AGVector2(const AGString &s);
+  AGVector2(float pX,float pY);
+  AGVector2(const AGAngle &a);
+  AGVector2(const AGVector2 &a);
+  AGVector2();
+
+  void setX(float pX);
+  void setY(float pY);
+
+  AGVector2 dim2() const;
+
+  
+#ifdef SWIG
+  %rename(x) getX() const;
+  %rename(y) getY() const;
+#endif
+  float getX() const;
+  float getY() const;
+
+  AGAngle getAngle() const;
+
+  AGVector2 operator-() const;
+  AGVector2 operator-(const AGVector2 &p) const;
+  AGVector2 operator+(const AGVector2 &p) const;
+  AGVector2 &operator+=(const AGVector2 &p);
+  AGVector2 &operator-=(const AGVector2 &p);
+
+  float operator*(const AGVector2 &p) const;
+  AGVector2 &operator*=(float f);
+  AGVector2 &operator/=(float f);
+  AGVector2 operator*(float f) const;
+  AGVector2 operator/(float f) const;
+
+  bool operator==(const AGVector2 &a) const;
+  bool operator!=(const AGVector2 &a) const;
+
+  float length() const;
+  float length2() const;
+
+  AGVector2 normalized() const;
+  void normalize();
+
+  AGVector2 normal() const;
+
+#ifdef SWIG
+  %rename(__getitem__) operator[](int index) const;
+#endif
+  float operator[](int index) const;
+  float &operator[](int index);
+
+  bool nonZero() const;
+
+  void saveXML(Node &node) const;
+  void loadXML(const Node &node);
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+
+#ifndef SWIG
+  (operator float*)();
+  (operator const float*)() const;
+#endif
+};
+
+// 2-dim homogenous vector
+class AGEXPORT AGVector3
+{
+ public:
+  float v[3];
+
+  AGVector3(const AGVector2 &p,float h=1.0f);
+  AGVector3(float pX,float pY,float pZ=0.0f);
+  AGVector3(const AGAngle &a);
+  AGVector3(const AGVector3 &a);
+  AGVector3();
+
+  void setX(float pX);
+  void setY(float pY);
+  void setZ(float pZ);
+
+  
+#ifdef SWIG
+  %rename(x) getX() const;
+  %rename(y) getY() const;
+  %rename(z) getZ() const;
+#endif
+  float getX() const;
+  float getY() const;
+  float getZ() const;
+
+  AGAngle getAngle() const;
+
+  AGVector3 operator-() const;
+
+  AGVector3 operator-(const AGVector3 &p) const;
+  AGVector3 operator+(const AGVector3 &p) const;
+#ifdef SWIG
+%rename(add) operator+=(const AGVector3 &p);
+%rename(sub) operator-=(const AGVector3 &p);
+#endif
+  AGVector3 &operator+=(const AGVector3 &p);
+  AGVector3 &operator-=(const AGVector3 &p);
+
+  float operator*(const AGVector3 &p) const;
+  AGVector3 &operator*=(float f);
+  AGVector3 &operator/=(float f);
+  AGVector3 operator*(float f) const;
+  AGVector3 operator/(float f) const;
+  AGVector3 operator%(const AGVector3 &a) const;
+
+  bool operator==(const AGVector3 &a) const;
+  bool operator!=(const AGVector3 &a) const;
+
+  float length() const;
+  float length2() const;
+
+  AGVector3 normalized() const;
+  void normalize();
+
+  AGVector3 normal() const;
+
+  float operator[](int index) const;
+  float &operator[](int index);
+
+  bool nonZero() const;
+
+  void saveXML(Node &node) const;
+  void loadXML(const Node &node);
+
+  AGVector2 dim2() const;
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+
+#ifndef SWIG
+  (operator float*)();
+#endif
+};
+
+
+class AGEXPORT AGMatrix3
+{
+  float a[3][3];
+ public:
+  struct Row
+  {
+    AGMatrix3 *matrix;
+    int y;
+
+    float &operator[](size_t x)
+    {
+      return matrix->get(x,y);
+    }
+    float operator[](size_t x) const
+    {
+      return matrix->get(x,y);
+    }
+  };
+
+  AGMatrix3();
+  AGMatrix3(const AGAngle &a); // rotate
+  AGMatrix3(const AGVector3 &a); // transpose
+  AGMatrix3(float x,float y); // scale
+  void set(size_t x,size_t y,float f);
+  float get(size_t x,size_t y) const;
+  float &get(size_t x,size_t y);
+
+  AGMatrix3 operator*(const AGMatrix3 &m) const;
+  AGMatrix3 &operator*=(const AGMatrix3 &m);
+
+  AGVector3 operator*(const AGVector3 &v) const;
+  //  AGVector2 operator*(const AGVector2 &v) const;
+
+  AGMatrix3 operator-() const;
+
+  AGMatrix3 inverted() const;
+  AGMatrix3 transposed() const;
+
+  Row operator[](size_t y);
+  const Row operator[](size_t y) const;
+
+  void swapRows(size_t a,size_t b);
+  void swapCols(size_t a,size_t b);
+  
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+};
+
+class AGEXPORT AGLine2
+{
+  AGVector2 v0,v1;
+ public:
+  AGLine2();
+  AGLine2(const AGVector2 &pv0,const AGVector2 &pv1);
+  
+  AGVector2 getV0() const;
+  AGVector2 getV1() const;
+
+  bool has(const AGVector2 &v) const;
+
+  bool collide(const AGLine2 &l) const;
+  AGVector2 collisionPoint(const AGLine2 &l) const;
+  AGVector2 collisionPointNI(const AGLine2 &l) const; // no inclusion test
+  bool includes(const AGVector2 &v) const;
+
+  AGRect2 getBBox() const;
+
+  AGVector2 normal() const;
+  AGVector2 direction() const;
+
+  float distance(const AGVector2 &v) const;
+
+  AGVector2 &operator[](size_t i);
+  AGVector2 operator[](size_t i) const;
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+};
+
+class AGEXPORT AGLine3
+{
+  AGVector3 v0,v1;
+ public:
+  AGLine3();
+  AGLine3(const AGVector3 &pv0,const AGVector3 &pv1);
+  
+  AGVector3 getV0() const;
+  AGVector3 getV1() const;
+
+  bool has(const AGVector3 &v) const;
+  /*
+  bool collide(const AGLine3 &l) const;
+  AGVector3 collisionPoint(const AGLine3 &l) const;
+  AGVector3 collisionPointNI(const AGLine3 &l) const; // no inclusion test
+  bool includes(const AGVector3 &v) const;
+  */
+  //  AGBox3 getBBox() const;
+
+  //  AGVector3 normal() const;
+  AGVector3 direction() const;
+
+  float distance(const AGVector3 &p) const;
+
+  //  float distance(const AGVector3 &v) const;
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+};
+
+class AGEXPORT AGCollisionData
+{
+};
+
+class AGRect2;
+
+class AGEXPORT AGTriangle2
+{
+  AGVector2 p[3];
+ public:
+  AGTriangle2(const AGVector2 &v0,const AGVector2 &v1,const AGVector2 &v2);
+
+  AGVector2 operator[](int index) const;
+
+  AGVector2 get(int index) const;
+
+  bool collide(const AGTriangle2 &t) const;
+
+  // FIXME: sweep-based test
+  //  AGCollisionData collide(const AGTriangle &t,const AGVector &v0,const AGVector &v1) const;
+
+  std::vector<AGVector2> getNormals() const;
+
+  void apply(const AGMatrix3 &m);
+  AGTriangle2 applied(const AGMatrix3 &m) const;
+
+  // estimate touching point (or middle of touching area)
+  AGVector2 touchPoint(const AGTriangle2 &t) const;
+  AGVector2 touchVector(const AGTriangle2 &t) const;
+
+  std::vector<AGVector2> collisionPoints(const AGLine2 &l) const;
+
+  bool contains(const AGVector2 &p) const;
+
+  AGRect2 getBBox() const;
+
+  AGLine2 nearestLine(const AGVector2 &v) const;
+
+  std::vector<AGLine2> getLines() const;
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+};
+
+class AGEXPORT AGCircle2
+{
+  AGVector3 p;
+  float radius;
+ public:
+  AGCircle2(const AGVector3 &v,float rad);
+
+  bool inCircle(const AGTriangle2 &t) const;
+  bool outCircle(const AGTriangle2 &t) const;
+  bool inCircle(const AGVector3 &v) const;
+  bool outCircle(const AGVector3 &v) const;
+
+  AGVector3 getPos() const;
+  float getRadius() const;
+
+};
+
+class AGVector4;
+class AGEXPORT AGTriangle3
+{
+  AGVector3 p[3];
+ public:
+  AGTriangle3(const AGVector3 &v0,const AGVector3 &v1,const AGVector3 &v2);
+  
+  // (x,y,z,0) for no collision 
+  // (x,y,z,1) for collision in point (x,y,z)
+  AGVector4 collide(const AGLine3 &pLine) const;
+
+  AGString toString() const;
+
+  AGVector3 operator[](int index) const;
+};
+
+class AGEXPORT AGRect2
+{
+  AGVector2 v0,v1;
+ public:
+  AGRect2();
+  AGRect2(const AGVector2 &pv0,const AGVector2 &pv1);
+  AGRect2(float x,float y,float w,float h);
+  AGRect2(const AGString &ps);
+  AGRect2(const SDL_Rect &r);
+
+  bool collide(const AGRect2 &r) const;
+
+  void include(const AGVector2 &v);
+
+  AGRect2 operator+(const AGVector2 &v) const;
+  AGRect2 &operator+=(const AGVector2 &v);
+  AGRect2 &operator-=(const AGVector2 &v);
+
+  AGRect2& operator+=(const AGRect2 &r);
+
+  bool contains(const AGVector2 &v) const;
+  bool contains(const AGRect2 &v) const;
+
+  std::list<AGRect2> split() const;
+
+  AGVector2 operator[](size_t i) const;
+  AGVector2 &operator[](size_t i);
+
+  AGVector2 getV0() const;
+  AGVector2 getV1() const;
+  AGVector2 getV01() const;
+  AGVector2 getV10() const;
+
+  AGRect2 shrink(float f) const;
+  AGRect2 grow(float f) const;
+
+  void setX(float p);
+  void setY(float p);
+
+  void setLeft(float p); // attention - modifies right, too
+  void setTop(float p);  // attention - modifies bottom, too
+
+  void setRight(float p);
+  void setBottom(float p);
+
+  float setWidth(float w);
+  float setHeight(float w);
+
+  float x() const;
+  float y() const;
+  float w() const;
+  float h() const;
+
+  float width() const;
+  float height() const;
+
+  float x0() const;
+  float y0() const;
+  float x1() const;
+  float y1() const;
+
+  AGRect2 origin() const;
+
+  AGRect2 intersect(const AGRect2 &r) const;
+
+  //result=this-r
+  std::vector<AGRect2> difference(const AGRect2 &r) const;
+
+  SDL_Rect sdl() const;
+
+  bool operator==(const AGRect2 &r) const;
+  bool operator!=(const AGRect2 &r) const;
+
+  void check() const;
+
+  AGRect2 alignGrid() const; // align to integer grid
+
+  float content() const;
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+};
+
+
+class AGEXPORT AGVector4
+{
+ public:
+  float v[4];
+
+  AGVector4(float pX,float pY,float pZ,float pW=1.0f);
+  AGVector4(const AGVector4 &a);
+  AGVector4(const AGVector3 &a,float h);
+  AGVector4();
+
+  void setX(float pX);
+  void setY(float pY);
+  void setZ(float pZ);
+  void setW(float pW);
+
+  
+#ifdef SWIG
+  %rename(x) getX() const;
+  %rename(y) getY() const;
+  %rename(z) getZ() const;
+  %rename(w) getW() const;
+#endif
+  float getX() const;
+  float getY() const;
+  float getZ() const;
+  float getW() const;
+
+  AGVector4 operator-(const AGVector4 &p) const;
+  AGVector4 operator+(const AGVector4 &p) const;
+#ifdef SWIG
+%rename(add) operator+=(const AGVector4 &p);
+%rename(sub) operator-=(const AGVector4 &p);
+#endif
+  AGVector4 &operator+=(const AGVector4 &p);
+  AGVector4 &operator-=(const AGVector4 &p);
+
+  float operator*(const AGVector4 &p) const;
+  AGVector4 &operator*=(float f);
+  AGVector4 &operator/=(float f);
+  AGVector4 operator*(float f) const;
+  AGVector4 operator/(float f) const;
+  AGVector4 operator-() const;
+
+  bool operator==(const AGVector4 &a) const;
+  bool operator!=(const AGVector4 &a) const;
+
+  float length() const;
+  // length^2
+  float length2() const;
+
+  // length 3-dim vector
+  float length3() const;
+
+
+  AGVector4 normalized() const;
+  void normalize();
+
+  // 3-dimensional
+  AGVector4 normalized3() const;
+  void normalize3();
+
+
+  float operator[](int index) const;
+  float &operator[](int index);
+
+  bool nonZero() const;
+
+  // vector-cross-product
+  // ignores 4th coordinate
+  AGVector4 operator%(const AGVector4 &a) const;
+  AGVector4 cross(const AGVector4 &a) const
+  {
+    return operator%(a);
+  }
+
+
+  AGVector3 dim3() const;
+  AGVector2 dim2() const;
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+
+#ifndef SWIG
+  (operator float*)();
+  (operator const float*)() const;
+#endif
+};
+
+class AGEXPORT AGMatrix4
+{
+  float a[16];
+ public:
+  struct MRow
+  {
+    AGMatrix4 *matrix;
+    int y;
+
+    float &operator[](size_t x)
+    {
+      return matrix->get(x,y);
+    }
+    float operator[](size_t x) const
+    {
+      return matrix->get(x,y);
+    }
+  };
+
+  AGMatrix4();
+  AGMatrix4(float v[16]);
+  AGMatrix4(float angle,const AGVector3 &d);
+  // FIXME: add quaternion
+  //  AGMatrix4(const AGAngle &a);
+  AGMatrix4(const AGVector4 &a);
+  void set(size_t x,size_t y,float f);
+  float get(size_t x,size_t y) const;
+  float &get(size_t x,size_t y);
+
+  AGMatrix4 operator*(const AGMatrix4 &m) const;
+  AGMatrix4 &operator*=(const AGMatrix4 &m);
+  AGMatrix4 &operator+=(const AGMatrix4 &m);
+
+  AGMatrix3 get3x3(size_t x,size_t y) const;
+
+  AGVector4 operator*(const AGVector4 &v) const;
+
+  float operator()(size_t x,size_t y) const;
+  float &operator()(size_t x,size_t y);
+
+  AGMatrix4 inverted() const;
+  AGMatrix4 transposed() const;
+
+  MRow operator[](size_t y);
+  //  const Row operator[](size_t y) const;
+
+  void swapRows(size_t a,size_t b);
+  void swapCols(size_t a,size_t b);
+
+#ifdef SWIG
+  %rename(to_s) toString() const;
+#endif
+  AGString toString() const;
+
+#ifndef SWIG
+  (operator float*)();
+  (operator const float*)() const;
+  //  (operator const double*)() const;
+#endif
+
+  AGVector4 getRow(size_t i) const;
+};
+
+// axis-aligned
+class AGEXPORT AGRect3
+{
+  AGVector3 base,dir;
+ public:
+  AGRect3(const AGVector3 &pBase,const AGVector3 &pDir);
+
+  bool collides(const AGLine3&pLine) const;
+
+  AGString toString() const;
+};
+
+// axis-aligned
+class AGEXPORT AGBox3
+{
+ public:
+  AGVector3 base,dir;
+
+  AGBox3();
+  AGBox3(const AGVector3 &pBase,const AGVector3 &pDir);
+
+  void include(const AGVector3&p);
+  bool includes(const AGBox3 &b);
+  bool collides(const AGVector3&p) const;
+
+  bool collides(const AGLine3&p) const;
+  bool collides(const AGBox3 &b) const;
+
+  bool contains(const AGTriangle3 &t) const;
+
+  std::vector<AGRect3> getSides() const;
+
+  AGString toString() const;
+
+  std::vector<AGBox3> split() const;
+
+  bool collides(const AGMatrix4 &frustum) const;
+
+  std::vector<AGVector3> getVertices() const;
+  void calcVertices(std::vector<AGVector3> &vs) const;
+
+  AGBox3 operator+(const AGVector3 &v) const;
+  AGBox3 operator-(const AGVector3 &v) const;
+
+  bool valid() const;
+
+ private:
+  bool mValid;
+};
+
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector2&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector3&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector4&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGRect2&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGBox3&v);
+
+#include "ag_geometry_inline.cc"
+
+#include <ag_serial_vec.h>
+
+#endif

Added: antargis/branches/rant/ext/basic/ag_video_base.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_video_base.cc	2007-07-16 18:48:58 UTC (rev 1145)
+++ antargis/branches/rant/ext/basic/ag_video_base.cc	2007-07-21 07:44:39 UTC (rev 1146)
@@ -0,0 +1,26 @@
+#include <ag_video_base.h>
+
+AGVideoBase::~AGVideoBase()
+{
+}
+
+
+int AGVideoBase::width() const
+{
+    return 1;
+}
+
+int AGVideoBase::height() const
+{
+    return 1;
+}
+
+int AGVideoBase::realWidth() const
+{
+    return 1;
+}
+int AGVideoBase::realHeight() const
+{
+    return 1;
+}
+



From davidkamphausen at mail.berlios.de  Sun Jul 22 12:27:01 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 22 Jul 2007 12:27:01 +0200
Subject: [Antargis-svn] r1147 - in antargis/branches/rant: . build/configs
	ext/3dengine ext/basic ext/external ext/game ext/gui ext/math
	ext/sound ext/video
Message-ID: <200707221027.l6MAR1K5029516@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-22 12:27:00 +0200 (Sun, 22 Jul 2007)
New Revision: 1147

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/unix.rb
   antargis/branches/rant/ext/3dengine/headers.hh
   antargis/branches/rant/ext/basic/ag_geometry.cc
   antargis/branches/rant/ext/basic/ag_geometry.h
   antargis/branches/rant/ext/basic/ag_main.cc
   antargis/branches/rant/ext/basic/ag_main.h
   antargis/branches/rant/ext/basic/ag_regex.h
   antargis/branches/rant/ext/basic/ag_video_base.h
   antargis/branches/rant/ext/basic/headers.hh
   antargis/branches/rant/ext/external/headers.hh
   antargis/branches/rant/ext/game/headers.hh
   antargis/branches/rant/ext/game/height_map.cc
   antargis/branches/rant/ext/gui/headers.hh
   antargis/branches/rant/ext/math/ag_geometry.cc
   antargis/branches/rant/ext/math/ag_geometry.h
   antargis/branches/rant/ext/math/headers.hh
   antargis/branches/rant/ext/sound/headers.hh
   antargis/branches/rant/ext/video/headers.hh
Log:
M    build/configs/unix.rb
M    ext/basic/ag_main.cc
M    ext/basic/ag_main.h
M    ext/basic/ag_geometry.cc
M    ext/basic/ag_regex.h
M    ext/basic/ag_geometry.h
M    ext/basic/ag_video_base.h
M    ext/basic/headers.hh
M    ext/external/headers.hh
M    ext/gui/headers.hh
M    ext/video/headers.hh
M    ext/sound/headers.hh
M    ext/math/ag_geometry.cc
M    ext/math/ag_geometry.h
M    ext/math/headers.hh
M    ext/game/height_map.cc
M    ext/game/headers.hh
M    ext/3dengine/headers.hh
M    Rantfile


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/Rantfile	2007-07-22 10:27:00 UTC (rev 1147)
@@ -14,9 +14,9 @@
 
 
 # get library-dependencies for libSDL
-sdlLibs=$config['LIBS'].split(" ")
-
-allSDLlibs=sdlLibs+["-lSDL_image","-lSDL_ttf","-lpng"]
+sdlLibs=$config['LIBS'].split(" ")
+
+allSDLlibs=sdlLibs+["-lSDL_image","-lSDL_ttf","-lpng"]
 glLibs=$config["LIBGL"].split(" ")
 
 # configure source-directories.
@@ -26,9 +26,9 @@
 # - an external library, which then marked by "-l" in front, like "-lz" for the z-library
 # - an internal dependency on a directory
 # NOTE: dependencies are not automatically inherited, you have to include them yourself!
-
-rubyLib=["-l"+$config['RUBYLIB']]
 
+rubyLib=["-l"+$config['RUBYLIB']]
+
 sourceDeps=[
 	["ext/external",["-lz"]+sdlLibs],
 	["ext/basic",["ext/external","-lz"]+sdlLibs+rubyLib],
@@ -69,7 +69,7 @@
 ###########################################
 # all-target
 buildLibs=sourceDirs.collect{|d|"ext/"+"lib"+makeLibName(d)+".so"}
-interfaceLibs=sourceDirs[1..-1].collect{|d|"ext/"+makeLibName(d)+".so"} # exclude "ext/external"
+interfaceLibs=sourceDirs[1..-1].collect{|d|"ext/"+makeLibName(d)+".so"} # exclude "ext/external"
 allTargets = buildLibs + interfaceLibs
 task :all => allTargets
 #
@@ -112,7 +112,7 @@
             sources=sources.select{|f|not f=~/\.so/}
         end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
-        puts "------",cmd,"--------------!"
+        puts "------",cmd,"--------------!"
 		sys cmd
         if ENV['WINDIR']
             sys "copy #{sys.expand_path(t.name).gsub("/",Dir.separator)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll").gsub("/",Dir.separator)}.a"
@@ -130,26 +130,26 @@
 	dir,dep=pair
 	libname=makeLibName(dir)
 	target="ext/"+makeLibName(dir)+".so"
-
-    # FIXME:re-include this
-    tsources=[]
-    tsources+=[dir+"/"+libname+"swig.cc"]
+
+    # FIXME:re-include this
+    tsources=[]
+    tsources+=[dir+"/"+libname+"swig.cc"]
 	tsources.collect!{|f|f.sub_ext("oo")}
-	#tsources+=["ext/lib"+makeLibName(dir)+".so"]
-    extlibs=["-l"+makeLibName(dir)]
+	#tsources+=["ext/lib"+makeLibName(dir)+".so"]
+    extlibs=["-l"+makeLibName(dir)]
     
 	dep.each{|d|
 		if d[0..0]!="-" and d!="ext/external"
 			extlibs+=["-l"+makeLibName(d)]
 		end
-	}
-    #tsources+=rubyLib
+	}
+    #tsources+=rubyLib
     
-    puts "TARGET:",target
-    puts "SOURES:",tsources
-    puts "---"
+    puts "TARGET:",target
+    puts "SOURES:",tsources
+    puts "---"
 	task target => tsources do |t|
-		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (t.prerequisites.collect{|f|sys.expand_path(f)}+extlibs+rubyLib).join(" "))
+		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (t.prerequisites.collect{|f|sys.expand_path(f)}+extlibs+rubyLib).join(" "))
         puts "------",cmd,"--------------!"
 		sys cmd
 	end
@@ -181,7 +181,7 @@
 # swig - interfacing for ruby
 #
 swigSrc = lambda { |target| 
-	dir=getDirUnix(target)
+	dir=getDirUnix(target)
     puts "TARGET:#{target} DIR:#{dir}"
 	name=makeLibName(dir)
 	[target.sub(name+"swig.cc","interface.i")]+sys["build/*.i"]+importsForInterface(target).split(":") 
@@ -200,21 +200,21 @@
 # interface-files for swig
 #
 
-def importsForInterface(name)
-puts "?=="
-	$sourceDeps.each{|t|
-		if name=~/#{t[0]}/
+def importsForInterface(name)
+puts "?=="
+	$sourceDeps.each{|t|
+		if name=~/#{t[0]}/
 			return t[1].select{|f|not f=~/-.*/}.select{|f|not f=~/external/}.collect{|f|f+"/interface.i"}.join(":")
 		end
 	}
 	return ""
 end
 
-interfaceSrc = lambda { |target| 
+interfaceSrc = lambda { |target| 
 	list=Dir[getDirUnix(target)+"/"+"*.h"].select{|f|not f=~/swig.h/}+Dir["build/*.rb"] # FIXME:replace
-	list+=importsForInterface(target).split(":")
+	list+=importsForInterface(target).split(":")
 	list
-}
+}
 
 gen Rule, /^.*interface.i$/ => interfaceSrc do |t|
     cmd=makeCommand("CREATEINTERFACE",getDirUnix(sys.expand_path(t.name)),importsForInterface(t.name))
@@ -252,7 +252,13 @@
 ###########################################
 # build source-distribution
 #
-task :dist=>[:swigSources,:rantStandAlone] do |t|
+files=(sys["build/**/*"]+sys["ext/**/*"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/ or f=~/swig/ or f=~/packages/)}
+#puts files
+#exit
+
+sourcePkg=gen Package::Tgz, "packages","antargis-source-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => files
+
+task :dist=>[:swigSources,:rantStandAlone,sourcePkg.path] do |t|
 end
 #
 ###########################################

Modified: antargis/branches/rant/build/configs/unix.rb
===================================================================
--- antargis/branches/rant/build/configs/unix.rb	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/build/configs/unix.rb	2007-07-22 10:27:00 UTC (rev 1147)
@@ -25,7 +25,7 @@
 	# a c++ compiler call with parameters (using ccache if available)
 	"CXX_CALL"=>"$(CCACHE) $(CXX) $(COMPILE_PARAMS)",
 	# build a shared library (.so or .dll)
-	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) $(INPUT)",
+	"LINK_SHARED"=>"$(LINK) -shared -o $(OUTPUT) -Lext $(INPUT)",
 	# generate c++-code from a swig-interface file
 	"SWIG_CALL"=>"$(SWIG) -v -Wall -ruby -c++ -o $(OUTPUT) $(INPUT)",
 	# generate dependencies for swig-interface files

Modified: antargis/branches/rant/ext/3dengine/headers.hh
===================================================================
--- antargis/branches/rant/ext/3dengine/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/3dengine/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,61 +1,61 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/anim_mesh_data.h"
-#include "ext/3dengine/mesh.h"
-#include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/ant_camera.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/ant_projection.h"
-#ifdef SWIG
-%include "ext/3dengine/mesh_data.h"
-%include "ext/3dengine/scene_base.h"
-%include "ext/3dengine/scenenode.h"
-%include "ext/3dengine/mesh_2d_data.h"
-%include "ext/3dengine/anim_mesh_data.h"
-%include "ext/3dengine/mesh.h"
-%include "ext/3dengine/mesh_2d.h"
-%include "ext/3dengine/ant_particle.h"
-%include "ext/3dengine/scene.h"
-%include "ext/3dengine/anim_mesh.h"
-%include "ext/3dengine/ant_camera.h"
-%include "ext/3dengine/mesh_optimizer.h"
-%include "ext/3dengine/ant_projection.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_painter.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/ant_projection.h"
+#ifdef SWIG
+%include "ext/3dengine/mesh_data.h"
+%include "ext/3dengine/scene_base.h"
+%include "ext/3dengine/scenenode.h"
+%include "ext/3dengine/mesh_2d_data.h"
+%include "ext/3dengine/anim_mesh_data.h"
+%include "ext/3dengine/mesh.h"
+%include "ext/3dengine/mesh_2d.h"
+%include "ext/3dengine/ant_particle.h"
+%include "ext/3dengine/scene.h"
+%include "ext/3dengine/anim_mesh.h"
+%include "ext/3dengine/ant_camera.h"
+%include "ext/3dengine/mesh_optimizer.h"
+%include "ext/3dengine/ant_projection.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/basic/ag_geometry.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_geometry.cc	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_geometry.cc	2007-07-22 10:27:00 UTC (rev 1147)
@@ -202,6 +202,12 @@
   v[1]=node.get("y").toFloat();
 }
 
+bool AGVector2::operator<(const AGVector2 &p) const
+{
+  return v[0]<p.v[0] || (v[0]==p.v[0] && v[1]<p.v[1]);
+}
+
+
 AGVector2 AGVector2::operator-() const
 {
   return AGVector2(-v[0],-v[1]);
@@ -237,7 +243,7 @@
 
 bool AGVector2::operator==(const AGVector2 &a) const
 {
-  return v[0]==a.v[0] && v[1]==a.v[1] && v[2]==a.v[2];
+  return v[0]==a.v[0] && v[1]==a.v[1];// && v[2]==a.v[2];
 }
 bool AGVector2::operator!=(const AGVector2 &a) const
 {

Modified: antargis/branches/rant/ext/basic/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-22 10:27:00 UTC (rev 1147)
@@ -53,7 +53,7 @@
 
 /** \brief Simple structure holding an angle in degrees
  */
-struct AGEXPORT AGAngle
+struct AGAngle
 {
   float angle;
   
@@ -87,6 +87,9 @@
 
   AGAngle getAngle() const;
 
+
+  bool operator<(const AGVector2 &p) const;
+
   AGVector2 operator-() const;
   AGVector2 operator-(const AGVector2 &p) const;
   AGVector2 operator+(const AGVector2 &p) const;
@@ -693,11 +696,11 @@
   bool mValid;
 };
 
-AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector2&v);
-AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector3&v);
-AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector4&v);
-AGEXPORT std::ostream &operator<<(std::ostream &o,const AGRect2&v);
-AGEXPORT std::ostream &operator<<(std::ostream &o,const AGBox3&v);
+std::ostream &operator<<(std::ostream &o,const AGVector2&v);
+std::ostream &operator<<(std::ostream &o,const AGVector3&v);
+std::ostream &operator<<(std::ostream &o,const AGVector4&v);
+std::ostream &operator<<(std::ostream &o,const AGRect2&v);
+std::ostream &operator<<(std::ostream &o,const AGBox3&v);
 
 #include "ag_geometry_inline.cc"
 

Modified: antargis/branches/rant/ext/basic/ag_main.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_main.cc	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_main.cc	2007-07-22 10:27:00 UTC (rev 1147)
@@ -188,8 +188,14 @@
   mVideo=p;
 }
 
+void AGMain::delay(int ms)
+{
+  SDL_Delay(ms);
+}
 
 
+
+
 ///   AGRepeatedCall
 AGRepeatedCall::AGRepeatedCall()
 {

Modified: antargis/branches/rant/ext/basic/ag_main.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_main.h	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_main.h	2007-07-22 10:27:00 UTC (rev 1147)
@@ -73,6 +73,8 @@
 
   void repeatedCalls();
 
+  void delay(int ms);
+
  protected:
   virtual void mark();
 

Modified: antargis/branches/rant/ext/basic/ag_regex.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_regex.h	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_regex.h	2007-07-22 10:27:00 UTC (rev 1147)
@@ -21,6 +21,9 @@
 #ifndef AG_REGEX_H
 #define AG_REGEX_H
 
+
+#ifdef UNDEF
+
 #include <regex.h>
 #include <sys/types.h>
 #include <string>
@@ -101,3 +104,5 @@
 
 
 #endif
+
+#endif

Modified: antargis/branches/rant/ext/basic/ag_video_base.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/ag_video_base.h	2007-07-22 10:27:00 UTC (rev 1147)
@@ -7,14 +7,14 @@
 
 class AGEXPORT AGVideoBase:public AGSingleton
 {
-public:
-  virtual ~AGVideoBase();
-  virtual int width() const;
-  virtual int height() const;
-
-  virtual int realWidth() const;
-  virtual int realHeight() const;
+ public:
+  virtual ~AGVideoBase();
+  virtual int width() const;
+  virtual int height() const;
 
+  virtual int realWidth() const;
+  virtual int realHeight() const;
+
 };
 
 

Modified: antargis/branches/rant/ext/basic/headers.hh
===================================================================
--- antargis/branches/rant/ext/basic/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/basic/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,34 +1,34 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_utf8.h"
-#ifdef SWIG
-%include "ext/basic/ag_rubyobj.h"
-%include "ext/basic/ag_messageobject.h"
-%include "ext/basic/ag_singleton.h"
-%include "ext/basic/ag_rand_base.h"
-%include "ext/basic/ag_main.h"
-%include "ext/basic/ag_video_base.h"
-%include "ext/basic/ag_geometry.h"
-%include "ext/basic/ag_serial.h"
-%include "ext/basic/ag_config.h"
-%include "ext/basic/ag_xml.h"
-%include "ext/basic/ag_string_utf8.h"
-%include "ext/basic/ag_stringstream.h"
-%include "ext/basic/ag_fs.h"
-%include "ext/basic/ag_utf8.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_utf8.h"
+#ifdef SWIG
+%include "ext/basic/ag_rubyobj.h"
+%include "ext/basic/ag_messageobject.h"
+%include "ext/basic/ag_singleton.h"
+%include "ext/basic/ag_rand_base.h"
+%include "ext/basic/ag_main.h"
+%include "ext/basic/ag_video_base.h"
+%include "ext/basic/ag_geometry.h"
+%include "ext/basic/ag_serial.h"
+%include "ext/basic/ag_config.h"
+%include "ext/basic/ag_xml.h"
+%include "ext/basic/ag_string_utf8.h"
+%include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_fs.h"
+%include "ext/basic/ag_utf8.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/external/headers.hh
===================================================================
--- antargis/branches/rant/ext/external/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/external/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,8 +1,8 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-
-
-#ifdef SWIG
-
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+
+
+#ifdef SWIG
+
+#endif
+#endif

Modified: antargis/branches/rant/ext/game/headers.hh
===================================================================
--- antargis/branches/rant/ext/game/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/game/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,97 +1,101 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_image.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_layoutfactory.h"
-#include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_local.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_menuitem.h"
-#include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_scroller.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_text.h"
-#include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_widget.h"
-#include "ext/gui/ag_window.h"
-#include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/anim_mesh_data.h"
-#include "ext/3dengine/ant_camera.h"
-#include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/mesh.h"
-#include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/scene_base.h"
-#include "ext/game/path.h"
-#include "ext/game/terrain.h"
-#include "ext/game/entity.h"
-#include "ext/game/water.h"
-#include "ext/game/height_map.h"
-#include "ext/game/ant_app.h"
-#include "ext/game/minimap.h"
-#include "ext/game/map.h"
-#include "ext/game/heuristic.h"
-#include "ext/game/jobs.h"
-#include "ext/game/resource.h"
-#ifdef SWIG
-%include "ext/game/path.h"
-%include "ext/game/terrain.h"
-%include "ext/game/entity.h"
-%include "ext/game/water.h"
-%include "ext/game/height_map.h"
-%include "ext/game/ant_app.h"
-%include "ext/game/minimap.h"
-%include "ext/game/map.h"
-%include "ext/game/heuristic.h"
-%include "ext/game/jobs.h"
-%include "ext/game/resource.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_painter.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_local.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_window.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_border.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/game/path.h"
+#include "ext/game/path_v2.h"
+#include "ext/game/path_base.h"
+#include "ext/game/terrain.h"
+#include "ext/game/entity.h"
+#include "ext/game/water.h"
+#include "ext/game/height_map.h"
+#include "ext/game/ant_app.h"
+#include "ext/game/minimap.h"
+#include "ext/game/map.h"
+#include "ext/game/heuristic.h"
+#include "ext/game/jobs.h"
+#include "ext/game/resource.h"
+#ifdef SWIG
+%include "ext/game/path.h"
+%include "ext/game/path_v2.h"
+%include "ext/game/path_base.h"
+%include "ext/game/terrain.h"
+%include "ext/game/entity.h"
+%include "ext/game/water.h"
+%include "ext/game/height_map.h"
+%include "ext/game/ant_app.h"
+%include "ext/game/minimap.h"
+%include "ext/game/map.h"
+%include "ext/game/heuristic.h"
+%include "ext/game/jobs.h"
+%include "ext/game/resource.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/game/height_map.cc
===================================================================
--- antargis/branches/rant/ext/game/height_map.cc	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/game/height_map.cc	2007-07-22 10:27:00 UTC (rev 1147)
@@ -41,7 +41,8 @@
 
 HeightMap::~HeightMap()
 {
-  saveDelete(mTerrain);
+  if(mTerrain)
+    saveDelete(mTerrain);
 }
 
 void HeightMap::initTerrainMesh()

Modified: antargis/branches/rant/ext/gui/headers.hh
===================================================================
--- antargis/branches/rant/ext/gui/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/gui/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,89 +1,89 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_layoutfactory.h"
-#include "ext/gui/ag_widget.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_image.h"
-#include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_text.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_scroller.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_window.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_menuitem.h"
-#include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_local.h"
-#ifdef SWIG
-%include "ext/gui/ag_layoutfactory.h"
-%include "ext/gui/ag_widget.h"
-%include "ext/gui/ag_application.h"
-%include "ext/gui/ag_table.h"
-%include "ext/gui/ag_layout.h"
-%include "ext/gui/ag_colorbutton.h"
-%include "ext/gui/ag_image.h"
-%include "ext/gui/ag_screenwidget.h"
-%include "ext/gui/ag_listbox.h"
-%include "ext/gui/ag_frame.h"
-%include "ext/gui/ag_text.h"
-%include "ext/gui/ag_button.h"
-%include "ext/gui/ag_edit.h"
-%include "ext/gui/ag_radiogroup.h"
-%include "ext/gui/ag_scroller.h"
-%include "ext/gui/ag_tooltip.h"
-%include "ext/gui/ag_combo.h"
-%include "ext/gui/ag_menu.h"
-%include "ext/gui/ag_caption.h"
-%include "ext/gui/ag_window.h"
-%include "ext/gui/ag_checkbox.h"
-%include "ext/gui/ag_menuitem.h"
-%include "ext/gui/ag_radio.h"
-%include "ext/gui/ag_theme.h"
-%include "ext/gui/ag_border.h"
-%include "ext/gui/ag_background.h"
-%include "ext/gui/ag_local.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_painter.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_window.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_local.h"
+#ifdef SWIG
+%include "ext/gui/ag_layoutfactory.h"
+%include "ext/gui/ag_widget.h"
+%include "ext/gui/ag_application.h"
+%include "ext/gui/ag_table.h"
+%include "ext/gui/ag_layout.h"
+%include "ext/gui/ag_colorbutton.h"
+%include "ext/gui/ag_image.h"
+%include "ext/gui/ag_screenwidget.h"
+%include "ext/gui/ag_listbox.h"
+%include "ext/gui/ag_frame.h"
+%include "ext/gui/ag_text.h"
+%include "ext/gui/ag_button.h"
+%include "ext/gui/ag_edit.h"
+%include "ext/gui/ag_radiogroup.h"
+%include "ext/gui/ag_scroller.h"
+%include "ext/gui/ag_tooltip.h"
+%include "ext/gui/ag_combo.h"
+%include "ext/gui/ag_menu.h"
+%include "ext/gui/ag_caption.h"
+%include "ext/gui/ag_window.h"
+%include "ext/gui/ag_checkbox.h"
+%include "ext/gui/ag_menuitem.h"
+%include "ext/gui/ag_radio.h"
+%include "ext/gui/ag_theme.h"
+%include "ext/gui/ag_border.h"
+%include "ext/gui/ag_background.h"
+%include "ext/gui/ag_local.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/math/ag_geometry.cc
===================================================================
--- antargis/branches/rant/ext/math/ag_geometry.cc	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/math/ag_geometry.cc	2007-07-22 10:27:00 UTC (rev 1147)
@@ -202,6 +202,12 @@
   v[1]=node.get("y").toFloat();
 }
 
+bool AGVector2::operator<(const AGVector2 &p) const
+{
+  return v[0]<p.v[0] || (v[0]==p.v[0] && v[1]<p.v[1]);
+}
+
+
 AGVector2 AGVector2::operator-() const
 {
   return AGVector2(-v[0],-v[1]);
@@ -237,7 +243,7 @@
 
 bool AGVector2::operator==(const AGVector2 &a) const
 {
-  return v[0]==a.v[0] && v[1]==a.v[1] && v[2]==a.v[2];
+  return v[0]==a.v[0] && v[1]==a.v[1];// && v[2]==a.v[2];
 }
 bool AGVector2::operator!=(const AGVector2 &a) const
 {

Modified: antargis/branches/rant/ext/math/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/math/ag_geometry.h	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/math/ag_geometry.h	2007-07-22 10:27:00 UTC (rev 1147)
@@ -87,6 +87,9 @@
 
   AGAngle getAngle() const;
 
+
+  bool operator<(const AGVector2 &p) const;
+
   AGVector2 operator-() const;
   AGVector2 operator-(const AGVector2 &p) const;
   AGVector2 operator+(const AGVector2 &p) const;

Modified: antargis/branches/rant/ext/math/headers.hh
===================================================================
--- antargis/branches/rant/ext/math/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/math/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,27 +1,27 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#ifdef SWIG
-%include "ext/math/ag_rand.h"
-%include "ext/math/ant_frustum.h"
-%include "ext/math/ag_algebra.h"
-%include "ext/math/ag_geometry.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_geometry.h"
+#ifdef SWIG
+%include "ext/math/ag_rand.h"
+%include "ext/math/ant_frustum.h"
+%include "ext/math/ag_algebra.h"
+%include "ext/math/ag_geometry.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/sound/headers.hh
===================================================================
--- antargis/branches/rant/ext/sound/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/sound/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,21 +1,21 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/sound/ag_mixer.h"
-#ifdef SWIG
-%include "ext/sound/ag_mixer.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/sound/ag_mixer.h"
+#ifdef SWIG
+%include "ext/sound/ag_mixer.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/video/headers.hh
===================================================================
--- antargis/branches/rant/ext/video/headers.hh	2007-07-21 07:44:39 UTC (rev 1146)
+++ antargis/branches/rant/ext/video/headers.hh	2007-07-22 10:27:00 UTC (rev 1147)
@@ -1,47 +1,47 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_painter.h"
-#include "ext/video/ag_color.h"
-#ifdef SWIG
-%include "ext/video/ag_painttarget.h"
-%include "ext/video/ag_surface.h"
-%include "ext/video/ag_texture.h"
-%include "ext/video/ag_screen.h"
-%include "ext/video/ag_fontengine.h"
-%include "ext/video/ag_video.h"
-%include "ext/video/ag_clip.h"
-%include "ext/video/ag_rendercontext.h"
-%include "ext/video/ag_texturecache.h"
-%include "ext/video/ag_font.h"
-%include "ext/video/ag_painter.h"
-%include "ext/video/ag_color.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/math/ag_geometry.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_color.h"
+#ifdef SWIG
+%include "ext/video/ag_painttarget.h"
+%include "ext/video/ag_surface.h"
+%include "ext/video/ag_texture.h"
+%include "ext/video/ag_screen.h"
+%include "ext/video/ag_fontengine.h"
+%include "ext/video/ag_video.h"
+%include "ext/video/ag_clip.h"
+%include "ext/video/ag_rendercontext.h"
+%include "ext/video/ag_texturecache.h"
+%include "ext/video/ag_font.h"
+%include "ext/video/ag_painter.h"
+%include "ext/video/ag_color.h"
+#endif
+#endif



From davidkamphausen at mail.berlios.de  Sun Jul 22 14:25:12 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 22 Jul 2007 14:25:12 +0200
Subject: [Antargis-svn] r1148 - antargis/branches/rant/ext/game
Message-ID: <200707221225.l6MCPCDi017931@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-22 14:25:12 +0200 (Sun, 22 Jul 2007)
New Revision: 1148

Added:
   antargis/branches/rant/ext/game/path_base.cc
   antargis/branches/rant/ext/game/path_base.h
   antargis/branches/rant/ext/game/path_v2.cc
   antargis/branches/rant/ext/game/path_v2.h
Log:
* new path-finder started


Added: antargis/branches/rant/ext/game/path_base.cc
===================================================================
--- antargis/branches/rant/ext/game/path_base.cc	2007-07-22 10:27:00 UTC (rev 1147)
+++ antargis/branches/rant/ext/game/path_base.cc	2007-07-22 12:25:12 UTC (rev 1148)
@@ -0,0 +1,9 @@
+#include <path_base.h>
+
+AGPathBase::~AGPathBase()
+{
+}
+float AGPathBase::weight(const AGVector2 &a,const AGVector2 &b)
+{
+  return 0;
+}

Added: antargis/branches/rant/ext/game/path_base.h
===================================================================
--- antargis/branches/rant/ext/game/path_base.h	2007-07-22 10:27:00 UTC (rev 1147)
+++ antargis/branches/rant/ext/game/path_base.h	2007-07-22 12:25:12 UTC (rev 1148)
@@ -0,0 +1,16 @@
+#ifndef PATH_BASE_H
+#define PATH_BASE_H
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#include <ag_geometry.h>
+#include <ag_rubyobj.h>
+
+class AGEXPORT AGPathBase:public AGRubyObject
+{
+ public:
+  virtual ~AGPathBase();
+  virtual float weight(const AGVector2 &a,const AGVector2 &b);
+};
+
+#endif

Added: antargis/branches/rant/ext/game/path_v2.cc
===================================================================
--- antargis/branches/rant/ext/game/path_v2.cc	2007-07-22 10:27:00 UTC (rev 1147)
+++ antargis/branches/rant/ext/game/path_v2.cc	2007-07-22 12:25:12 UTC (rev 1148)
@@ -0,0 +1,410 @@
+#include "path_v2.h"
+#include <ag_debug.h>
+#include <height_map.h>
+#include <math.h>
+#include <ag_geometry.h>
+#include <set>
+
+
+DistanceComputer::DistanceComputer(HeightMap *pHeightMap,
+				   float pStepX,float pStepY):
+  mHeightMap(pHeightMap),
+  mStepX(pStepX),mStepY(pStepY)
+{
+  assert(mHeightMap);
+}
+
+bool DistanceComputer::isPassable(const AGVector2 &pPoint) const
+{
+  return mHeightMap->getHeight(pPoint[0],pPoint[1])>0;
+}
+
+float DistanceComputer::beginX() const
+{
+  return 0;
+}
+float DistanceComputer::beginY() const
+{
+  return 0;
+}
+float DistanceComputer::stepX() const
+{
+  return mStepX;
+}
+float DistanceComputer::stepY() const
+{
+  return mStepY;
+}
+float DistanceComputer::endX() const
+{
+  return mHeightMap->getW();
+}
+float DistanceComputer::endY() const
+{
+  return mHeightMap->getH();
+}
+
+// FIXME: maybe move this to other class ?
+float DistanceComputer::simpleWeight(const AGVector2 &a,const AGVector2 &b) const
+{
+  float ha=mHeightMap->getHeight(a[0],a[1]);
+  float hb=mHeightMap->getHeight(b[0],b[1]);
+
+  float d=(a-b).length();
+  float hd=ha-hb;
+
+  if(hb>ha) // up hill
+    return sqrt(d*d+hd*hd);
+  return d; // down hill - normal speed
+}
+
+/**
+ * compute possible neighbors (w.r.t. to map-borders)
+ */
+std::list<AGVector2> DistanceComputer::getNeighbors(const AGVector2 &p) const
+{
+  std::list<AGVector2> diffList,rList;
+  AGVector2 t;
+
+  diffList.push_back(AGVector2(-stepX(),0));
+  diffList.push_back(AGVector2(+stepX(),0));
+  diffList.push_back(AGVector2(0,-stepY()));
+  diffList.push_back(AGVector2(0,+stepY()));
+
+  for(std::list<AGVector2>::iterator i=diffList.begin();i!=diffList.end();i++)
+    {
+      t=*i+p;
+      if(t.getX() >= beginX() &&
+	 t.getX()<=endX() && 
+	 t.getY()>=beginY() && 
+	 t.getY()<=endY())
+	rList.push_back(t);
+    }
+
+  return rList;
+}
+
+std::map<AGVector2,float> DistanceComputer::getAllReachableFrom(const AGVector2 &p) const
+{
+  float w;
+  std::map<AGVector2,float> rList;
+  std::list<AGVector2> nList=getNeighbors(p);
+
+  for(std::list<AGVector2>::iterator i=nList.begin();i!=nList.end();i++)
+    {
+      w=simpleWeight(p,*i);
+      rList.insert(std::make_pair(*i,w));
+    }
+  return rList;
+}
+
+
+
+///////////////////////////////////////////////////////////////////////////////////
+
+
+/**
+ * PathV2Data constructor - does nothing yet
+ */
+PathV2Data::PathV2Data(size_t pBaseSize):mBaseSize(pBaseSize)
+{
+}
+
+
+void PathV2Data::compute(const DistanceComputer &pCalc)
+{
+  mMatrices.clear();
+
+  float x,y;
+  size_t ix,iy;
+
+  for(x=pCalc.beginX();x<=pCalc.endX();x+=pCalc.stepX())
+    {
+      for(y=pCalc.beginY();y<=pCalc.endY();y+=pCalc.stepY())
+	{
+	  AGVector2 start(x,y);
+
+	  traceFrom(pCalc,start);
+	}
+    }
+
+}
+
+
+void PathV2Data::traceFrom(const DistanceComputer &pCalc,const AGVector2 &p)
+{
+  // FIXME: maybe store directly into matrix ???
+
+  std::map<AGVector2,float> distances;
+  std::list<AGVector2> queue; // FIXME: use a distance-filter ????
+
+  float cDist,nextDist,oldDist;
+  AGVector2 curPos;
+
+  queue.push_back(p);
+  distances[p]=0;
+
+  while(queue.size()>0)
+    {
+      curPos=queue.front();
+      queue.pop_front();
+      cDist=distances[curPos];
+      std::map<AGVector2,float> neighbors=pCalc.getAllReachableFrom(curPos);
+
+      for(std::map<AGVector2,float>::iterator i=neighbors.begin();i!=neighbors.end();i++)
+	{
+	  nextDist=cDist+i->second;
+	  oldDist=distances[i->first];
+	  if(oldDist==0 || nextDist<oldDist)
+	    {
+	      // store in map
+	      distances[i->first]=nextDist;
+	      // push into queue
+	      queue.push_back(i->first);
+	    }
+	}
+
+    }
+
+  // ok, we're ready
+  // store into matrix
+  
+  size_t matrixWidth=size_t((pCalc.endX()-pCalc.beginX())/pCalc.stepX()+1);
+  size_t matrixHeight=size_t((pCalc.endY()-pCalc.beginY())/pCalc.stepY()+1);
+
+  AGMatrixN matrix(matrixWidth,matrixHeight);
+
+  for(std::map<AGVector2,float>::iterator i=distances.begin();i!=distances.end();i++)
+    {
+      size_t x=size_t((i->first[0]-pCalc.beginX())/pCalc.stepX());
+      size_t y=size_t((i->first[1]-pCalc.beginY())/pCalc.stepY());
+      matrix.set(x,y,i->second);
+    }
+
+  //FIXME  mMatrices.push_back(matrix);
+  
+}
+
+
+
+
+///////////////////////////////////////////////////////////////////////////////////
+
+/**
+ * PathV2 constructor
+ * \param pData the data that's used to compute distances - is owned by PathV2 later on!
+ */
+PathV2::PathV2(PathV2Data *pData):mData(pData)
+{
+}
+
+PathV2::~PathV2()
+{
+  if(mData)
+    saveDelete(mData);
+}
+
+
+float PathV2::weight(const AGVector2 &a,const AGVector2 &b)
+{
+}
+
+void PathV2::mark()
+{
+  markObject(mData);
+}
+
+
+
+
+
+
+
+///////////////////////////////////////////////////////////////////////////////////
+
+class DistanceOrder
+{
+public:
+  DistanceOrder(const AGVector2 &pBase):mBase(pBase)
+  {
+  }
+  bool operator()(const AGVector2 &a,const AGVector2 &b) const
+  {
+    return (a-mBase).length2()<(b-mBase).length2();
+  }
+private:
+  AGVector2 mBase;
+
+};
+
+
+/**
+ * PathV3Data constructor
+ */
+
+PathV3Data::PathV3Data(size_t pFieldCount):
+  mFieldCount(pFieldCount)
+{
+}
+
+
+void PathV3Data::compute(const DistanceComputer &pCalc)
+{
+  std::vector<AGVector2> allValidPoints;
+  std::set<AGVector2> allValidPointsSet;
+  AGVector2 currentPoint;
+  float x,y;
+
+  for(x=pCalc.beginX();x<=pCalc.endX();x+=pCalc.stepX())
+    {
+      for(y=pCalc.beginY();y<=pCalc.endY();y+=pCalc.stepY())
+	{
+	  currentPoint=AGVector2(x,y);
+	  if(pCalc.isPassable(currentPoint))
+	    {
+	      allValidPoints.push_back(currentPoint);
+	    }
+	}
+    }
+
+  std::copy(allValidPoints.begin(),allValidPoints.end(),std::inserter(allValidPointsSet,allValidPointsSet.begin()));
+
+  size_t estFieldSize=allValidPoints.size()/mFieldCount;
+  // shuffle ???
+
+
+  cdebug("estFieldSize:"<<estFieldSize);
+
+  while(allValidPoints.size()>0)
+    {
+      // make new field
+      size_t randomIndex=rand()%allValidPoints.size();
+      std::set<AGVector2> currentField;
+      AGVector2 fieldMiddle=allValidPoints[randomIndex];
+
+      currentField.insert(fieldMiddle);
+      allValidPointsSet.erase(fieldMiddle);
+
+      // grow field
+      
+      DistanceOrder order(fieldMiddle);
+      std::set<AGVector2,DistanceOrder> growField(order);//(DistanceOrder(fieldMiddle));
+      //      std::set<AGVector2> growField;
+      growField.insert(fieldMiddle);
+
+      while(currentField.size()<estFieldSize && growField.size()>0)
+	{
+	  currentPoint=*growField.begin();
+	  growField.erase(currentPoint);
+
+	  std::map<AGVector2,float> reachable=pCalc.getAllReachableFrom(currentPoint);
+
+	  //	  cdebug("reachable:"<<reachable.size()<<" currentPoint:"<<currentPoint);
+
+	  for(std::map<AGVector2,float>::iterator i=reachable.begin();i!=reachable.end();i++)
+	    {
+	      //	      cdebug("1");
+	      if(growField.find(i->first)==growField.end())
+		{
+		  //		  cdebug("2");
+		  if(currentField.find(i->first)==currentField.end())
+		    {
+		      //		      cdebug("3");
+		      //		      cdebug("allValid:"<<allValidPointsSet.size());
+
+		      //		      for(  std::set<AGVector2>::iterator k=allValidPointsSet.begin();k!=allValidPointsSet.end();k++)
+		      //			{
+		      //			  cdebug(i->first<<":"<<*k<<":"<<(i->first==*k));
+		      //			}
+
+
+		      if(allValidPointsSet.find(i->first)!=allValidPointsSet.end())
+			{
+			  //  cdebug("4");
+			  growField.insert(i->first);
+			  currentField.insert(i->first);
+			  allValidPointsSet.erase(i->first);
+			}
+		    }
+		}
+	    }
+
+	}
+
+
+      // copy back into vector
+      allValidPoints.clear();
+      std::copy(allValidPointsSet.begin(),allValidPointsSet.end(),std::back_inserter(allValidPoints));
+      std::list<AGVector2> resultField;
+      std::copy(currentField.begin(),currentField.end(),std::back_inserter(resultField));
+      mFields.push_back(resultField);
+
+      for(std::list<AGVector2>::iterator i=resultField.begin();i!=resultField.end();i++)
+	{
+	  cdebug(*i);
+	}
+      cdebug("----");
+    }
+  
+}
+
+
+std::list<AGVector2> PathV3Data::vecList(size_t field) const
+{
+  return mFields[field];
+}
+size_t PathV3Data::fieldCount() const
+{
+  return mFields.size();
+}
+
+float PathV3Data::getDistanceFromTo(const AGVector2 &pFrom,const AGVector2 &pTo) const
+{
+  //FIXME
+  return 0;
+}
+
+
+bool PathV3Data::isInField(const AGVector2 &pPoint,size_t pField) const
+{
+  std::map<AGVector2,size_t>::const_iterator i=mVec2Field.find(pPoint);
+
+  if(i==mVec2Field.end())
+    return false; //FIXME: throw exception
+
+  return i->second==pField;
+}
+
+std::map<size_t,float> PathV3Data::getNeighbors(size_t pField) const
+{
+  std::map<size_t,float> x;
+  //FIXME: implement me
+  return x;
+}
+
+
+size_t PathV3Data::getField(const AGVector2 &a) const
+{
+  std::map<AGVector2,size_t>::const_iterator i=mVec2Field.find(a);
+
+  if(i==mVec2Field.end())
+    return -1;
+
+  return i->second;
+}
+
+float PathV3Data::directNeighbors(const AGVector2 &a,const AGVector2 &b) const
+{
+  std::map<AGVector2,std::map<AGVector2,float> >::const_iterator i=mDirectMaps.find(a);
+
+  if(i==mDirectMaps.end())
+    return -1;
+  
+  std::map<AGVector2,float>::const_iterator j=i->second.find(b);
+
+  if(j==i->second.end())
+    return -2;
+
+  return j->second;
+
+}

Added: antargis/branches/rant/ext/game/path_v2.h
===================================================================
--- antargis/branches/rant/ext/game/path_v2.h	2007-07-22 10:27:00 UTC (rev 1147)
+++ antargis/branches/rant/ext/game/path_v2.h	2007-07-22 12:25:12 UTC (rev 1148)
@@ -0,0 +1,119 @@
+#ifndef PATH_V2_H
+#define PATH_V2_H
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#include <path_base.h>
+#include <ag_algebra.h>
+
+#include <map>
+
+class HeightMap;
+
+/**
+ * Computes distances from a height field
+ */
+class AGEXPORT DistanceComputer
+{
+ public:
+  DistanceComputer(HeightMap *pHeightMap,float pStepX=1,float pStepY=1);
+
+  float beginX() const;
+  float beginY() const;
+  float stepX() const;
+  float stepY() const;
+  float endX() const;
+  float endY() const;
+
+  std::map<AGVector2,float> getAllReachableFrom(const AGVector2 &p) const;
+
+  // compute weight for to neighboring points (from a to b)
+  float simpleWeight(const AGVector2 &a,const AGVector2 &b) const;
+
+  bool isPassable(const AGVector2 &pPoint) const;
+
+  std::list<AGVector2> getNeighbors(const AGVector2 &p) const;
+
+ private:
+
+  HeightMap *mHeightMap;
+  float mStepX,mStepY;
+};
+
+class AGEXPORT PathV3Data:public AGRubyObject
+{
+ public:
+  PathV3Data(size_t pFieldCount=64);
+
+
+  void compute(const DistanceComputer &pCalc);
+
+  /**
+   * \return -1 if they're no neighbors
+   *         >0 the distance when they're neighbors somehow
+   */
+  float directNeighbors(const AGVector2 &a,const AGVector2 &b) const;
+
+  size_t getField(const AGVector2 &a) const;
+  std::map<size_t,float> getNeighbors(size_t pField) const;
+
+  bool isInField(const AGVector2 &pPoint,size_t pField) const;
+
+  // pFrom and pTo must be in neighboring fields
+  float getDistanceFromTo(const AGVector2 &pFrom,const AGVector2 &pTo) const;
+  
+
+  std::list<AGVector2> vecList(size_t field) const;
+  size_t fieldCount() const;
+
+
+ private:
+  
+  size_t mFieldCount;
+
+
+  std::map<AGVector2,size_t> mVec2Field;
+  std::vector<std::list<AGVector2> > mFields;
+  std::map<AGVector2,std::map<AGVector2,float> > mDirectMaps;
+  std::map<size_t,std::map<size_t,float> > mDirectFieldMaps;
+  
+};
+
+
+class AGEXPORT PathV2Data:public AGRubyObject
+{
+ public:
+  PathV2Data(size_t pBaseSize=8);
+
+  void compute(const DistanceComputer &pCalc);
+
+ private:
+  void traceFrom(const DistanceComputer &pCalc,const AGVector2 &p);
+
+  
+
+  std::map<AGVector2,AGMatrixN> mMatrices;
+  size_t mBaseSize;
+};
+
+
+
+class AGEXPORT PathBase:public AGRubyObject
+{
+};
+
+class AGEXPORT PathV2:public PathBase
+{
+ public:
+  PathV2(PathV2Data *pData);
+  ~PathV2();
+
+  virtual float weight(const AGVector2 &a,const AGVector2 &b);
+
+  virtual void mark();
+ private:
+  
+  PathV2Data *mData;
+};
+
+#endif



From davidkamphausen at mail.berlios.de  Sun Jul 22 14:25:34 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 22 Jul 2007 14:25:34 +0200
Subject: [Antargis-svn] r1149 - in antargis/branches/rant: . build
Message-ID: <200707221225.l6MCPYTo017995@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-22 14:25:34 +0200 (Sun, 22 Jul 2007)
New Revision: 1149

Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/base_tools.rb
   antargis/branches/rant/configure
Log:
* dependencies for dist-building


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-22 12:25:12 UTC (rev 1148)
+++ antargis/branches/rant/Rantfile	2007-07-22 12:25:34 UTC (rev 1149)
@@ -97,26 +97,26 @@
 		if d[0..0]=="-"
 			extlibs << d                                                           # gather external libraries (-lz)
 		else
-			tsources+=["ext/lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
+			extlibs+=["ext/lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
             #tsources+=["-l"+makeLibName(d)]
 		end
 	}
 	task target => tsources do |t|
 		# build command
-        sources=t.prerequisites
-        if ENV['WINDIR']
-            puts "EXTLIBS #{extlibs}"
-            extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
-            puts "SOURCES #{sources}"
-            puts "EXTLIBS #{extlibs}"
-            sources=sources.select{|f|not f=~/\.so/}
-        end
+		sources=t.prerequisites
+		if ENV['WINDIR']
+				puts "EXTLIBS #{extlibs}"
+				extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
+				puts "SOURCES #{sources}"
+				puts "EXTLIBS #{extlibs}"
+				sources=sources.select{|f|not f=~/\.so/}
+		end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
         puts "------",cmd,"--------------!"
 		sys cmd
-        if ENV['WINDIR']
-            sys "copy #{sys.expand_path(t.name).gsub("/",Dir.separator)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll").gsub("/",Dir.separator)}.a"
-        end
+		if isWindows
+				sys "copy #{sys.expand_path(t.name).gsub("/",Dir.separator)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll").gsub("/",Dir.separator)}.a"
+		end
 	end
 }
 #
@@ -131,16 +131,22 @@
 	libname=makeLibName(dir)
 	target="ext/"+makeLibName(dir)+".so"
 
-    # FIXME:re-include this
-    tsources=[]
-    tsources+=[dir+"/"+libname+"swig.cc"]
+	# FIXME:re-include this
+	tsources=[]
+	tsources+=[dir+"/"+libname+"swig.cc"]
 	tsources.collect!{|f|f.sub_ext("oo")}
 	#tsources+=["ext/lib"+makeLibName(dir)+".so"]
-    extlibs=["-l"+makeLibName(dir)]
+	extlibs=[] #["-l"+makeLibName(dir)]
     
 	dep.each{|d|
 		if d[0..0]!="-" and d!="ext/external"
-			extlibs+=["-l"+makeLibName(d)]
+			if isWindows
+				extlibs+=["-l"+makeLibName(d)]
+			else
+				# take some direct path instead ???
+				#tsources+=["ext/lib"+makeLibName(dir)+".so"]
+				extlibs+=["ext/lib"+makeLibName(dir)+".so"]
+			end
 		end
 	}
     #tsources+=rubyLib
@@ -226,7 +232,7 @@
 ###########################################
 # make swig-sources
 #
-task :swigSources =>sourceDirs.collect{|d|d+Dir.separator+makeLibName(d)+"swig.cc"} do
+task :swigSources =>sourceDirs.select{|d|not d=~/external/}.collect{|d|d+Dir.separator+makeLibName(d)+"swig.cc"} do
 end
 #
 ###########################################
@@ -252,7 +258,7 @@
 ###########################################
 # build source-distribution
 #
-files=(sys["build/**/*"]+sys["ext/**/*"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/ or f=~/swig/ or f=~/packages/)}
+files=(sys["build/**/*"]+sys["ext/**/*"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/ or f=~/swig/ or f=~/packages/ or f=~/\.o/ or f=~/\.so/)}
 #puts files
 #exit
 

Modified: antargis/branches/rant/build/base_tools.rb
===================================================================
--- antargis/branches/rant/build/base_tools.rb	2007-07-22 12:25:12 UTC (rev 1148)
+++ antargis/branches/rant/build/base_tools.rb	2007-07-22 12:25:34 UTC (rev 1149)
@@ -1,18 +1,18 @@
 #require 'mkmf'                        # mkmf holds information about the compiler-settings while compiling ruby (by the maintainer)
-
+
 require 'build/platform.rb'
 
 def getDir(path)
 	# FIXME: check for windows
 	path.split(Dir.separator)[0..-2].join("/")
-end
-
-def getDirUnix(path)
-    path.split("/")[0..-2].join("/")
 end
 
+def getDirUnix(path)
+    path.split("/")[0..-2].join("/")
+end
 
-def makeLibName(dir)
+
+def makeLibName(dir)
     #puts "makeLibName #{dir}"
 	"antargis"+dir.split("/")[-1]
 end
@@ -45,8 +45,12 @@
 # the getConfig function reads out compiler-information out of the mkmf-configuration variables - these are defined in a recursive manner
 def getConfig(s)
 	extendCommand(CONFIG,s)
-end
-
-def U2W(path)
-    path.gsub("/",Dir.separator)
+end
+
+def U2W(path)
+    path.gsub("/",Dir.separator)
+end
+
+def isWindows
+	(not ENV['WINDIR'].nil?)
 end
\ No newline at end of file

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-22 12:25:12 UTC (rev 1148)
+++ antargis/branches/rant/configure	2007-07-22 12:25:34 UTC (rev 1149)
@@ -2,7 +2,7 @@
 
 require 'build/configure.rb'
 
-version="0.2.1"
+version="0.2.1.1"
 
 puts <<EOT
 Battle of Antargis - Configuration



From davidkamphausen at mail.berlios.de  Sun Jul 29 12:13:57 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 12:13:57 +0200
Subject: [Antargis-svn] r1150 - in antargis/branches/rant: . build ext/basic
	ext/game ext/gui ext/video ruby ruby/entities
Message-ID: <200707291013.l6TADv6Q018670@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 12:13:56 +0200 (Sun, 29 Jul 2007)
New Revision: 1150

Added:
   antargis/branches/rant/build/tests/
Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/base_tools.rb
   antargis/branches/rant/build/configure.rb
   antargis/branches/rant/build/platform.rb
   antargis/branches/rant/build/std_list.i
   antargis/branches/rant/configure
   antargis/branches/rant/ext/basic/ag_main.cc
   antargis/branches/rant/ext/basic/ag_profiler.h
   antargis/branches/rant/ext/basic/init.cc
   antargis/branches/rant/ext/game/entity.h
   antargis/branches/rant/ext/game/headers.hh
   antargis/branches/rant/ext/game/height_map.cc
   antargis/branches/rant/ext/game/map.h
   antargis/branches/rant/ext/game/path_v2.cc
   antargis/branches/rant/ext/game/path_v2.h
   antargis/branches/rant/ext/game/templates.i
   antargis/branches/rant/ext/gui/ag_application.cc
   antargis/branches/rant/ext/video/ag_fontengine.cc
   antargis/branches/rant/ruby/ant_tools.rb
   antargis/branches/rant/ruby/entities/ant_hero.rb
   antargis/branches/rant/ruby/entities/entities.rb
   antargis/branches/rant/ruby/map.rb
   antargis/branches/rant/ruby/view.rb
Log:
* some bug-fixes


Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/Rantfile	2007-07-29 10:13:56 UTC (rev 1150)
@@ -60,6 +60,7 @@
 cflags+=" -DGCDEBUG" if $config["gcdebug"]   # enable debuggin of garbage-collection
 cflags+=" -g -O0"    if $config["debug"]     # disable optimizations for better debugging
 cflags+=" -O2"       unless $config["debug"] # enable optimizations
+cflags+=" -DMPROFILE" if $config["profile"]  # enable profiling
 	
 
 var :CFLAGS => var[:INCLUDESTR]+cflags          # store cflags in "var" for later read-out while compiling
@@ -105,17 +106,19 @@
 		# build command
 		sources=t.prerequisites
 		if ENV['WINDIR']
-				puts "EXTLIBS #{extlibs}"
+				#puts "EXTLIBS #{extlibs}"
 				extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
-				puts "SOURCES #{sources}"
-				puts "EXTLIBS #{extlibs}"
+				#puts "SOURCES #{sources}"
+				#puts "EXTLIBS #{extlibs}"
 				sources=sources.select{|f|not f=~/\.so/}
 		end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
-        puts "------",cmd,"--------------!"
+        #puts "------",cmd,"--------------!"
 		sys cmd
+		puts
 		if isWindows
 				sys "copy #{sys.expand_path(t.name).gsub("/",Dir.separator)}.a #{sys.expand_path(t.name).sub(/\.so/,".dll").gsub("/",Dir.separator)}.a"
+				puts
 		end
 	end
 }
@@ -151,13 +154,14 @@
 	}
     #tsources+=rubyLib
     
-    puts "TARGET:",target
-    puts "SOURES:",tsources
-    puts "---"
+    #puts "TARGET:",target
+    #puts "SOURES:",tsources
+    #puts "---"
 	task target => tsources do |t|
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(t.name), (t.prerequisites.collect{|f|sys.expand_path(f)}+extlibs+rubyLib).join(" "))
-        puts "------",cmd,"--------------!"
+        #puts "------",cmd,"--------------!"
 		sys cmd
+		puts
 	end
 }
 ###########################################
@@ -169,6 +173,7 @@
 gen Rule, '.o' => '.c' do |t|
 	cmd=makeCommand("CC_CALL",sys.expand_path(t.name),"#{var :CFLAGS} #{sys.expand_path(t.source)}")
 	sys cmd
+	puts
 end
 ###########################################
 
@@ -178,6 +183,7 @@
 gen Rule, '.oo' => '.cc' do |t|
 	cmd=makeCommand("CXX_CALL",sys.expand_path(t.name),"#{var :CFLAGS} #{sys.expand_path(t.source)}")
 	sys cmd
+	puts
 end
 #
 ###########################################
@@ -188,7 +194,7 @@
 #
 swigSrc = lambda { |target| 
 	dir=getDirUnix(target)
-    puts "TARGET:#{target} DIR:#{dir}"
+    #puts "TARGET:#{target} DIR:#{dir}"
 	name=makeLibName(dir)
 	[target.sub(name+"swig.cc","interface.i")]+sys["build/*.i"]+importsForInterface(target).split(":") 
 }
@@ -196,6 +202,7 @@
 gen Rule, /^.*swig.(cc|h)$/ => swigSrc do |t|
 	cmd=makeCommand("SWIG_CALL",sys.expand_path(t.name),"-DAGEXPORT -Ibuild -I#{sys.expand_path(getDir(t.name))} #{var :INCLUDESTR} #{sys.expand_path(t.source)}".gsub("/",Dir.separator))
 	sys cmd
+	puts
 end
 #
 ###########################################
@@ -207,7 +214,7 @@
 #
 
 def importsForInterface(name)
-puts "?=="
+#puts "?=="
 	$sourceDeps.each{|t|
 		if name=~/#{t[0]}/
 			return t[1].select{|f|not f=~/-.*/}.select{|f|not f=~/external/}.collect{|f|f+"/interface.i"}.join(":")
@@ -307,3 +314,5 @@
 var[:clean].include "**/marker.i"   # not needed any more - managed by Rule
 var[:clean].include "ext/*.so"
 ###########################################
+
+

Modified: antargis/branches/rant/build/base_tools.rb
===================================================================
--- antargis/branches/rant/build/base_tools.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/build/base_tools.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -53,4 +53,19 @@
 
 def isWindows
 	(not ENV['WINDIR'].nil?)
-end
\ No newline at end of file
+end
+
+
+module Build
+
+	def compile(cFile)
+	end
+	
+	def link(objs,libs)
+	end
+end
+
+module Testing
+	def runCTest(cFile)
+	end
+end

Modified: antargis/branches/rant/build/configure.rb
===================================================================
--- antargis/branches/rant/build/configure.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/build/configure.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -174,7 +174,7 @@
             currentPath=p+Dir.separator+program
             #puts "TST #{currentPath}"
             if File.exists?(currentPath)
-                puts "FOUND! at #{currentPath}"
+	#                puts "FOUND! at #{currentPath}"
                 return currentPath
             end
         }

Modified: antargis/branches/rant/build/platform.rb
===================================================================
--- antargis/branches/rant/build/platform.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/build/platform.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -6,6 +6,10 @@
 	end
 end
 
+def isWindows
+	(not ENV['WINDIR'].nil?)
+end
+
 if ENV['WINDIR']
     CONFIG={"archdir"=>Dir.pwd+"/build/win32/usr/lib"}
     

Modified: antargis/branches/rant/build/std_list.i
===================================================================
--- antargis/branches/rant/build/std_list.i	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/build/std_list.i	2007-07-29 10:13:56 UTC (rev 1150)
@@ -425,7 +425,7 @@
 		
             void each() {
 		for(std::list<T>::iterator i=self->begin();i!=self->end();i++) // with ptr2
-                    rb_yield(CONVERT_TO(&(*i));
+                    rb_yield(CONVERT_TO(*i));
             }
         }
     };

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/configure	2007-07-29 10:13:56 UTC (rev 1150)
@@ -19,6 +19,12 @@
 		CFG.set("gcdebug",true)
 	end
 
+CFG.addOption("enable-profile","p",
+	"enable c++ profiling") do  ||
+		CFG.set("profile",true)
+	end
+
+
 CFG.addOption("prefix","",
 	"set prefix directory","dir") do |d|
 		CFG.set("prefix",d)
@@ -44,6 +50,20 @@
 		CFG.set("version",v)
 	end
 
+if $:.join("")=~/ruby1.8/
+	if isWindows
+		CFG.set("RUBYLIB","msvcrt-ruby18")
+	else
+		CFG.set("RUBYLIB","ruby1.8")
+	end
+else
+	if isWindows
+		CFG.set("RUBYLIB","msvcrt-ruby19")
+	else
+		CFG.set("RUBYLIB","ruby1.9")
+	end
+end
+
 CFG.checkProgram("ccache",false)
 CFG.checkProgram("gcc")
 CFG.checkProgram("g++")
@@ -74,4 +94,6 @@
 
 CFG.run
 
+puts
+puts "You should run '>rant clean && rant' to let changes take effect!"
 puts 

Modified: antargis/branches/rant/ext/basic/ag_main.cc
===================================================================
--- antargis/branches/rant/ext/basic/ag_main.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/basic/ag_main.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -27,6 +27,8 @@
 #include "ag_fs.h"
 #include "ag_debug.h"
 
+#include <ruby.h>
+
 int lastWidth=0;
 int lastHeight=0;
 int lastVWidth=0;
@@ -127,6 +129,19 @@
       throw std::runtime_error("AGMain not initialized");
       exit(1);
     }
+
+
+  static bool registered=false;
+  if(!registered)
+    {
+      registered=true;
+
+      // IMPORTANT:
+      //   put it into a global variable - so that it won't get garbage collected
+      rb_eval_string("include Antargisbasic;$agMain=getMain");
+    }
+
+
   return mAGMain;
 }
 

Modified: antargis/branches/rant/ext/basic/ag_profiler.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_profiler.h	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/basic/ag_profiler.h	2007-07-29 10:13:56 UTC (rev 1150)
@@ -16,6 +16,7 @@
 #ifndef AG_PROFILER_H 
 #define AG_PROFILER_H 
 
+#include <ag_base.h>
 #include <string> 
 #include <SDL.h>
 

Modified: antargis/branches/rant/ext/basic/init.cc
===================================================================
--- antargis/branches/rant/ext/basic/init.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/basic/init.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -18,5 +18,14 @@
   TRACE;
   if(!hasMain())
     AGMain *main=new AGMain;
+
+
+  // register main in ruby-var
+
+  //  AG_NewPointerObj(result,SWIGTYPE_p_AGMain,0);
+  //  rb_eval_string("include Libantargisbasic;$agMain=getMain");
+
+  //  #error "DO IT!"
+
 }
 

Modified: antargis/branches/rant/ext/game/entity.h
===================================================================
--- antargis/branches/rant/ext/game/entity.h	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/entity.h	2007-07-29 10:13:56 UTC (rev 1150)
@@ -281,5 +281,6 @@
     void loadJob(const Node &pNode);
   };
 
+typedef AntEntity *PAntEntity;
 
 #endif

Modified: antargis/branches/rant/ext/game/headers.hh
===================================================================
--- antargis/branches/rant/ext/game/headers.hh	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/headers.hh	2007-07-29 10:13:56 UTC (rev 1150)
@@ -81,8 +81,10 @@
 #include "ext/game/minimap.h"
 #include "ext/game/map.h"
 #include "ext/game/heuristic.h"
+#include "ext/game/path_weighter.h"
 #include "ext/game/jobs.h"
 #include "ext/game/resource.h"
+#include "ext/game/path_data_v3.h"
 #ifdef SWIG
 %include "ext/game/path.h"
 %include "ext/game/path_v2.h"
@@ -95,7 +97,9 @@
 %include "ext/game/minimap.h"
 %include "ext/game/map.h"
 %include "ext/game/heuristic.h"
+%include "ext/game/path_weighter.h"
 %include "ext/game/jobs.h"
 %include "ext/game/resource.h"
+%include "ext/game/path_data_v3.h"
 #endif
 #endif

Modified: antargis/branches/rant/ext/game/height_map.cc
===================================================================
--- antargis/branches/rant/ext/game/height_map.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/height_map.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -47,7 +47,7 @@
 
 void HeightMap::initTerrainMesh()
 {
-  if(videoInited())
+  if(videoInited() && mScene)
     mTerrain=new Terrain(mScene,*this);
 }
 

Modified: antargis/branches/rant/ext/game/map.h
===================================================================
--- antargis/branches/rant/ext/game/map.h	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/map.h	2007-07-29 10:13:56 UTC (rev 1150)
@@ -73,7 +73,7 @@
 
   AntEntity *getNext(AntEntity *me,const AGString &pType,size_t atLeast=0);
 //  std::vector<AntEntityPtr> getNextList(AntEntity *me,const AGString &pType,size_t atLeast=0);
-  std::vector<AntEntity*> getNextList(AntEntity *me,const AGString &pType,size_t atLeast=0);
+  std::vector<PAntEntity> getNextList(AntEntity *me,const AGString &pType,size_t atLeast=0);
 
   void setHeuristic(HeuristicFunction *pFunction);
 

Modified: antargis/branches/rant/ext/game/path_v2.cc
===================================================================
--- antargis/branches/rant/ext/game/path_v2.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/path_v2.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -1,105 +1,13 @@
 #include "path_v2.h"
 #include <ag_debug.h>
-#include <height_map.h>
-#include <math.h>
 #include <ag_geometry.h>
 #include <set>
 
 
-DistanceComputer::DistanceComputer(HeightMap *pHeightMap,
-				   float pStepX,float pStepY):
-  mHeightMap(pHeightMap),
-  mStepX(pStepX),mStepY(pStepY)
-{
-  assert(mHeightMap);
-}
+#include "path_vector_sort.h"
 
-bool DistanceComputer::isPassable(const AGVector2 &pPoint) const
-{
-  return mHeightMap->getHeight(pPoint[0],pPoint[1])>0;
-}
 
-float DistanceComputer::beginX() const
-{
-  return 0;
-}
-float DistanceComputer::beginY() const
-{
-  return 0;
-}
-float DistanceComputer::stepX() const
-{
-  return mStepX;
-}
-float DistanceComputer::stepY() const
-{
-  return mStepY;
-}
-float DistanceComputer::endX() const
-{
-  return mHeightMap->getW();
-}
-float DistanceComputer::endY() const
-{
-  return mHeightMap->getH();
-}
 
-// FIXME: maybe move this to other class ?
-float DistanceComputer::simpleWeight(const AGVector2 &a,const AGVector2 &b) const
-{
-  float ha=mHeightMap->getHeight(a[0],a[1]);
-  float hb=mHeightMap->getHeight(b[0],b[1]);
-
-  float d=(a-b).length();
-  float hd=ha-hb;
-
-  if(hb>ha) // up hill
-    return sqrt(d*d+hd*hd);
-  return d; // down hill - normal speed
-}
-
-/**
- * compute possible neighbors (w.r.t. to map-borders)
- */
-std::list<AGVector2> DistanceComputer::getNeighbors(const AGVector2 &p) const
-{
-  std::list<AGVector2> diffList,rList;
-  AGVector2 t;
-
-  diffList.push_back(AGVector2(-stepX(),0));
-  diffList.push_back(AGVector2(+stepX(),0));
-  diffList.push_back(AGVector2(0,-stepY()));
-  diffList.push_back(AGVector2(0,+stepY()));
-
-  for(std::list<AGVector2>::iterator i=diffList.begin();i!=diffList.end();i++)
-    {
-      t=*i+p;
-      if(t.getX() >= beginX() &&
-	 t.getX()<=endX() && 
-	 t.getY()>=beginY() && 
-	 t.getY()<=endY())
-	rList.push_back(t);
-    }
-
-  return rList;
-}
-
-std::map<AGVector2,float> DistanceComputer::getAllReachableFrom(const AGVector2 &p) const
-{
-  float w;
-  std::map<AGVector2,float> rList;
-  std::list<AGVector2> nList=getNeighbors(p);
-
-  for(std::list<AGVector2>::iterator i=nList.begin();i!=nList.end();i++)
-    {
-      w=simpleWeight(p,*i);
-      rList.insert(std::make_pair(*i,w));
-    }
-  return rList;
-}
-
-
-
 ///////////////////////////////////////////////////////////////////////////////////
 
 
@@ -220,24 +128,8 @@
 
 
 
-///////////////////////////////////////////////////////////////////////////////////
 
-class DistanceOrder
-{
-public:
-  DistanceOrder(const AGVector2 &pBase):mBase(pBase)
-  {
-  }
-  bool operator()(const AGVector2 &a,const AGVector2 &b) const
-  {
-    return (a-mBase).length2()<(b-mBase).length2();
-  }
-private:
-  AGVector2 mBase;
 
-};
-
-
 /**
  * PathV3Data constructor
  */
@@ -296,6 +188,7 @@
 	{
 	  currentPoint=*growField.begin();
 	  growField.erase(currentPoint);
+	  mVec2Field[currentPoint]=mFields.size();
 
 	  std::map<AGVector2,float> reachable=pCalc.getAllReachableFrom(currentPoint);
 
@@ -324,6 +217,8 @@
 			  growField.insert(i->first);
 			  currentField.insert(i->first);
 			  allValidPointsSet.erase(i->first);
+
+			  mVec2Field[i->first]=mFields.size();
 			}
 		    }
 		}

Modified: antargis/branches/rant/ext/game/path_v2.h
===================================================================
--- antargis/branches/rant/ext/game/path_v2.h	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/path_v2.h	2007-07-29 10:13:56 UTC (rev 1150)
@@ -8,38 +8,8 @@
 
 #include <map>
 
-class HeightMap;
+#include "path_weighter.h"
 
-/**
- * Computes distances from a height field
- */
-class AGEXPORT DistanceComputer
-{
- public:
-  DistanceComputer(HeightMap *pHeightMap,float pStepX=1,float pStepY=1);
-
-  float beginX() const;
-  float beginY() const;
-  float stepX() const;
-  float stepY() const;
-  float endX() const;
-  float endY() const;
-
-  std::map<AGVector2,float> getAllReachableFrom(const AGVector2 &p) const;
-
-  // compute weight for to neighboring points (from a to b)
-  float simpleWeight(const AGVector2 &a,const AGVector2 &b) const;
-
-  bool isPassable(const AGVector2 &pPoint) const;
-
-  std::list<AGVector2> getNeighbors(const AGVector2 &p) const;
-
- private:
-
-  HeightMap *mHeightMap;
-  float mStepX,mStepY;
-};
-
 class AGEXPORT PathV3Data:public AGRubyObject
 {
  public:

Modified: antargis/branches/rant/ext/game/templates.i
===================================================================
--- antargis/branches/rant/ext/game/templates.i	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/game/templates.i	2007-07-29 10:13:56 UTC (rev 1150)
@@ -1,10 +1,10 @@
 %{
-AntEntity *SWIG_RB2AntEntity(VALUE x) {
-	AntEntity *e=0;
+PAntEntity SWIG_RB2AntEntity(VALUE x) {
+	PAntEntity e=0;
 	Data_Get_Struct(x,AntEntity,e);
-	return 0;
+	return e;
 }
-VALUE SWIG_AntEntity2RB(AntEntity*e ) {
+VALUE SWIG_AntEntity2RB(PAntEntity e ) {
 	return AG_NewPointerObj(e,SWIGTYPE_p_AntEntity,0);
 }
 bool SWIG_ANTENTITY_P(VALUE x) {
@@ -16,11 +16,12 @@
 
 namespace std
 {
-	specialize_std_vector(AntEntity,SWIG_ANTENTITY_P,SWIG_RB2AntEntity,SWIG_AntEntity2RB);
-	specialize_std_list(AntEntity,SWIG_ANTENTITY_P,SWIG_RB2AntEntity,SWIG_AntEntity2RB);
+	specialize_std_vector(PAntEntity,SWIG_ANTENTITY_P,SWIG_RB2AntEntity,SWIG_AntEntity2RB);
+	specialize_std_list(PAntEntity,SWIG_ANTENTITY_P,SWIG_RB2AntEntity,SWIG_AntEntity2RB);
 }
 
 
+%template(EntityPVector2) std::vector<PAntEntity>;
 %template(EntityPVector) std::vector<AntEntity*>;
 %template(EntityPList) std::list<AntEntity*>;
 %template(EntityVector) std::vector<AntEntityPtr>;

Modified: antargis/branches/rant/ext/gui/ag_application.cc
===================================================================
--- antargis/branches/rant/ext/gui/ag_application.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/gui/ag_application.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -128,24 +128,24 @@
 	  ;
 	*/
 	clearOldMousePosition();
-	dbout(2,"loop pre-event:"<<loopCount);
+	//	dbout(2,"loop pre-event:"<<loopCount);
 	event=getNewEvent();
 	if(eventOk(event))
 	  {
 	    do
 	      {
-		dbout(2,"eventok  "<<toString(&event));
+		//		dbout(2,"eventok  "<<toString(&event));
 		doEvent(event);
 		if(mIdleCalls)
 		  {
-		    dbout(2,"getNewEvent...  (idlecalls:"<<mIdleCalls<<")");
+		    //		    dbout(2,"getNewEvent...  (idlecalls:"<<mIdleCalls<<")");
 		    event=getNewEvent();
 		  }
 		else
 		  resetEvent(event);
 	      }while(eventOk(event));
 	  } 
-	dbout(2,"loop post-event:"<<loopCount);
+	//	dbout(2,"loop post-event:"<<loopCount);
 	/*
 	if(mIdleCalls) 
 	  {
@@ -201,7 +201,7 @@
       last=now;
 
       loopCount++;
-      dbout(2,"Running:"<<mRunning);
+      //      dbout(2,"Running:"<<mRunning);
     }
   gApplication=0;
 

Modified: antargis/branches/rant/ext/video/ag_fontengine.cc
===================================================================
--- antargis/branches/rant/ext/video/ag_fontengine.cc	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ext/video/ag_fontengine.cc	2007-07-29 10:13:56 UTC (rev 1150)
@@ -24,6 +24,7 @@
 #include "ag_texture.h"
 #include "ag_fs.h"
 #include "ag_sgeexport.h"
+#include "ag_profiler.h"
 
 #include <SDL_ttf.h>
 
@@ -292,6 +293,7 @@
 
   if(fontCache.find(std::make_pair(pFont,pText))==fontCache.end())
     {
+      STACKTRACE;
       SDL_Surface *ns;
       TTF_Font *f=getFont(pFont.getName(),pFont.getSize());
       
@@ -324,30 +326,33 @@
       is->surface=ns;
       AGSurface as(is);
       
-      if(pFont.getBorder()>0 || pFont.getEmbossed())
+      //      if(false)
 	{
-	  int move=3;
-	  AGSurface copy(as.width()+2*move,as.height()+2*move);
-	  copy.blit(as,AGRect2(move,move,as.width(),as.height()),as.getRect(),AGColor(0xFF,0xFF,0xFF,0xFF));
-	  as=copy;
-	  border(as,pFont.getBorderColor());
-	}
-      else
-	{
-	  // simply copy, so there are no more problems on PPC
-	  AGSurface copy(as.width(),as.height());
-	  copy.blit(as,as.getRect(),as.getRect(),AGColor(0xFF,0xFF,0xFF,0xFF));
-	  as=copy;
+	  if(pFont.getBorder()>0 || pFont.getEmbossed())
+	    {
+	      int move=3;
+	      AGSurface copy(as.width()+2*move,as.height()+2*move);
+	      copy.blit(as,AGRect2(move,move,as.width(),as.height()),as.getRect(),AGColor(0xFF,0xFF,0xFF,0xFF));
+	      as=copy;
+	      border(as,pFont.getBorderColor());
+	    }
+	  else
+	    {
+	      // simply copy, so there are no more problems on PPC
+	      AGSurface copy(as.width(),as.height());
+	      copy.blit(as,as.getRect(),as.getRect(),AGColor(0xFF,0xFF,0xFF,0xFF));
+	      as=copy;
+	      
+	    }
 	  
+	  if(pFont.getEmbossed())
+	    {
+	      if(pFont.getInset())
+		embossSurface(as,-1);
+	      else
+		embossSurface(as,1);
+	    }
 	}
-      if(pFont.getEmbossed())
-	{
-	  if(pFont.getInset())
-	    embossSurface(as,-1);
-	  else
-	    embossSurface(as,1);
-	}
-      
       AGTexture *ms=new AGTexture(as);
       ms->setClamp(GL_CLAMP_TO_EDGE,GL_CLAMP_TO_EDGE,GL_CLAMP_TO_EDGE);
 	

Modified: antargis/branches/rant/ruby/ant_tools.rb
===================================================================
--- antargis/branches/rant/ruby/ant_tools.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ruby/ant_tools.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -25,7 +25,7 @@
 	return $meshes[file]
 end
 
-module Libantargis
+module Libantargisbasic
 	class AGVector3
 		def x=(p)
 			setX(p)

Modified: antargis/branches/rant/ruby/entities/ant_hero.rb
===================================================================
--- antargis/branches/rant/ruby/entities/ant_hero.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ruby/entities/ant_hero.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -177,7 +177,7 @@
 		men=men[0..c]
 		men.each{|m|
 			# seek new boss
-			b=getMap.getNextList(m,"house",0).collect{|e|e.get}.select{|e|e.getPlayer==getPlayer}.shuffle[0]
+			b=getMap.getNextList(m,"house",0).collect{|e|puts e,e.class;e.get}.select{|e|e.getPlayer==getPlayer}.shuffle[0]
 			if b
 				m.setBoss(b)
 			else

Modified: antargis/branches/rant/ruby/entities/entities.rb
===================================================================
--- antargis/branches/rant/ruby/entities/entities.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ruby/entities/entities.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -238,6 +238,12 @@
 		super(mesh=AntModels.createModel(t,subtype))
 		return mesh
 	end
+
+
+	# FIXME: remove this - this is a backward-compability function 
+	def get
+		self
+	end
 end
 
 # here comes a list of all the different entity-types BoA currently uses:

Modified: antargis/branches/rant/ruby/map.rb
===================================================================
--- antargis/branches/rant/ruby/map.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ruby/map.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -167,7 +167,7 @@
 	end
 	
 	def getHousesOfVillage(name)
-		getAllEntitiesV.collect{|e|e.get}.select{|e|e.is_a?(AntHouse)}.select{|e|e.village==name}
+		getAllEntities.collect{|e|e.get}.select{|e|e.is_a?(AntHouse)}.select{|e|e.village==name}
 	end
 
 	def getVillages

Modified: antargis/branches/rant/ruby/view.rb
===================================================================
--- antargis/branches/rant/ruby/view.rb	2007-07-22 12:25:34 UTC (rev 1149)
+++ antargis/branches/rant/ruby/view.rb	2007-07-29 10:13:56 UTC (rev 1150)
@@ -171,10 +171,10 @@
 			m=0
 			w=20
 			s=10
-			{AGRect.new(0,m,w,getMain.height-m*2)=>AGVector2.new(-1,0),
-				AGRect.new(m,0,getMain.width-m*2,w)=>AGVector2.new(0,1),
-				AGRect.new(getMain.width-w-1,m,w,getMain.height-m*2)=>AGVector2.new(1,0),
-				AGRect.new(m,getMain.height-w-1,getMain.width-m*2,w)=>AGVector2.new(0,-1)}.each{|r,n|
+			{AGRect.new(0,m,w,getMain.getVideo.height-m*2)=>AGVector2.new(-1,0),
+				AGRect.new(m,0,getMain.getVideo.width-m*2,w)=>AGVector2.new(0,1),
+				AGRect.new(getMain.getVideo.width-w-1,m,w,getMain.getVideo.height-m*2)=>AGVector2.new(1,0),
+				AGRect.new(m,getMain.getVideo.height-w-1,getMain.getVideo.width-m*2,w)=>AGVector2.new(0,-1)}.each{|r,n|
 				if r.contains(p)
 					setCamera(getCamera+n*t*s) # FIXME: Include time
 				end



From davidkamphausen at mail.berlios.de  Sun Jul 29 12:14:20 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 12:14:20 +0200
Subject: [Antargis-svn] r1151 - antargis/branches/rant/ext/game
Message-ID: <200707291014.l6TAEK5n018707@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 12:14:20 +0200 (Sun, 29 Jul 2007)
New Revision: 1151

Added:
   antargis/branches/rant/ext/game/path_data_v3.cc
   antargis/branches/rant/ext/game/path_data_v3.h
   antargis/branches/rant/ext/game/path_v3.h
   antargis/branches/rant/ext/game/path_vector_sort.h
   antargis/branches/rant/ext/game/path_weighter.cc
   antargis/branches/rant/ext/game/path_weighter.h
Log:
* missing files


Added: antargis/branches/rant/ext/game/path_data_v3.cc
===================================================================
--- antargis/branches/rant/ext/game/path_data_v3.cc	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_data_v3.cc	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,160 @@
+#include "path_data_v3.h"
+#include "path_vector_sort.h"
+
+#include <ag_debug.h>
+#include <algorithm>
+
+#include <math.h>
+
+namespace PathFinding
+{
+
+  Field::Field(const AGVector2 &pMiddle,size_t pID):mID(pID),
+						    mMiddle(pMiddle)
+  {
+  }
+
+  void Field::insert(const AGVector2 &v,DistanceComputer &pDist)
+  {
+    mVectors.insert(v);
+    mNeighbors.erase(v);
+    
+    std::list<AGVector2> neighbors=pDist.getNeighbors(v);
+
+    for(std::list<AGVector2>::iterator i=neighbors.begin();i!=neighbors.end();i++)
+      {
+	if(mVectors.find(*i)==mVectors.end())
+	  mNeighbors.insert(*i);
+      }
+
+  }
+
+  bool Field::isNeighbor(const AGVector2 &v) const
+  {
+    return mNeighbors.find(v)!=mNeighbors.end();
+  }
+
+  bool Field::hasVector(const AGVector2 &v) const
+  {
+    return mVectors.find(v)!=mVectors.end();
+  }
+
+  AGVector2 Field::getMiddle() const
+  {
+    return mMiddle;
+  }
+
+
+
+
+
+
+
+  void FieldCollection::assign(const AGVector2 &v,size_t pField,DistanceComputer &pDist)
+  {
+    assert(pField<mFields.size());
+
+    mFields[pField].insert(v,pDist);
+    mVec2Field[v]=pField;
+  }
+
+
+  size_t FieldCollection::newField(const AGVector2 &pMiddle)
+  {
+    size_t id=mFields.size();
+    mFields.push_back(Field(pMiddle,id));
+    return id;
+  }
+
+Field *FieldCollection::getField(size_t pField)
+{
+  return &(mFields[pField]);
+}
+
+  size_t FieldCollection::getFieldId(const AGVector2 &pVector) const
+  {
+    std::map<AGVector2,size_t>::const_iterator i=mVec2Field.find(pVector);
+
+    if(i!=mVec2Field.end())
+      return i->second;
+
+    return  -1;
+  }
+
+  size_t FieldCollection::getFieldCount() const
+  {
+    return mFields.size();
+  }
+
+
+
+
+
+
+
+
+
+
+
+
+  AGVector2 takeRandom(const std::set<AGVector2> &pSet)
+  {
+    assert(pSet.size()>0);
+    int pos=(int)(rand()%pSet.size());
+    std::set<AGVector2>::const_iterator i=pSet.begin();
+    for(;i!=pSet.end() && pos>0;pos--,i++);
+    return *i;
+  }
+
+  void assignFields(FieldCollection &pCollection,DistanceComputer &pDist,size_t pFieldCount)
+  {
+    std::list<AGVector2> allVectorList=pDist.getAllPassable();
+
+    float maxFieldWidth=sqrt(pDist.width()*pDist.height()/pFieldCount);
+
+    std::set<AGVector2> restOfVectors;
+
+    std::copy(allVectorList.begin(),allVectorList.end(),std::inserter(restOfVectors,restOfVectors.begin()));
+
+    while(restOfVectors.size()>0)
+      {
+	AGVector2 fieldMiddle=takeRandom(restOfVectors);
+	DistanceOrder order(fieldMiddle);
+
+	size_t newField=pCollection.newField(fieldMiddle);
+	
+
+	std::set<AGVector2,DistanceOrder> growField(order);
+	std::copy(restOfVectors.begin(),restOfVectors.end(),std::inserter(growField,growField.begin()));
+
+	cdebug("MIDDLE:"<<fieldMiddle);
+	
+	size_t k=0;
+	for(std::set<AGVector2,DistanceOrder>::iterator i=growField.begin();i!=growField.end() && k<30;i++,k++)
+	  {
+	    cdebug(" "<<*i<<"  "<<(*i-fieldMiddle).length());
+	  }
+
+	do
+	  {
+	    AGVector2 current=*growField.begin();
+	    
+	    if((current-fieldMiddle).length()<maxFieldWidth)
+	      {
+		growField.erase(growField.begin());
+		restOfVectors.erase(current);
+		pCollection.assign(current,newField,pDist);
+	      }
+	    else
+	      break;
+	  }while(growField.size()>0);
+      }
+    
+
+
+    cdebug("FIELDS:"<<pCollection.getFieldCount());
+  }
+
+
+
+}

Added: antargis/branches/rant/ext/game/path_data_v3.h
===================================================================
--- antargis/branches/rant/ext/game/path_data_v3.h	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_data_v3.h	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,67 @@
+#ifndef PATH_DATA_V3_H
+#define PATH_DATA_V3_H
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#include <ag_geometry.h>
+
+#include "path_weighter.h"
+
+#include <vector>
+#include <map>
+#include <set>
+
+namespace PathFinding
+{
+
+  class Field
+  {
+  public:
+    Field(const AGVector2 &pMiddle,size_t pID);
+
+    void insert(const AGVector2 &v,DistanceComputer &pDist);
+
+    bool hasVector(const AGVector2 &v) const;
+    bool isNeighbor(const AGVector2 &v) const;
+
+    AGVector2 getMiddle() const;
+
+  private:
+    size_t mID;
+    std::set<AGVector2> mVectors;
+
+    std::set<AGVector2> mNeighbors;
+
+    AGVector2 mMiddle;
+  };
+
+  class FieldCollection
+  {
+  public:
+    void assign(const AGVector2 &v,size_t pField,DistanceComputer &pDist);
+    size_t newField(const AGVector2 &pMiddle);
+
+    Field *getField(size_t pField);
+
+    size_t getFieldId(const AGVector2 &pVector) const;
+
+    size_t getFieldCount() const;
+
+  private:
+    std::vector<Field> mFields;
+    std::map<AGVector2,size_t> mVec2Field;
+  };
+
+
+void assignFields(FieldCollection &pCollection,DistanceComputer &pDist,size_t pFieldCount);
+
+
+  class FieldAssigner
+  {
+  public:
+    
+  };
+}
+
+#endif
+

Added: antargis/branches/rant/ext/game/path_v3.h
===================================================================
--- antargis/branches/rant/ext/game/path_v3.h	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_v3.h	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,7 @@
+#ifndef PATH_V3_H
+#define PATH_V3_H
+
+#include "path_data_v3.h"
+
+
+#endif

Added: antargis/branches/rant/ext/game/path_vector_sort.h
===================================================================
--- antargis/branches/rant/ext/game/path_vector_sort.h	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_vector_sort.h	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,19 @@
+#ifndef PATH_VECTOR_SORT_H
+#define PATH_VECTOR_SORT_H
+
+class DistanceOrder
+{
+public:
+  DistanceOrder(const AGVector2 &pBase):mBase(pBase)
+  {
+  }
+  bool operator()(const AGVector2 &a,const AGVector2 &b) const
+  {
+    return (a-mBase).length2()<(b-mBase).length2();
+  }
+private:
+  AGVector2 mBase;
+
+};
+
+#endif

Added: antargis/branches/rant/ext/game/path_weighter.cc
===================================================================
--- antargis/branches/rant/ext/game/path_weighter.cc	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_weighter.cc	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,125 @@
+#include "path_weighter.h"
+
+#include <ag_debug.h>
+#include "height_map.h"
+#include <math.h>
+
+DistanceComputer::DistanceComputer(HeightMap *pHeightMap,
+				   float pStepX,float pStepY):
+  mHeightMap(pHeightMap),
+  mStepX(pStepX),mStepY(pStepY)
+{
+  assert(mHeightMap);
+}
+
+bool DistanceComputer::isPassable(const AGVector2 &pPoint) const
+{
+  return mHeightMap->getHeight(pPoint[0],pPoint[1])>-0.2;
+}
+
+float DistanceComputer::beginX() const
+{
+  return 0;
+}
+float DistanceComputer::beginY() const
+{
+  return 0;
+}
+float DistanceComputer::stepX() const
+{
+  return mStepX;
+}
+float DistanceComputer::stepY() const
+{
+  return mStepY;
+}
+float DistanceComputer::endX() const
+{
+  return mHeightMap->getW();
+}
+float DistanceComputer::endY() const
+{
+  return mHeightMap->getH();
+}
+
+float DistanceComputer::width() const
+{
+  return endX()-beginX();
+}
+
+float DistanceComputer::height() const
+{
+  return endY()-beginY();
+}
+
+
+// FIXME: maybe move this to other class ?
+float DistanceComputer::simpleWeight(const AGVector2 &a,const AGVector2 &b) const
+{
+  float ha=mHeightMap->getHeight(a[0],a[1]);
+  float hb=mHeightMap->getHeight(b[0],b[1]);
+
+  float d=(a-b).length();
+  float hd=ha-hb;
+
+  if(hb>ha) // up hill
+    return sqrt(d*d+hd*hd);
+  return d; // down hill - normal speed
+}
+
+/**
+ * compute possible neighbors (w.r.t. to map-borders)
+ */
+std::list<AGVector2> DistanceComputer::getNeighbors(const AGVector2 &p) const
+{
+  std::list<AGVector2> diffList,rList;
+  AGVector2 t;
+
+  diffList.push_back(AGVector2(-stepX(),0));
+  diffList.push_back(AGVector2(+stepX(),0));
+  diffList.push_back(AGVector2(0,-stepY()));
+  diffList.push_back(AGVector2(0,+stepY()));
+
+  for(std::list<AGVector2>::iterator i=diffList.begin();i!=diffList.end();i++)
+    {
+      t=*i+p;
+      if(t.getX() >= beginX() &&
+	 t.getX()<=endX() && 
+	 t.getY()>=beginY() && 
+	 t.getY()<=endY())
+	rList.push_back(t);
+    }
+
+  return rList;
+}
+
+std::map<AGVector2,float> DistanceComputer::getAllReachableFrom(const AGVector2 &p) const
+{
+  float w;
+  std::map<AGVector2,float> rList;
+  std::list<AGVector2> nList=getNeighbors(p);
+
+  for(std::list<AGVector2>::iterator i=nList.begin();i!=nList.end();i++)
+    {
+      w=simpleWeight(p,*i);
+      rList.insert(std::make_pair(*i,w));
+    }
+  return rList;
+}
+
+
+std::list<AGVector2> DistanceComputer::getAllPassable() const
+{
+  std::list<AGVector2> l;
+
+  float x,y;
+  AGVector2 v(x,y);
+  for(x=beginX();x<=endX();x+=stepX())
+    for(y=beginY();y<=endY();y+=stepY())
+      {
+	v=AGVector2(x,y);
+	if(isPassable(v))
+	  l.push_back(v);
+      }
+  return l;
+}

Added: antargis/branches/rant/ext/game/path_weighter.h
===================================================================
--- antargis/branches/rant/ext/game/path_weighter.h	2007-07-29 10:13:56 UTC (rev 1150)
+++ antargis/branches/rant/ext/game/path_weighter.h	2007-07-29 10:14:20 UTC (rev 1151)
@@ -0,0 +1,49 @@
+#ifndef PATH_WEIGHTER_H
+#define PATH_WEIGHTER_H
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#include <path_base.h>
+
+#include <map>
+
+class HeightMap;
+
+/**
+ * Computes distances from a height field
+ */
+class AGEXPORT DistanceComputer
+{
+ public:
+  DistanceComputer(HeightMap *pHeightMap,float pStepX=1,float pStepY=1);
+
+  float beginX() const;
+  float beginY() const;
+  float stepX() const;
+  float stepY() const;
+  float endX() const;
+  float endY() const;
+
+  float width() const;
+  float height() const;
+
+  std::map<AGVector2,float> getAllReachableFrom(const AGVector2 &p) const;
+
+  // compute weight for to neighboring points (from a to b)
+  float simpleWeight(const AGVector2 &a,const AGVector2 &b) const;
+
+  bool isPassable(const AGVector2 &pPoint) const;
+
+  std::list<AGVector2> getNeighbors(const AGVector2 &p) const;
+
+
+  std::list<AGVector2> getAllPassable() const;
+
+ private:
+
+  HeightMap *mHeightMap;
+  float mStepX,mStepY;
+};
+
+
+#endif



From davidkamphausen at mail.berlios.de  Sun Jul 29 12:14:51 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 12:14:51 +0200
Subject: [Antargis-svn] r1152 - in antargis/branches/rant/ruby/tests: . path
Message-ID: <200707291014.l6TAEpNL018767@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 12:14:50 +0200 (Sun, 29 Jul 2007)
New Revision: 1152

Added:
   antargis/branches/rant/ruby/tests/path/
   antargis/branches/rant/ruby/tests/path/fields_test.rb
   antargis/branches/rant/ruby/tests/path/fields_test2.rb
Log:
* more missing files


Added: antargis/branches/rant/ruby/tests/path/fields_test.rb
===================================================================
--- antargis/branches/rant/ruby/tests/path/fields_test.rb	2007-07-29 10:14:20 UTC (rev 1151)
+++ antargis/branches/rant/ruby/tests/path/fields_test.rb	2007-07-29 10:14:50 UTC (rev 1152)
@@ -0,0 +1,84 @@
+#!/usr/bin/env ruby
+
+$:.push("ext")
+ENV["PATH"]+="./ext"
+
+require 'antargisgame.so'
+
+include Antargisgame
+include Antargisgui
+include Antargisvideo
+include Antargismath
+include Antargisbasic
+
+getMain.getVideo.initVideo(640,480,32,false,false)
+
+w=16
+h=16
+
+heightMap=HeightMap.new(nil,w,h)
+
+(0..w).each{|x|
+	(0..h).each{|y|
+		heightMap.set(x,y,rand)
+	}
+}
+
+
+heightMap=AntMap.new(nil,64,64)
+heightMap.loadMap("data/levels/birth/birth2.antlvl")
+
+
+w=heightMap.getW
+h=heightMap.getH
+
+puts "W:#{w} H:#{h}"
+#exit
+
+distComputer=DistanceComputer.new(heightMap,1)
+
+pathData=PathV3Data.new(8)
+
+pathData.compute(distComputer)
+
+fsize=4
+
+image=AGSurface.new(w*fsize,h*fsize)
+
+def getColor(i)
+	j=i%8
+	j+=1
+	#puts "J:#{j}"
+	AGColor.new((j % 2)*255, ((j /2)%2)*255, (j / 4).to_i*255) #*(255.0-(i*2)/255.0)
+end
+
+
+(0..(w-1)).each{|x|
+	(0..(h-1)).each{|y|
+		fieldnum=pathData.getField(AGVector2.new(x,y))
+		if fieldnum<20000
+			puts "field:#{fieldnum}"
+			color=getColor(fieldnum)
+			puts "COLOR:#{color}"
+			(0..(fsize-1)).each{|dx|
+				(0..(fsize-1)).each{|dy|
+					image.putPixel(x*fsize+dx,y*fsize+dy,color)
+				}
+			}
+		end
+	}
+}
+
+
+#texture=AGTexture.new(image)
+
+app=AGApplication.new
+imageW=AGImage.new(nil,AGRect2.new(0,0,w*fsize,h*fsize),image,false)
+#imageW.setSurface(image)
+app.setMainWidget(imageW)
+app.run
+
+#getScreen.blit(texture,AGRect2.new(0,0,w*fsize,h*fsize),AGRect2.new(0,0,w*fsize,h*fsize))
+#getScreen.flip
+
+#getMain.delay(20000)

Added: antargis/branches/rant/ruby/tests/path/fields_test2.rb
===================================================================
--- antargis/branches/rant/ruby/tests/path/fields_test2.rb	2007-07-29 10:14:20 UTC (rev 1151)
+++ antargis/branches/rant/ruby/tests/path/fields_test2.rb	2007-07-29 10:14:50 UTC (rev 1152)
@@ -0,0 +1,92 @@
+#!/usr/bin/env ruby
+
+$:.push("ext")
+ENV["PATH"]+="./ext"
+
+require 'antargisgame.so'
+
+include Antargisgame
+include Antargisgui
+include Antargisvideo
+include Antargismath
+include Antargisbasic
+
+getMain.getVideo.initVideo(640,480,32,false,false)
+
+w=16
+h=16
+
+heightMap=HeightMap.new(nil,w,h)
+
+(0..w).each{|x|
+	(0..h).each{|y|
+		heightMap.set(x,y,rand)
+	}
+}
+
+
+heightMap=AntMap.new(nil,64,64)
+heightMap.loadMap("data/levels/birth/birth2.antlvl")
+
+
+w=heightMap.getW
+h=heightMap.getH
+
+puts "W:#{w} H:#{h}"
+#exit
+
+distComputer=DistanceComputer.new(heightMap,1)
+
+fieldCollection=FieldCollection.new
+
+assignFields(fieldCollection,distComputer,32)
+
+# puts "ok"
+# exit
+
+# pathData=PathV3Data.new(8)
+# 
+# pathData.compute(distComputer)
+
+fsize=4
+
+image=AGSurface.new(w*fsize,h*fsize)
+
+def getColor(i)
+	j=i%8
+	j+=1
+	#puts "J:#{j}"
+	AGColor.new((j % 2)*255, ((j /2)%2)*255, (j / 4).to_i*255) #*(255.0-(i*2)/255.0)
+end
+
+
+(0..(w-1)).each{|x|
+	(0..(h-1)).each{|y|
+		#fieldnum=pathData.getField(AGVector2.new(x,y))
+		fieldnum=fieldCollection.getFieldId(AGVector2.new(x,y))
+		if fieldnum<20000
+			#puts "field:#{fieldnum}"
+			color=getColor(fieldnum)
+			#puts "COLOR:#{color}"
+			(0..(fsize-1)).each{|dx|
+				(0..(fsize-1)).each{|dy|
+					image.putPixel(x*fsize+dx,y*fsize+dy,color)
+				}
+			}
+		end
+	}
+}
+
+
+#texture=AGTexture.new(image)
+
+app=AGApplication.new
+imageW=AGImage.new(nil,AGRect2.new(0,0,w*fsize,h*fsize),image,false)
+#imageW.setSurface(image)
+app.setMainWidget(imageW)
+app.run
+
+#getScreen.blit(texture,AGRect2.new(0,0,w*fsize,h*fsize),AGRect2.new(0,0,w*fsize,h*fsize))
+#getScreen.flip
+
+#getMain.delay(20000)



From davidkamphausen at mail.berlios.de  Sun Jul 29 15:15:32 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 15:15:32 +0200
Subject: [Antargis-svn] r1153 - in antargis/branches/rant: . ext/3dengine
	ext/basic ext/game ext/gui ext/math ext/sound ext/video
Message-ID: <200707291315.l6TDFW8B012597@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 15:15:31 +0200 (Sun, 29 Jul 2007)
New Revision: 1153

Removed:
   antargis/branches/rant/ext/math/ag_geometry.cc
   antargis/branches/rant/ext/math/ag_geometry.h
Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/ext/3dengine/headers.hh
   antargis/branches/rant/ext/basic/ag_geometry.h
   antargis/branches/rant/ext/basic/headers.hh
   antargis/branches/rant/ext/game/headers.hh
   antargis/branches/rant/ext/game/path_data_v3.h
   antargis/branches/rant/ext/gui/headers.hh
   antargis/branches/rant/ext/math/headers.hh
   antargis/branches/rant/ext/sound/headers.hh
   antargis/branches/rant/ext/video/headers.hh
Log:
* changes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/Rantfile	2007-07-29 13:15:31 UTC (rev 1153)
@@ -99,17 +99,18 @@
 			extlibs << d                                                           # gather external libraries (-lz)
 		else
 			extlibs+=["ext/lib"+makeLibName(d)+".so"]             # gather internal deps like (ext/libantargisbasic.so)
-            #tsources+=["-l"+makeLibName(d)]
 		end
 	}
 	task target => tsources do |t|
 		# build command
-		sources=t.prerequisites
+		sources=t.prerequisites
+        
 		if ENV['WINDIR']
-				#puts "EXTLIBS #{extlibs}"
-				extlibs+=sources.select{|f|f=~/\.so/}.collect!{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
+                extlibs=extlibs.collect{|s|s.gsub(/.*lib(.*)\.so/,'-l\1')}
+                
+                
 				#puts "SOURCES #{sources}"
-				#puts "EXTLIBS #{extlibs}"
+				#puts "EXTLIBS #{extlibs}"
 				sources=sources.select{|f|not f=~/\.so/}
 		end
 		cmd=makeCommand("LINK_SHARED",sys.expand_path(U2W(t.name)), (sources.collect{|f|sys.expand_path(f)}+extlibs).join(" "))
@@ -139,7 +140,11 @@
 	tsources+=[dir+"/"+libname+"swig.cc"]
 	tsources.collect!{|f|f.sub_ext("oo")}
 	#tsources+=["ext/lib"+makeLibName(dir)+".so"]
-	extlibs=[] #["-l"+makeLibName(dir)]
+	extlibs=[] #["-l"+makeLibName(dir)]
+    
+    if isWindows
+	    extlibs+=["-l"+makeLibName(dir)]
+    end
     
 	dep.each{|d|
 		if d[0..0]!="-" and d!="ext/external"
@@ -151,7 +156,9 @@
 				extlibs+=["ext/lib"+makeLibName(dir)+".so"]
 			end
 		end
-	}
+	}
+    
+    puts "EXTLIBS:#{extlibs}"
     #tsources+=rubyLib
     
     #puts "TARGET:",target
@@ -196,10 +203,18 @@
 	dir=getDirUnix(target)
     #puts "TARGET:#{target} DIR:#{dir}"
 	name=makeLibName(dir)
-	[target.sub(name+"swig.cc","interface.i")]+sys["build/*.i"]+importsForInterface(target).split(":") 
+	a=[target.sub(name+"swig.cc","interface.i")]+sys["build/*.i"]+importsForInterface(target).split(":") 
+    puts "A: #{a}"
+    puts "name: #{name}"
+    puts "dir: #{dir}"
+    puts "target: #{target}"
+    a
 }
 
-gen Rule, /^.*swig.(cc|h)$/ => swigSrc do |t|
+gen Rule, /^.*swig.(cc|h)$/ => swigSrc do |t|
+
+    puts "SOURCE #{t.source} #{t.name}"
+
 	cmd=makeCommand("SWIG_CALL",sys.expand_path(t.name),"-DAGEXPORT -Ibuild -I#{sys.expand_path(getDir(t.name))} #{var :INCLUDESTR} #{sys.expand_path(t.source)}".gsub("/",Dir.separator))
 	sys cmd
 	puts
@@ -239,7 +254,7 @@
 ###########################################
 # make swig-sources
 #
-task :swigSources =>sourceDirs.select{|d|not d=~/external/}.collect{|d|d+Dir.separator+makeLibName(d)+"swig.cc"} do
+task :swigSources =>sourceDirs.select{|d|not d=~/external/}.collect{|d|d+"/"+makeLibName(d)+"swig.cc"} do
 end
 #
 ###########################################

Modified: antargis/branches/rant/ext/3dengine/headers.hh
===================================================================
--- antargis/branches/rant/ext/3dengine/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/3dengine/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,61 +1,60 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_painter.h"
-#include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/anim_mesh_data.h"
-#include "ext/3dengine/mesh.h"
-#include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/ant_camera.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/ant_projection.h"
-#ifdef SWIG
-%include "ext/3dengine/mesh_data.h"
-%include "ext/3dengine/scene_base.h"
-%include "ext/3dengine/scenenode.h"
-%include "ext/3dengine/mesh_2d_data.h"
-%include "ext/3dengine/anim_mesh_data.h"
-%include "ext/3dengine/mesh.h"
-%include "ext/3dengine/mesh_2d.h"
-%include "ext/3dengine/ant_particle.h"
-%include "ext/3dengine/scene.h"
-%include "ext/3dengine/anim_mesh.h"
-%include "ext/3dengine/ant_camera.h"
-%include "ext/3dengine/mesh_optimizer.h"
-%include "ext/3dengine/ant_projection.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/ant_projection.h"
+#ifdef SWIG
+%include "ext/3dengine/mesh_data.h"
+%include "ext/3dengine/scene_base.h"
+%include "ext/3dengine/scenenode.h"
+%include "ext/3dengine/mesh_2d_data.h"
+%include "ext/3dengine/anim_mesh_data.h"
+%include "ext/3dengine/mesh.h"
+%include "ext/3dengine/mesh_2d.h"
+%include "ext/3dengine/ant_particle.h"
+%include "ext/3dengine/scene.h"
+%include "ext/3dengine/anim_mesh.h"
+%include "ext/3dengine/ant_camera.h"
+%include "ext/3dengine/mesh_optimizer.h"
+%include "ext/3dengine/ant_projection.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/basic/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/basic/ag_geometry.h	2007-07-29 13:15:31 UTC (rev 1153)
@@ -53,7 +53,7 @@
 
 /** \brief Simple structure holding an angle in degrees
  */
-struct AGAngle
+struct AGEXPORT AGAngle
 {
   float angle;
   
@@ -696,11 +696,11 @@
   bool mValid;
 };
 
-std::ostream &operator<<(std::ostream &o,const AGVector2&v);
-std::ostream &operator<<(std::ostream &o,const AGVector3&v);
-std::ostream &operator<<(std::ostream &o,const AGVector4&v);
-std::ostream &operator<<(std::ostream &o,const AGRect2&v);
-std::ostream &operator<<(std::ostream &o,const AGBox3&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector2&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector3&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGVector4&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGRect2&v);
+AGEXPORT std::ostream &operator<<(std::ostream &o,const AGBox3&v);
 
 #include "ag_geometry_inline.cc"
 

Modified: antargis/branches/rant/ext/basic/headers.hh
===================================================================
--- antargis/branches/rant/ext/basic/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/basic/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,34 +1,34 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_utf8.h"
-#ifdef SWIG
-%include "ext/basic/ag_rubyobj.h"
-%include "ext/basic/ag_messageobject.h"
-%include "ext/basic/ag_singleton.h"
-%include "ext/basic/ag_rand_base.h"
-%include "ext/basic/ag_main.h"
-%include "ext/basic/ag_video_base.h"
-%include "ext/basic/ag_geometry.h"
-%include "ext/basic/ag_serial.h"
-%include "ext/basic/ag_config.h"
-%include "ext/basic/ag_xml.h"
-%include "ext/basic/ag_string_utf8.h"
-%include "ext/basic/ag_stringstream.h"
-%include "ext/basic/ag_fs.h"
-%include "ext/basic/ag_utf8.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_utf8.h"
+#ifdef SWIG
+%include "ext/basic/ag_rubyobj.h"
+%include "ext/basic/ag_messageobject.h"
+%include "ext/basic/ag_singleton.h"
+%include "ext/basic/ag_rand_base.h"
+%include "ext/basic/ag_main.h"
+%include "ext/basic/ag_video_base.h"
+%include "ext/basic/ag_geometry.h"
+%include "ext/basic/ag_serial.h"
+%include "ext/basic/ag_config.h"
+%include "ext/basic/ag_xml.h"
+%include "ext/basic/ag_string_utf8.h"
+%include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_fs.h"
+%include "ext/basic/ag_utf8.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/game/headers.hh
===================================================================
--- antargis/branches/rant/ext/game/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/game/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,105 +1,104 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_painter.h"
-#include "ext/gui/ag_image.h"
-#include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
-#include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
-#include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
-#include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
-#include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
-#include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/ant_camera.h"
-#include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/mesh.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/anim_mesh_data.h"
-#include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/ant_particle.h"
-#include "ext/game/path.h"
-#include "ext/game/path_v2.h"
-#include "ext/game/path_base.h"
-#include "ext/game/terrain.h"
-#include "ext/game/entity.h"
-#include "ext/game/water.h"
-#include "ext/game/height_map.h"
-#include "ext/game/ant_app.h"
-#include "ext/game/minimap.h"
-#include "ext/game/map.h"
-#include "ext/game/heuristic.h"
-#include "ext/game/path_weighter.h"
-#include "ext/game/jobs.h"
-#include "ext/game/resource.h"
-#include "ext/game/path_data_v3.h"
-#ifdef SWIG
-%include "ext/game/path.h"
-%include "ext/game/path_v2.h"
-%include "ext/game/path_base.h"
-%include "ext/game/terrain.h"
-%include "ext/game/entity.h"
-%include "ext/game/water.h"
-%include "ext/game/height_map.h"
-%include "ext/game/ant_app.h"
-%include "ext/game/minimap.h"
-%include "ext/game/map.h"
-%include "ext/game/heuristic.h"
-%include "ext/game/path_weighter.h"
-%include "ext/game/jobs.h"
-%include "ext/game/resource.h"
-%include "ext/game/path_data_v3.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_local.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_window.h"
+#include "ext/3dengine/anim_mesh.h"
+#include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/scene_base.h"
+#include "ext/game/path.h"
+#include "ext/game/path_v2.h"
+#include "ext/game/path_base.h"
+#include "ext/game/terrain.h"
+#include "ext/game/entity.h"
+#include "ext/game/water.h"
+#include "ext/game/height_map.h"
+#include "ext/game/ant_app.h"
+#include "ext/game/minimap.h"
+#include "ext/game/map.h"
+#include "ext/game/heuristic.h"
+#include "ext/game/path_weighter.h"
+#include "ext/game/jobs.h"
+#include "ext/game/resource.h"
+#include "ext/game/path_data_v3.h"
+#ifdef SWIG
+%include "ext/game/path.h"
+%include "ext/game/path_v2.h"
+%include "ext/game/path_base.h"
+%include "ext/game/terrain.h"
+%include "ext/game/entity.h"
+%include "ext/game/water.h"
+%include "ext/game/height_map.h"
+%include "ext/game/ant_app.h"
+%include "ext/game/minimap.h"
+%include "ext/game/map.h"
+%include "ext/game/heuristic.h"
+%include "ext/game/path_weighter.h"
+%include "ext/game/jobs.h"
+%include "ext/game/resource.h"
+%include "ext/game/path_data_v3.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/game/path_data_v3.h
===================================================================
--- antargis/branches/rant/ext/game/path_data_v3.h	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/game/path_data_v3.h	2007-07-29 13:15:31 UTC (rev 1153)
@@ -14,7 +14,7 @@
 namespace PathFinding
 {
 
-  class Field
+  class AGEXPORT Field
   {
   public:
     Field(const AGVector2 &pMiddle,size_t pID);
@@ -35,7 +35,7 @@
     AGVector2 mMiddle;
   };
 
-  class FieldCollection
+  class AGEXPORT FieldCollection
   {
   public:
     void assign(const AGVector2 &v,size_t pField,DistanceComputer &pDist);
@@ -53,10 +53,10 @@
   };
 
 
-void assignFields(FieldCollection &pCollection,DistanceComputer &pDist,size_t pFieldCount);
+AGEXPORT void assignFields(FieldCollection &pCollection,DistanceComputer &pDist,size_t pFieldCount);
 
 
-  class FieldAssigner
+  class AGEXPORT FieldAssigner
   {
   public:
     

Modified: antargis/branches/rant/ext/gui/headers.hh
===================================================================
--- antargis/branches/rant/ext/gui/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/gui/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,89 +1,88 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_color.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_painter.h"
-#include "ext/gui/ag_layoutfactory.h"
-#include "ext/gui/ag_widget.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_image.h"
-#include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_text.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_scroller.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_window.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_menuitem.h"
-#include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_local.h"
-#ifdef SWIG
-%include "ext/gui/ag_layoutfactory.h"
-%include "ext/gui/ag_widget.h"
-%include "ext/gui/ag_application.h"
-%include "ext/gui/ag_table.h"
-%include "ext/gui/ag_layout.h"
-%include "ext/gui/ag_colorbutton.h"
-%include "ext/gui/ag_image.h"
-%include "ext/gui/ag_screenwidget.h"
-%include "ext/gui/ag_listbox.h"
-%include "ext/gui/ag_frame.h"
-%include "ext/gui/ag_text.h"
-%include "ext/gui/ag_button.h"
-%include "ext/gui/ag_edit.h"
-%include "ext/gui/ag_radiogroup.h"
-%include "ext/gui/ag_scroller.h"
-%include "ext/gui/ag_tooltip.h"
-%include "ext/gui/ag_combo.h"
-%include "ext/gui/ag_menu.h"
-%include "ext/gui/ag_caption.h"
-%include "ext/gui/ag_window.h"
-%include "ext/gui/ag_checkbox.h"
-%include "ext/gui/ag_menuitem.h"
-%include "ext/gui/ag_radio.h"
-%include "ext/gui/ag_theme.h"
-%include "ext/gui/ag_border.h"
-%include "ext/gui/ag_background.h"
-%include "ext/gui/ag_local.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_table.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_image.h"
+#include "ext/gui/ag_screenwidget.h"
+#include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_window.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_theme.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_local.h"
+#ifdef SWIG
+%include "ext/gui/ag_layoutfactory.h"
+%include "ext/gui/ag_widget.h"
+%include "ext/gui/ag_application.h"
+%include "ext/gui/ag_table.h"
+%include "ext/gui/ag_layout.h"
+%include "ext/gui/ag_colorbutton.h"
+%include "ext/gui/ag_image.h"
+%include "ext/gui/ag_screenwidget.h"
+%include "ext/gui/ag_listbox.h"
+%include "ext/gui/ag_frame.h"
+%include "ext/gui/ag_text.h"
+%include "ext/gui/ag_button.h"
+%include "ext/gui/ag_edit.h"
+%include "ext/gui/ag_radiogroup.h"
+%include "ext/gui/ag_scroller.h"
+%include "ext/gui/ag_tooltip.h"
+%include "ext/gui/ag_combo.h"
+%include "ext/gui/ag_menu.h"
+%include "ext/gui/ag_caption.h"
+%include "ext/gui/ag_window.h"
+%include "ext/gui/ag_checkbox.h"
+%include "ext/gui/ag_menuitem.h"
+%include "ext/gui/ag_radio.h"
+%include "ext/gui/ag_theme.h"
+%include "ext/gui/ag_border.h"
+%include "ext/gui/ag_background.h"
+%include "ext/gui/ag_local.h"
+#endif
+#endif

Deleted: antargis/branches/rant/ext/math/ag_geometry.cc
===================================================================
--- antargis/branches/rant/ext/math/ag_geometry.cc	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/math/ag_geometry.cc	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,2597 +0,0 @@
-/*
- * Copyright (c) 2005 by David Kamphausen. All rights reserved.
- *
- * ag_triangle.cc
- * by David Kamphausen (david.kamphausen at web.de)
- *
- * The "Antargis" project, including all files needed to compile it,
- * is free software; you can redistribute it and/or use it and/or modify it
- * under the terms of the GNU General Public License as published
- * by the Free Software Foundation; either version 2 of the License,
- * or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
- *
- * You should have received a copy of the GNU General Public
- * License along with this program.
- */
-
-#include <ag_geometry.h>
-#include <ag_tools.h>
-#include <ag_debug.h>
-#include <assert.h>
-#include <cmath>
-#include <map>
-#include <list>
-#include <ag_tools.h>
-#include <ag_xml.h>
-#include <ag_debug.h>
-#include <ag_stringstream.h>
-#include <ag_gauss.h>
-
-#include <ruby.h>
-
-#define MAXF 100000.0f
-
-AGVector2 invalidVec2;
-
-bool collide1d(float a1,float a2,float b1,float b2, bool normal=true)
-{
-  float amin=std::min(a1,a2);
-  float amax=std::max(a1,a2);
-  float bmin=std::min(b1,b2);
-  float bmax=std::max(b1,b2);
-
-  if(normal && (amax==bmin || bmax==amin))
-    return false;
-
-  return (amin>=bmin && amin<=bmax) || (amax>=bmin && amax<=bmax) || (bmin>=amin && bmin<=amax) || (bmax>=amin && bmax<=amin);
-}
-
-struct AGSweepResult
-{
-  enum CollisionState { COL_AT, COL_ALWAYS, COL_NEVER };
-  CollisionState state;
-  float t0;
-  float t1;
-
-  AGSweepResult()
-  {
-    state=COL_ALWAYS;
-  }
-
-  void combine(const AGSweepResult &r)
-  {
-    if(state==COL_AT)
-      {
-	if(r.state==COL_NEVER)
-	  state=COL_NEVER;
-	else if(r.state!=COL_ALWAYS) // ALWAYS has no effect
-	  {
-	    t0=std::max(t0,r.t0);
-	    t1=std::min(t1,r.t1);
-	  }
-      }
-    else if(state==COL_ALWAYS)
-      {
-	if(r.state==COL_NEVER)
-	  state=COL_NEVER;
-	else if(r.state!=COL_ALWAYS) // ALWAYS has no effect
-	  {
-	    state=COL_AT;
-	    t0=r.t0;
-	    t1=r.t1;
-	  }
-	
-      }
-    // COL_NEVER cannot be changed
-  }
-
-  bool collision(float delta) const
-  {
-    return state==COL_ALWAYS || (state==COL_AT && t1>0 && t0<delta);
-  }
-
-  float begin(float delta) const
-  {
-    if(state==COL_ALWAYS || state==COL_NEVER)
-      return MAXF;
-
-    if(t0>=0.0f && t0<delta)
-      return t0;
-    else
-      return MAXF;
-  }
-
-  bool always() const
-  {
-    return state == COL_ALWAYS;
-  }
-};
-
-AGSweepResult collide1d(float pa1,float pa2,float pb1,float pb2,float v)
-{
-  float a1=std::min(pa1,pa2);
-  float a2=std::max(pa1,pa2);
-  float b1=std::min(pb1,pb2);
-  float b2=std::max(pb1,pb2);
-  AGSweepResult r;
-
-  if(v>0)
-    {
-      r.t0=(b1-a2)/v;
-      r.t1=(b2-a1)/v;
-      r.state = AGSweepResult::COL_AT;
-
-      assert(r.t0 <= r.t1);
-    }
-  else if(v<0)
-    {
-      r.t0=(b2-a1)/v;
-      r.t1=(b1-a2)/v;
-      r.state = AGSweepResult::COL_AT;
-
-      assert(r.t0 <= r.t1);
-    }
-  else
-    {
-      if (a2 < b1 || a1 > b2)
-        r.state = AGSweepResult::COL_NEVER;
-      else
-        r.state = AGSweepResult::COL_ALWAYS;
-    }
-  return r;
-}
-
-/////////////////////////////////////////////////////////////////////////////
-// AGAngle
-/////////////////////////////////////////////////////////////////////////////
-
-AGAngle::AGAngle(float p):angle(p)
-{
-}
-
-/////////////////////////////////////////////////////////////////////////////
-// AGVector2
-/////////////////////////////////////////////////////////////////////////////
-
-AGVector2::AGVector2(const AGString &s)
-{
-  assert(s.length()>=5);
-  assert(s[0]=='(');
-  assert(s[s.length()-1]==')');
-  AGString p=s.substr(1,s.length()-2);
-  size_t i=p.find(",");
-  assert(i!=p.npos);
-  v[0]=p.substr(0,i).toFloat();
-  v[1]=p.substr(i+1,p.length()-i-1).toFloat();
-}
-
-
-AGVector2::AGVector2(float pX,float pY)
-{
-  v[0]=pX;
-  v[1]=pY;
-}
-AGVector2::AGVector2(const AGVector2 &a)
-{
-  v[0]=a.v[0];
-  v[1]=a.v[1];
-}
-AGVector2::AGVector2(const AGAngle &a)
-{
-  v[0]=sin(a.angle);
-  v[1]=-cos(a.angle);
-}
-
-AGVector2::AGVector2()
-{
-  v[0]=v[1]=0;
-}
-
-void AGVector2::saveXML(Node &node) const
-{
-  node.set("x",AGString(v[0]));
-  node.set("y",AGString(v[1]));
-}
-void AGVector2::loadXML(const Node &node)
-{
-  v[0]=node.get("x").toFloat();
-  v[1]=node.get("y").toFloat();
-}
-
-bool AGVector2::operator<(const AGVector2 &p) const
-{
-  return v[0]<p.v[0] || (v[0]==p.v[0] && v[1]<p.v[1]);
-}
-
-
-AGVector2 AGVector2::operator-() const
-{
-  return AGVector2(-v[0],-v[1]);
-}
-
-
-float getArcInternal(float x,float y)
-{
-  if(y==0.0)
-    {
-      if(x<0.0)
-	return -M_PI/2.0;
-      else
-	return M_PI/2.0;
-    }
-  else if(y<0.0)
-    {
-      float a=M_PI+atan(x/y);
-      if(a>M_PI)
-	a-=M_PI*2.0;
-      return a;
-    }
-  else
-    return atan(x/y);
-}
-
-
-AGAngle AGVector2::getAngle() const
-{
-  return AGAngle(getArcInternal(v[0],v[1]));
-}
-
-
-bool AGVector2::operator==(const AGVector2 &a) const
-{
-  return v[0]==a.v[0] && v[1]==a.v[1];// && v[2]==a.v[2];
-}
-bool AGVector2::operator!=(const AGVector2 &a) const
-{
-  return !operator==(a);
-}
-
-AGString AGVector2::toString() const
-{
-  std::ostringstream os;
-  os<<"("<<v[0]<<","<<v[1]<<")";
-  return AGString(os.str());
-}
-
-float AGVector2::length2() const
-{
-  return v[0]*v[0]+v[1]*v[1];
-}
-
-AGVector2 AGVector2::dim2() const
-{
-  return *this;
-}
-
-
-bool AGVector2::nonZero() const
-{
-  return length2()!=0.0f;
-}
-
-AGVector2 AGVector2::normal() const
-{
-  return AGVector2(-v[1],v[0]);
-}
-
-void AGVector2::setX(float pX)
-{
-  v[0]=pX;
-}
-void AGVector2::setY(float pY)
-{
-  v[1]=pY;
-}
-
-float AGVector2::getX() const
-{
-  return v[0];
-}
-float AGVector2::getY() const
-{
-  return v[1];
-}
-
-(AGVector2::operator float*)()
-{
-  return v;
-}
-(AGVector2::operator const float*)() const
-{
-  return v;
-}
-
-AGVector2 AGVector2::operator-(const AGVector2 &p) const
-{
-  return AGVector2(v[0]-p.v[0],v[1]-p.v[1]);
-}
-AGVector2 AGVector2::operator+(const AGVector2 &p) const
-{
-  return AGVector2(v[0]+p.v[0],v[1]+p.v[1]);
-}
-AGVector2 &AGVector2::operator+=(const AGVector2 &p)
-{
-  v[0]+=p.v[0];
-  v[1]+=p.v[1];
-  return *this;
-}
-AGVector2 &AGVector2::operator-=(const AGVector2 &p)
-{
-  v[0]-=p.v[0];
-  v[1]-=p.v[1];
-  return *this;
-}
-
-float AGVector2::operator*(const AGVector2 &p) const
-{
-  return v[0]*p.v[0]+v[1]*p.v[1];
-}
-AGVector2 &AGVector2::operator*=(float f)
-{
-  v[0]*=f;
-  v[1]*=f;
-  return *this;
-}
-AGVector2 &AGVector2::operator/=(float f)
-{
-  v[0]/=f;
-  v[1]/=f;
-  return *this;
-}
-AGVector2 AGVector2::operator*(float f) const
-{
-  return AGVector2(v[0]*f,v[1]*f);
-}
-AGVector2 AGVector2::operator/(float f) const
-{
-  f=1.0/f;
-  return AGVector2(v[0]*f,v[1]*f);
-}
-
-float AGVector2::length() const
-{
-  return sqrt(v[0]*v[0]+v[1]*v[1]);
-}
-
-AGVector2 AGVector2::normalized() const
-{
-  if(length2()!=0.0f)
-    return *this/length();
-  else
-    return *this;
-}
-void AGVector2::normalize()
-{
-  if(length2()!=0.0f)
-    operator/=(length());
-}
-
-float AGVector2::operator[](int index) const
-{
-  assert(index>=0 && index<2);
-  return v[index];
-}
-float &AGVector2::operator[](int index)
-{
-  assert(index>=0 && index<2);
-  return v[index];
-}
-
-
-/////////////////////////////////////////////////////////////////////////////
-// AGVector3
-/////////////////////////////////////////////////////////////////////////////
-
-AGVector3::AGVector3(const AGVector2 &p,float h)
-{
-  v[0]=p[0];
-  v[1]=p[1];
-  v[2]=h;
-}
-
-AGVector3::AGVector3(float pX,float pY,float pZ)
-{
-  v[0]=pX;
-  v[1]=pY;
-  v[2]=pZ;
-}
-AGVector3::AGVector3(const AGVector3 &a)
-{
-  v[0]=a.v[0];
-  v[1]=a.v[1];
-  v[2]=a.v[2];
-}
-AGVector3::AGVector3(const AGAngle &a)
-{
-  v[0]=sin(a.angle);
-  v[1]=-cos(a.angle);
-  v[2]=0.0f;
-}
-
-AGVector3::AGVector3()
-{
-  v[0]=v[1]=0;
-  v[2]=0.0f;
-}
-
-AGVector2 AGVector3::dim2() const
-{
-  return AGVector2(v[0],v[1]);
-}
-
-
-AGVector3 AGVector3::operator-() const
-{
-  return AGVector3(-v[0],-v[1],-v[2]);
-}
-
-
-void AGVector3::saveXML(Node &node) const
-{
-  node.set("x",AGString(v[0]));
-  node.set("y",AGString(v[1]));
-  node.set("z",AGString(v[2]));
-}
-void AGVector3::loadXML(const Node &node)
-{
-  v[0]=node.get("x").toFloat();
-  v[1]=node.get("y").toFloat();
-  v[2]=node.get("z").toFloat();
-}
-
-
-
-
-/*
-float getArcInternal(float x,float y)
-{
-  if(y==0.0)
-    {
-      if(x<0.0)
-	return -M_PI/2.0;
-      else
-	return M_PI/2.0;
-    }
-  else if(y<0.0)
-    {
-      float a=M_PI+atan(x/y);
-      if(a>M_PI)
-	a-=M_PI*2.0;
-      return a;
-    }
-  else
-    return atan(x/y);
-}
-*/
-
-AGAngle AGVector3::getAngle() const
-{
-  return AGAngle(getArcInternal(v[0],v[1]));
-}
-
-
-bool AGVector3::operator==(const AGVector3 &a) const
-{
-  float m=std::max(v[0],std::max(v[1],v[2]));
-  
-  m*=0.0001;
-  return fabs(v[0]-a.v[0])<m && fabs(v[1]-a.v[1])<m && fabs(v[2]-a.v[2])<m;
-}
-bool AGVector3::operator!=(const AGVector3 &a) const
-{
-  return !operator==(a);
-}
-
-AGString AGVector3::toString() const
-{
-  std::ostringstream os;
-  os<<"("<<v[0]<<","<<v[1]<<","<<v[2]<<")";
-  return AGString(os.str());
-}
-
-float AGVector3::length2() const
-{
-  return v[0]*v[0]+v[1]*v[1]+v[2]*v[2];
-}
-
-
-bool AGVector3::nonZero() const
-{
-  return length2()!=0.0f;
-}
-
-AGVector3 AGVector3::normal() const
-{
-  return AGVector3(-v[1],v[0],v[2]);
-}
-
-void AGVector3::setX(float pX)
-{
-  v[0]=pX;
-}
-void AGVector3::setY(float pY)
-{
-  v[1]=pY;
-}
-void AGVector3::setZ(float pZ)
-{
-  v[2]=pZ;
-}
-
-float AGVector3::getX() const
-{
-  return v[0];
-}
-float AGVector3::getY() const
-{
-  return v[1];
-}
-
-float AGVector3::getZ() const
-{
-  return v[2];
-}
-
-(AGVector3::operator float*)()
-{
-  return v;
-}
-AGVector3 AGVector3::operator%(const AGVector3 &a) const
-{
-  return AGVector3(v[1] * a.v[2] - v[2] * a.v[1],
-		   v[2] * a.v[0] - v[0] * a.v[2],
-		   v[0] * a.v[1] - v[1] * a.v[0]);
-}
-
-
-AGVector3 AGVector3::operator-(const AGVector3 &p) const
-{
-  return AGVector3(v[0]-p.v[0],v[1]-p.v[1],v[2]-p.v[2]);
-}
-AGVector3 AGVector3::operator+(const AGVector3 &p) const
-{
-  return AGVector3(v[0]+p.v[0],v[1]+p.v[1],v[2]+p.v[2]);
-}
-AGVector3 &AGVector3::operator+=(const AGVector3 &p)
-{
-  v[0]+=p.v[0];
-  v[1]+=p.v[1];
-  v[2]+=p.v[2];
-  return *this;
-}
-AGVector3 &AGVector3::operator-=(const AGVector3 &p)
-{
-  v[0]+=p.v[0];
-  v[1]+=p.v[1];
-  v[2]+=p.v[2];
-  return *this;
-}
-
-AGVector3 &AGVector3::operator*=(float f)
-{
-  v[0]*=f;
-  v[1]*=f;
-  v[2]*=f;
-  return *this;
-}
-AGVector3 &AGVector3::operator/=(float f)
-{
-  v[0]/=f;
-  v[1]/=f;
-  v[2]/=f;
-  return *this;
-}
-AGVector3 AGVector3::operator*(float f) const
-{
-  return AGVector3(v[0]*f,v[1]*f,v[2]*f);
-}
-AGVector3 AGVector3::operator/(float f) const
-{
-  f=1.0/f;
-  return AGVector3(v[0]*f,v[1]*f,v[2]*f);
-}
-
-float AGVector3::length() const
-{
-  return sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);
-}
-
-AGVector3 AGVector3::normalized() const
-{
-  if(length2()!=0.0f)
-    return *this/length();
-  else
-    return *this;
-}
-void AGVector3::normalize()
-{
-  if(length2()!=0.0f)
-    operator/=(length());
-}
-
-float AGVector3::operator[](int index) const
-{
-  assert(index>=0 && index<3);
-  return v[index];
-}
-float &AGVector3::operator[](int index)
-{
-  assert(index>=0 && index<3);
-  return v[index];
-}
-
-
-////////////////////////////////////////////////////////////////////////////
-// AGMatrix
-/////////////////////////////////////////////////////////////////////////////
-
-AGMatrix3::AGMatrix3()
-{
-  a[0][1]=a[0][2]=
-    a[1][0]=a[1][2]=
-    a[2][0]=a[2][1]=0.0f;
-
-  a[0][0]=a[1][1]=a[2][2]=1.0f;
-}
-
-AGMatrix3::AGMatrix3(const AGAngle &n)
-{
-  a[0][0]=cos(n.angle);
-  a[1][0]=sin(n.angle);
-  a[0][1]=-sin(n.angle);
-  a[1][1]=cos(n.angle);
-  a[2][0]=a[2][1]=a[0][2]=a[1][2]=0.0f;
-  a[2][2]=1.0f;
-}
-
-AGMatrix3::AGMatrix3(const AGVector3 &n)
-{
-  a[0][0]=a[1][1]=a[2][2]=1.0f;
-  a[0][1]=a[0][2]=
-    a[1][0]=a[1][2]=
-    a[2][0]=a[2][1]=0.0f;
-  a[2][0]=n[0];
-  a[2][1]=n[1];
-}
-
-AGMatrix3::AGMatrix3(float x,float y)
-{
-  a[0][0]=x;
-  a[1][1]=y;
-  a[2][2]=1.0f;
-  a[0][1]=a[0][2]=
-    a[1][0]=a[1][2]=
-    a[2][0]=a[2][1]=0.0f;
-  a[2][0]=0.0f;
-  a[2][1]=0.0f;
-  
-}
-
-AGMatrix3 AGMatrix3::transposed() const
-{
-  AGMatrix3 a;
-  for(size_t x=0;x<3;x++)
-    for(size_t y=0;y<3;y++)
-      a.set(x,y,get(y,x));
-  return a;
-}
-
-
-AGMatrix3 AGMatrix3::inverted() const
-{
-  // gauss-alg.
-  AGMatrix3 a;
-  AGMatrix3 b(*this);
-
-  gauss(a,b,3);
-  return a;
-}
-
-void AGMatrix3::swapRows(size_t a,size_t b)
-{
-  if(a==b)
-    return;
-  assert(a<3);
-  assert(b<3);
-  for(size_t x=0;x<3;x++)
-    {
-      float t=get(x,a);
-      set(x,a,get(x,b));
-      set(x,b,t);
-    }
-}
-
-void AGMatrix3::swapCols(size_t a,size_t b)
-{
-  if(a==b)
-    return;
-  assert(a<3);
-  assert(b<3);
-  for(size_t y=0;y<3;y++)
-    {
-      float t=get(a,y);
-      set(a,y,get(b,y));
-      set(b,y,t);
-    }
-}
-
-
-void AGMatrix3::set(size_t x,size_t y,float f)
-{
-  assert(x>=0 && x<3);
-  assert(y>=0 && y<3);
-  a[x][y]=f;
-}
-float AGMatrix3::get(size_t x,size_t y) const
-{
-  assert(x>=0 && x<3);
-  assert(y>=0 && y<3);
-  return a[x][y];
-}
-
-float &AGMatrix3::get(size_t x,size_t y)
-{
-  assert(x>=0 && x<3);
-  assert(y>=0 && y<3);
-  return a[x][y];
-}
-
-AGMatrix3::Row AGMatrix3::operator[](size_t y)
-{
-  Row r;
-  r.matrix=this;
-  r.y=y;
-  return r;
-}
-const AGMatrix3::Row AGMatrix3::operator[](size_t y) const
-{
-  Row r;
-  r.matrix=const_cast<AGMatrix3*>(this);
-  r.y=y;
-  return r;
-}
-
-AGMatrix3 AGMatrix3::operator-() const
-{
-  AGMatrix3 n;
-  for(size_t x=0;x<3;x++)
-    for(size_t y=0;y<3;y++)
-      n[x][y]=-(*this)[x][y];
-  return n;
-}
-
-
-
-AGMatrix3 AGMatrix3::operator*(const AGMatrix3 &m) const
-{
-  AGMatrix3 n;
-  size_t x,y;
-  for(x=0;x<3;x++)
-    for(y=0;y<3;y++)
-      n.a[x][y]=a[0][y]*m.a[x][0]+
-	a[1][y]*m.a[x][1]+
-	a[2][y]*m.a[x][2];
-  return n;
-}
-AGMatrix3 &AGMatrix3::operator*=(const AGMatrix3 &m)
-{
-  *this=(*this)*m;
-  return *this;
-}
-
-AGVector3 AGMatrix3::operator*(const AGVector3 &v) const
-{
-  return AGVector3(a[0][0]*v[0]+a[1][0]*v[1]+a[2][0]*v[2],
-		   a[0][1]*v[0]+a[1][1]*v[1]+a[2][1]*v[2],
-		   a[0][2]*v[0]+a[1][2]*v[1]+a[2][2]*v[2]);
-}
-
-AGString AGMatrix3::toString() const
-{
-  std::ostringstream os;
-  os<<"("<<a[0][0]<<","<<a[1][0]<<","<<a[2][0]<<")"<<std::endl;
-  os<<"("<<a[0][1]<<","<<a[1][1]<<","<<a[2][1]<<")"<<std::endl;
-  os<<"("<<a[0][2]<<","<<a[1][2]<<","<<a[2][2]<<")"<<std::endl;
-  return AGString(os.str());
-}
-
-/////////////////////////////////////////////////////////////////////////////
-// AGTriangle2
-/////////////////////////////////////////////////////////////////////////////
-
-AGTriangle2::AGTriangle2(const AGVector2 &v0,const AGVector2 &v1,const AGVector2 &v2)
-{
-  p[0]=v0;
-  p[1]=v1;
-  p[2]=v2;
-}
-
-AGRect2 AGTriangle2::getBBox() const
-{
-  float minx=std::min(p[0].getX(),std::min(p[1].getX(),p[2].getX()));
-  float maxx=std::max(p[0].getX(),std::max(p[1].getX(),p[2].getX()));
-  float miny=std::min(p[0].getY(),std::min(p[1].getY(),p[2].getY()));
-  float maxy=std::max(p[0].getY(),std::max(p[1].getY(),p[2].getY()));
-
-  return AGRect2(minx,miny,maxx-minx,maxy-miny);
-}
-
-
-void AGTriangle2::apply(const AGMatrix3 &m)
-{
-  p[0]=(m*AGVector3(p[0],1)).dim2();
-  p[1]=(m*AGVector3(p[1],1)).dim2();
-  p[2]=(m*AGVector3(p[2],1)).dim2();
-}
-
-/* FIXME: this will be some sweep-base collision detection,
-   HOWEVER there's the angular-velocity still missing :-(
-
-AGCollisionData AGTriangle2::collide(const AGTriangle2 &t,const AGVector &v0,const AGVector &v1) const
-{
-  AGCollisionData data;
-
-  AGVector v=v1-v0;
-
-  float t0,t1;
-
-  std::vector<AGVector> v=getNormals();
-  append(v,t.getNormals());
-  std::vector<AGVector>::iterator i=v.begin();
-  for(;i!=v.end();i++)
-    {
-      float min1,min2,max1,max2;
-      size_t j;
-      for(j=0;j<3;j++)
-	{
-	  if(j==0)
-	    {
-	      min1=max1=(*i)*p[j];
-	      min2=max2=(*i)*t.p[j];
-	    }
-	  else
-	    {
-	      float v0=(*i)*p[j];
-	      float v1=(*i)*t.p[j];
-	      min1=std::min(min1,v0);
-	      max1=std::max(max1,v0);
-	      min2=std::min(min2,v1);
-	      max2=std::max(max2,v1);
-	    }
-	}
-      
-      float a1=
-    }
-}
-*/
-
-std::vector<AGVector2> AGTriangle2::collisionPoints(const AGLine2 &l) const
-{
-  std::vector<AGVector2> ps;
-  std::vector<AGLine2> lines=getLines();
-  std::vector<AGLine2>::iterator i=lines.begin();
-  AGVector2 p;
-  //  cdebug(toString());
-  for(;i!=lines.end();i++)
-    {
-      p=i->collisionPoint(l);
-      if(p!=invalidVec2)
-	ps.push_back(p);
-    }
-  return ps;
-}
-
-AGTriangle2 AGTriangle2::applied(const AGMatrix3 &m) const
-{
-  return AGTriangle2((m*AGVector3(p[0],1)).dim2(),
-		     (m*AGVector3(p[1],1)).dim2(),
-		     (m*AGVector3(p[2],1)).dim2());
-}
-
-AGString AGTriangle2::toString() const
-{
-  std::ostringstream os;
-  os<<"["<<p[0].toString()<<" "<<p[1].toString()<<" "<<p[2].toString()<<"]";
-  return AGString(os.str());
-}
-
-AGVector2 AGTriangle2::get(int index) const
-{
-  return p[index];
-}
-
-
-AGVector2 AGTriangle2::operator[](int index) const
-{
-  return p[index];
-}
-
-bool AGTriangle2::collide(const AGTriangle2 &t) const
-{
-  std::vector<AGVector2> v=getNormals();
-  append(v,t.getNormals());
-  std::vector<AGVector2>::iterator i=v.begin();
-
-  for(;i!=v.end();i++)
-    {
-      float min1,min2,max1,max2;
-      size_t j;
-      for(j=0;j<3;j++)
-	{
-	  if(j==0)
-	    {
-	      min1=max1=(*i)*p[j];
-	      min2=max2=(*i)*t.p[j];
-	    }
-	  else
-	    {
-	      float v0=(*i)*p[j];
-	      float v1=(*i)*t.p[j];
-	      min1=std::min(min1,v0);
-	      max1=std::max(max1,v0);
-	      min2=std::min(min2,v1);
-	      max2=std::max(max2,v1);
-	    }
-	}
-      if(!collide1d(min1,max1,min2,max2))
-	return false;
-    }
-  return true;
-}
-
-std::vector<AGVector2> AGTriangle2::getNormals() const
-{
-  std::vector<AGVector2> l;
-  l.push_back((p[1]-p[0]).normalized().normal());
-  l.push_back((p[2]-p[1]).normalized().normal());
-  l.push_back((p[0]-p[2]).normalized().normal());
-  return l;
-}
-
-std::vector<AGLine2> AGTriangle2::getLines() const
-{
-  std::vector<AGLine2> v;
-  v.push_back(AGLine2(p[0],p[1]));
-  v.push_back(AGLine2(p[1],p[2]));
-  v.push_back(AGLine2(p[2],p[0]));
-  return v;
-}
-
-bool AGTriangle2::contains(const AGVector2 &pp) const
-{
-  std::vector<AGVector2> l=getNormals(); // BEWARE: dont' change the order in getNormals!!!
-
-  if(AGsign((pp-p[0])*l[0])==AGsign((p[2]-p[0])*l[0]))
-    if(AGsign((pp-p[1])*l[1])==AGsign((p[0]-p[1])*l[1]))
-      if(AGsign((pp-p[2])*l[2])==AGsign((p[1]-p[2])*l[2]))
-	return true;
-  return false;
-}
-
-
-AGVector2 AGTriangle2::touchPoint(const AGTriangle2 &t) const
-{
-  // assume that one point of a triangle is contained in the other and return this point
-  size_t i;
-  for(i=0;i<3;i++)
-    {
-      if(contains(t[i]))
-	return t[i];
-      else if(t.contains((*this)[i]))
-	return (*this)[i];
-    }
-  return invalidVec2;
-}
-
-AGVector2 AGTriangle2::touchVector(const AGTriangle2 &t) const
-{
-  //#ifdef OLD_TOUCH_APPROXIMATION
-  // try to get line, which has two intersections with other triangle's lines
-
-  std::vector<AGLine2> l0=getLines();
-  std::vector<AGLine2> l1=t.getLines();
-
-  std::vector<AGLine2>::iterator i,j;
-
-  std::map<AGLine2*,int> sum;
-
-  for(i=l0.begin();i!=l0.end();i++)
-    for(j=l1.begin();j!=l1.end();j++)
-      {
-	if(i->collide(*j))
-	  {
-	    sum[&(*i)]++;
-	    sum[&(*j)]++;
-	  }
-      }
-  std::map<AGLine2*,int>::iterator k=sum.begin();
-  for(;k!=sum.end();k++)
-    {
-      if(k->second==2)
-	return k->first->normal();
-    }
-
-  // FIXME: not found - find other approximation
-
-  //#else
-  {
-  size_t i;
-  for(i=0;i<3;i++)
-    {
-      if(contains(t[i]))
-	return nearestLine(t[i]).normal();
-      else if(t.contains((*this)[i]))
-	return t.nearestLine((*this)[i]).normal();
-    }
-  return invalidVec2;
-  }
-  //#endif
-}
-
-AGLine2 AGTriangle2::nearestLine(const AGVector2 &v) const
-{
-  std::vector<AGLine2> l=getLines();
-  std::vector<AGLine2>::iterator i;
-  std::map<float,AGLine2> dist;
-  for(i=l.begin();i!=l.end();i++)
-    {
-      dist[i->distance(v)]=*i;
-      //      cdebug(i->distance(v)<<i->toString());
-    }
-  return dist.begin()->second;
-}
-
-/////////////////////////////////////////////////////////////////////////////
-// AGCircle2
-/////////////////////////////////////////////////////////////////////////////
-
-AGCircle2::AGCircle2(const AGVector3 &v,float rad):p(v),radius(rad)
-{
-}
-
-bool AGCircle2::inCircle(const AGVector3 &v) const
-{
-  return (v-p).length2()<radius*radius;
-}
-bool AGCircle2::outCircle(const AGVector3 &v) const
-{
-  return (v-p).length2()>radius*radius;
-}
-
-bool AGCircle2::inCircle(const AGTriangle2 &t) const
-{
-  return inCircle(t.get(0)) && inCircle(t.get(1)) && inCircle(t.get(2));
-}
-bool AGCircle2::outCircle(const AGTriangle2 &t) const
-{
-  return outCircle(t.get(0)) && outCircle(t.get(1)) && outCircle(t.get(2));
-}
-
-AGVector3 AGCircle2::getPos() const
-{
-  return p;
-}
-float AGCircle2::getRadius() const
-{
-  return radius;
-}
-
-
-
-/////////////////////////////////////////////////////////////////////////////
-// AGTriangle3
-/////////////////////////////////////////////////////////////////////////////
-AGTriangle3::AGTriangle3(const AGVector3 &v0,const AGVector3 &v1,const AGVector3 &v2)
-{
-  p[0]=v0;
-  p[1]=v1;
-  p[2]=v2;
-}
-
-AGVector4 AGTriangle3::collide(const AGLine3 &pLine) const
-{
-  AGVector3 normal=(p[1]-p[0])%(p[2]-p[0]);
-  AGVector4 mfalse(0,0,0,0);
-  if(normal.length2()==0)
-    return mfalse; // bad triangle
-  normal.normalize();
-  float v0=(pLine.getV0()-p[0])*normal;
-  float v1=(pLine.getV1()-p[0])*normal;
-  float vall=v0-v1;
-  float v=v0/vall;
-
-  if(v<0 || v>1)
-    return mfalse; // line doesn't intersect triangle's plane
-
-  AGVector3 ip=pLine.getV1()*v+pLine.getV0()*(1-v);
-
-  assert(fabs((ip-p[0])*normal)<0.00001);
-  // check if point is on triangle (already checked that point is in plane)
-  AGVector3 n0=(p[2]-p[1])%normal;
-  AGVector3 n1=(p[2]-p[0])%normal;
-  AGVector3 n2=(p[0]-p[1])%normal;
-  n0.normalize();
-  n1.normalize();
-  n2.normalize();
-
-  if(n0==n1 || n0==n2 || n1==n2)
-    return mfalse;
-
-  assert(fabs(n0*normal)<0.0001);
-  assert(fabs(n1*normal)<0.0001);
-  assert(fabs(n2*normal)<0.0001);
-
-  assert(fabs((p[2]-p[1])*n0)<0.0001);
-  assert(fabs((p[2]-p[0])*n1)<0.0001);
-  assert(fabs((p[0]-p[1])*n2)<0.0001);
-
-  if(AGsign((p[0]-p[1])*n0)!=AGsign((ip-p[1])*n0))
-    return mfalse;
-  if(AGsign((p[1]-p[2])*n1)!=AGsign((ip-p[2])*n1))
-    return mfalse;
-  if(AGsign((p[2]-p[1])*n2)!=AGsign((ip-p[1])*n2))
-    return mfalse;
-
-
-  return AGVector4(ip,1);
-}
-
-
-AGString AGTriangle3::toString() const
-{
-  std::ostringstream os;
-  os<<"["<<p[0].toString()<<";"<<p[1].toString()<<";"<<p[2].toString()<<"]";
-  return AGString(os.str());
-}
-
-AGVector3 AGTriangle3::operator[](int index) const
-{
-  assert(index>=0);
-  assert(index<3);
-  return p[index];
-}
-
-
-/////////////////////////////////////////////////////////////////////////////
-// AGRect2F
-/////////////////////////////////////////////////////////////////////////////
-
-AGRect2::AGRect2(const SDL_Rect &r)
-{
-  v0=AGVector2(r.x,r.y);
-  v1=AGVector2(r.x+r.w,r.y+r.h);
-}
-
-
-AGRect2::AGRect2(const AGString &ps)
-{
-  std::istringstream is;
-  char c;
-  float x,y,w,h;
-  is.str(ps);
-  is>>c;
-  is>>x;
-  is>>c;
-  is>>y;
-  is>>c;
-  is>>w;
-  is>>c;
-  is>>h;
-  is>>c;
-  v0=AGVector2(x,y);
-  v1=AGVector2(x+w,y+h);
-}
-
-
-AGRect2::AGRect2()
-{
-}
-
-AGRect2::AGRect2(const AGVector2 &pv0,const AGVector2 &pv1):
-  v0(pv0),v1(pv1)
-{
-}
-
-AGRect2::AGRect2(float x,float y,float w,float h):
-  v0(x,y),v1(x+w,y+h)
-{
-}
-
-AGRect2 AGRect2::alignGrid() const
-{
-  return AGRect2((int)x(),
-		 (int)y(),
-		 (int)w(),
-		 (int)h());
-}
-
-
-void AGRect2::check() const
-{
-  float mx0=std::min(x0(),x1());
-  float my0=std::min(y0(),y1());
-  float mx1=std::max(x0(),x1());
-  float my1=std::max(y0(),y1());
-
-  AGRect2 *p=const_cast<AGRect2*>(this);
-  p->v0[0]=mx0;
-  p->v0[1]=my0;
-  p->v1[0]=mx1;
-  p->v1[1]=my1;
-}
-
-AGRect2& AGRect2::operator+=(const AGRect2 &r)
-{
-  if(width()==0 || height()==0)
-    *this=r;
-  else
-    {
-      include(r[0]);
-      include(r[1]);
-    }
-  return *this;
-}
-
-
-
-AGRect2 AGRect2::intersect(const AGRect2 &r) const
-{
-  check();
-  r.check();
-
-  float mx0=std::max(x0(),r.x0());
-  float my0=std::max(y0(),r.y0());
-  float mx1=std::min(x1(),r.x1());
-  float my1=std::min(y1(),r.y1());
-
-  if(mx0>mx1)
-    mx0=mx1;
-  if(my0>my1)
-    my0=my1;
-
-  return AGRect2(AGVector2(mx0,my0),
-		 AGVector2(mx1,my1));
-}
-
-std::vector<AGRect2> AGRect2::difference(const AGRect2 &r) const
-{
-  std::vector<AGRect2> l;
-  for(int i=0;i<3;i++)
-    for(int j=0;j<3;j++)
-      {
-	
-	float nx,ny,nw,nh;
-	
-	switch(i)
-	  {
-	  case 0:
-	    nx=x0();
-	    nw=r.x0()-x0();
-	    break;
-	  case 1:
-	    nx=r.x0();
-	    nw=r.x1()-r.x0();
-	    break;
-	  case 2:
-	    nx=r.x1();
-	    nw=x1()-r.x1();
-	    break;
-	  };
-	switch(j)
-	  {
-	  case 0:
-	    ny=y0();
-	    nh=r.y0()-y0();
-	    break;
-	  case 1:
-	    ny=r.y0();
-	    nh=r.y1()-r.y0();
-	    break;
-	  case 2:
-	    ny=r.y1();
-	    nh=y1()-r.y1();
-	    break;
-	  };
-	if(nw>0 && nh>0)
-	  {
-	    AGRect2 n=intersect(AGRect2(nx,ny,nw,nh));
-	    if(n.w()>0 && n.h()>0)
-	      if(!r.contains(n))
-		l.push_back(n);
-	  }
-      }
-  return l;
-}
-
-
-
-AGVector2 AGRect2::operator[](size_t i) const
-{
-  switch(i)
-    {
-    case 0:
-      return v0;
-    case 1:
-      return v1;
-    default:
-      throw AGString("invalid index in AGRect2::operator[]");
-    }
-  return v0;
-}
-AGVector2 &AGRect2::operator[](size_t i)
-{
-  switch(i)
-    {
-    case 0:
-      return v0;
-    case 1:
-      return v1;
-    default:
-      throw AGString("invalid index in AGRect2::operator[]");
-    }
-  return v0;
-}
-
-AGRect2 AGRect2::shrink(float f) const
-{
-  AGVector2 d(f,f);
-  return AGRect2(v0+d,v1-d);
-}
-
-AGRect2 AGRect2::grow(float f) const
-{
-  AGVector2 d(f,f);
-  return AGRect2(v0-d,v1+d);
-}
-
-
-bool AGRect2::operator==(const AGRect2 &r) const
-{
-  return v0==r.v0 && v1==r.v1;
-}
-bool AGRect2::operator!=(const AGRect2 &r) const
-{
-  return v0!=r.v0 || v1!=r.v1;
-}
-
-
-
-SDL_Rect AGRect2::sdl() const
-{
-  SDL_Rect r;
-  r.x=int(v0[0]);
-  r.y=int(v0[1]);
-  r.w=int(v1[0]-v0[0]+0.1); // prevent shitty rounding error !
-  r.h=int(v1[1]-v0[1]+0.1);
-
-  return r;
-}
-
-float AGRect2::setWidth(float w)
-{
-  v1[0]=v0[0]+w;
-  return w;
-}
-float AGRect2::setHeight(float h)
-{
-  v1[1]=v0[1]+h;
-  return h;
-}
-
-float AGRect2::x0() const
-{
-  return v0[0];
-}
-float AGRect2::y0() const
-{
-  return v0[1];
-}
-float AGRect2::x1() const
-{
-  return v1[0];
-}
-float AGRect2::y1() const
-{
-  return v1[1];
-}
-
-AGRect2 AGRect2::origin() const
-{
-  return AGRect2(0,0,w(),h());
-}
-
-float AGRect2::content() const
-{
-  return (v1[0]-v0[0])*(v1[1]-v0[1]);
-}
-
-
-void AGRect2::include(const AGVector2 &v)
-{
-  v0[0]=std::min(v0[0],v[0]);
-  v0[1]=std::min(v0[1],v[1]);
-  v1[0]=std::max(v1[0],v[0]);
-  v1[1]=std::max(v1[1],v[1]);
-}
-
-
-std::list<AGRect2> AGRect2::split() const
-{
-  std::list<AGRect2> l;
-  float hw=(v1[0]-v0[0])/2;
-  float hh=(v1[1]-v0[1])/2;
-  l.push_back(AGRect2(v0[0]   ,v0[1]   ,hw,hh));
-  l.push_back(AGRect2(v0[0]+hw,v0[1]   ,hw,hh));
-  l.push_back(AGRect2(v0[0]   ,v0[1]+hh,hw,hh));
-  l.push_back(AGRect2(v0[0]+hw,v0[1]+hh,hw,hh));
-
-  return l;
-}
-
-
-bool AGRect2::contains(const AGRect2 &v) const
-{
-  return contains(v.getV0()) && contains(v.getV1()) && contains(v.getV01()) && contains(v.getV10());
-}
-AGVector2 AGRect2::getV0() const
-{
-  return v0;
-}
-AGVector2 AGRect2::getV1() const
-{
-  return v1;
-}
-AGVector2 AGRect2::getV01() const
-{
-  return AGVector2(v0[0],v1[1]);
-}
-AGVector2 AGRect2::getV10() const
-{
-  return AGVector2(v1[0],v0[1]);
-}
-
-
-bool AGRect2::contains(const AGVector2 &v) const
-{
-  return (v.getX()>= v0.getX() && v.getY()>=v0.getY() && v.getX()<=v1.getX() && v.getY()<=v1.getY());
-}
-
-AGString AGRect2::toString() const
-{
-  return v0.toString()+":"+v1.toString();
-}
-
-
-void AGRect2::setX(float p)
-{
-  float mw=w();
-  v0.setX(p);
-  v1.setX(p+mw);
-}
-void AGRect2::setY(float p)
-{
-  float mh=h();
-  v0.setY(p);
-  v1.setY(p+mh);
-}
-
-void AGRect2::setLeft(float p)
-{
-  float mw=w();
-  v0.setX(p);
-  v1.setX(p+mw);
-}
-void AGRect2::setTop(float p)
-{
-  float mh=h();
-  v0.setY(p);
-  v1.setY(p+mh);
-}
-
-void AGRect2::setRight(float p)
-{
-  v1.setX(p);
-}
-void AGRect2::setBottom(float p)
-{
-  v1.setY(p);
-}
-
-
-
-bool AGRect2::collide(const AGRect2 &r) const
-{
-  return collide1d(v0.getX(),v1.getX(),r.v0.getX(),r.v1.getX()) && collide1d(v0.getY(),v1.getY(),r.v0.getY(),r.v1.getY());
-}
-
-AGRect2 AGRect2::operator+(const AGVector2 &v) const
-{
-  return AGRect2(v0+v,v1+v);
-}
-AGRect2 &AGRect2::operator+=(const AGVector2 &v)
-{
-  v0+=v;
-  v1+=v;
-  return *this;
-}
-
-AGRect2 &AGRect2::operator-=(const AGVector2 &v)
-{
-  v0-=v;
-  v1-=v;
-  return *this;
-}
-
-float AGRect2::x() const
-{
-  return v0.getX();
-}
-float AGRect2::y() const
-{
-  return v0.getY();
-}
-float AGRect2::w() const
-{
-  return v1.getX()-v0.getX();
-}
-float AGRect2::h() const
-{
-  return v1.getY()-v0.getY();
-}
-
-float AGRect2::width() const
-{
-  return v1.getX()-v0.getX();
-}
-float AGRect2::height() const
-{
-  return v1.getY()-v0.getY();
-}
-
-
-/////////////////////////////////////////////////////////////////////////////
-// AGLine
-/////////////////////////////////////////////////////////////////////////////
-
-AGLine2::AGLine2()
-{
-}
-
-AGLine2::AGLine2(const AGVector2 &pv0,const AGVector2 &pv1):
-  v0(pv0),v1(pv1)
-{
-}
-
-AGVector2 &AGLine2::operator[](size_t i)
-{
-  switch(i)
-    {
-    case 0:
-      return v0;
-    case 1:
-      return v1;
-    default:
-      throw AGString("wrong index in AGLine::op[]");
-    }
-  return v0;
-}
-AGVector2 AGLine2::operator[](size_t i) const
-{
-  switch(i)
-    {
-    case 0:
-      return v0;
-    case 1:
-      return v1;
-    default:
-      throw AGString("wrong index in AGLine::op[]");
-    }
-  return v0;
-}
-
-  
-AGVector2 AGLine2::getV0() const
-{
-  return v0;
-}
-AGVector2 AGLine2::getV1() const
-{
-  return v1;
-}
-
-bool AGLine2::has(const AGVector2 &v) const
-{
-  return v0==v || v1==v;
-}
-
-AGVector2 AGLine2::collisionPointNI(const AGLine2 &l) const
-{
-  float dx, dy;
-  float ldx, ldy;
-  dx = v1.getX() - v0.getX();
-  dy = v1.getY() - v0.getY();
-  ldx = l.v1.getX() - l.v0.getX();
-  ldy = l.v1.getY() - l.v0.getY();
-
-  AGVector2 p;
-  
-  if(dx==0.0f)
-    {
-      if(ldx==0.0f)
-	return invalidVec2; // invalid
-      
-      // ldy!=0 !!
-      float lm = ldy/ldx;
-      float lb = l.v0.getY() - lm * l.v0.getX();
-
-      //      cdebug(lm);
-      //      cdebug(lb);
-      
-      assert(lm!=0.0f);
-      p=AGVector2(v0.getX(),lm*v0.getX()+lb);
-    }
-  else if(ldx==0.0f)
-    {
-      p=l.collisionPointNI(*this);
-    }
-  else
-    {
-      // ldy!=0 && dy!=0
-      float m =dy/dx;
-      float lm =ldy/ldx;
-      float b = v0.getY() - m * v0.getX();
-      float lb=l.v0.getY() - lm * l.v0.getX();
-
-      if(m == lm)
-	return AGVector2(0,0); // parallel
-      float x=(lb-b)/(m-lm); 
-      p=AGVector2(x,m*x+b);
-    }
-  return p;
-}
-AGVector2 AGLine2::collisionPoint(const AGLine2 &l) const
-{
-  AGVector2 p=collisionPointNI(l);
-  if(p==invalidVec2)
-    return p;
-  // check for inclusion
-  if(includes(p) && l.includes(p))
-    {
-    assert(distance(p)<0.01);
-    assert(l.distance(p)<0.01);
-    return p;
-  }
-  else
-    return invalidVec2;
-}
-
-bool AGLine2::includes(const AGVector2 &v) const
-{
-  float f=(v-v0)*((v1-v0).normalized());
-  if(f>=0 && f<(v1-v0).length())
-  {
-    /*    cdebug(v0.toString()<<"  "<<v1.toString()<<"  "<<v.toString());
-    cdebug((v-v0).toString()<<"   "<<(v1-v0).toString()<<"   "<<(v1-v0).normalized().toString()<<"   "<<(v1-v0).length());
-    cdebug(f);*/
-    return true;
-  }
-  return false;
-}
-
-AGRect2 AGLine2::getBBox() const
-{
-  return AGRect2(std::min(v0.getX(),v1.getX()),std::min(v0.getY(),v1.getY()),fabs(v0.getX()-v1.getX()),fabs(v1.getY()-v0.getY()));
-}
-
-bool AGLine2::collide(const AGLine2 &l) const
-{
-  AGVector2 d0,d1;
-  AGVector2 n0,n1;
-
-  d0=direction();
-  d1=l.direction();
-  n0=normal();
-  n1=l.normal();
-  
-  bool t0=collide1d(v0*d0,v1*d0,l.v0*d0,l.v1*d0,false);
-  bool t1=collide1d(v0*d1,v1*d1,l.v0*d1,l.v1*d1,false);
-
-  bool t2=collide1d(v0*n0,v1*n0,l.v0*n0,l.v1*n0,false);
-  bool t3=collide1d(v0*n1,v1*n1,l.v0*n1,l.v1*n1,false);
-
-  return t0 && t1 && t2 && t3;
-}
-
-AGVector2 AGLine2::normal() const
-{
-  return (v1-v0).normalized().normal();
-}
-
-AGVector2 AGLine2::direction() const
-{
-  return v1-v0;
-}
-
-
-
-AGString AGLine2::toString() const
-{
-  std::ostringstream os;
-  os<<"("<<v0.toString()<<"-"<<v1.toString()<<")";
-  return AGString(os.str());
-}
-
-float AGLine2::distance(const AGVector2 &v) const
-{
-  return fabs(normal()*(v-v0));
-}
-
-
-/////////////////////////////////////////////////////////////////////////////
-// AGLine3
-/////////////////////////////////////////////////////////////////////////////
-
-AGLine3::AGLine3()
-{
-}
-
-AGLine3::AGLine3(const AGVector3 &pv0,const AGVector3 &pv1):
-  v0(pv0),v1(pv1)
-{
-}
-
-float AGLine3::distance(const AGVector3 &p) const
-{
-  AGVector3 dir=direction();
-  AGVector3 diff=p-v0;
-  AGVector3 normal1=dir%diff;
-  AGVector3 plane_normal=dir%normal1;
-  plane_normal.normalize();
-  return fabs(diff*plane_normal);
-}
-
-  
-AGVector3 AGLine3::getV0() const
-{
-  return v0;
-}
-AGVector3 AGLine3::getV1() const
-{
-  return v1;
-}
-
-bool AGLine3::has(const AGVector3 &v) const
-{
-  return v0==v || v1==v;
-}
-
-AGVector3 AGLine3::direction() const
-{
-  return v1-v0;
-}
-
-
-AGString AGLine3::toString() const
-{
-  AGStringStream os;
-  os<<"("<<v0.toString()<<"-"<<v1.toString()<<")";
-  return os.str();
-}
-/*
-float AGLine3::distance(const AGVector3 &v) const
-{
-  return fabs(normal()*(v-v0));
-  }*/
-
-
-
-///////////////////////////////////////////////////////////////
-// AGVector4
-///////////////////////////////////////////////////////////////
-
-
-AGVector4::AGVector4(float pX,float pY,float pZ,float pW)
-{
-  v[0]=pX;
-  v[1]=pY;
-  v[2]=pZ;
-  v[3]=pW;
-}
-AGVector4::AGVector4(const AGVector4 &a)
-{
-  v[0]=a.v[0];
-  v[1]=a.v[1];
-  v[2]=a.v[2];
-  v[3]=a.v[3];
-}
-AGVector4::AGVector4(const AGVector3 &a,float h)
-{
-  v[0]=a.v[0];
-  v[1]=a.v[1];
-  v[2]=a.v[2];
-  v[3]=h;
-}
-
-AGVector3 AGVector4::dim3() const
-{
-  return AGVector3(v[0],v[1],v[2]);
-}
-AGVector2 AGVector4::dim2() const
-{
-  return AGVector2(v[0],v[1]);
-}
-
-
-AGVector4::AGVector4()
-{
-  v[0]=v[1]=v[2]=0.0f;
-  v[3]=1.0f;
-}
-
-AGVector4 AGVector4::operator-() const
-{
-  return AGVector4(-v[0],-v[1],-v[2],-v[3]);
-}
-
-
-void AGVector4::setX(float pX)
-{
-  v[0]=pX;
-}
-void AGVector4::setY(float pY)
-{
-  v[1]=pY;
-}
-void AGVector4::setZ(float pZ)
-{
-  v[2]=pZ;
-}
-void AGVector4::setW(float pW)
-{
-  v[3]=pW;
-}
-
-float AGVector4::getX() const
-{
-  return v[0];
-}
-float AGVector4::getY() const
-{
-  return v[1];
-}
-float AGVector4::getZ() const
-{
-  return v[2];
-}
-float AGVector4::getW() const
-{
-  return v[3];
-}
-
-AGVector4 AGVector4::operator-(const AGVector4 &p) const
-{
-  return AGVector4(v[0]-p.v[0],
-		   v[1]-p.v[1],
-		   v[2]-p.v[2],
-		   v[3]-p.v[3]);
-}
-AGVector4 AGVector4::operator+(const AGVector4 &p) const
-{
-  return AGVector4(v[0]+p.v[0],
-		   v[1]+p.v[1],
-		   v[2]+p.v[2],
-		   v[3]+p.v[3]);
-}
-AGVector4 &AGVector4::operator+=(const AGVector4 &p)
-{
-  v[0]+=p.v[0];
-  v[1]+=p.v[1];
-  v[2]+=p.v[2];
-  v[3]+=p.v[3];
-  return *this;
-}
-AGVector4 &AGVector4::operator-=(const AGVector4 &p)
-{
-  v[0]-=p.v[0];
-  v[1]-=p.v[1];
-  v[2]-=p.v[2];
-  v[3]-=p.v[3];
-  return *this;
-}
-
-float AGVector4::operator*(const AGVector4 &p) const
-{
-  return v[0]*p.v[0]+
-    v[1]*p.v[1]+
-    v[2]*p.v[2]+
-    v[3]*p.v[3];
-}
-AGVector4 &AGVector4::operator*=(float f)
-{
-  v[0]*=f;
-  v[1]*=f;
-  v[2]*=f;
-  v[3]*=f;
-  return *this;
-}
-AGVector4 &AGVector4::operator/=(float f)
-{
-  v[0]/=f;
-  v[1]/=f;
-  v[2]/=f;
-  v[3]/=f;
-  return *this;
-}
-AGVector4 AGVector4::operator*(float f) const
-{
-  return AGVector4(v[0]*f,v[1]*f,v[2]*f,v[3]*f);
-}
-AGVector4 AGVector4::operator/(float f) const
-{
-  return AGVector4(v[0]/f,v[1]/f,v[2]/f,v[3]/f);
-}
-
-bool AGVector4::operator==(const AGVector4 &a) const
-{
-  return v[0]==a.v[0] &&
-    v[1]==a.v[1] &&
-    v[2]==a.v[2] &&
-    v[3]==a.v[3];
-}
-bool AGVector4::operator!=(const AGVector4 &a) const
-{
-  return !operator==(a);
-}
-
-float AGVector4::length() const
-{
-  return sqrt(length2());
-}
-float AGVector4::length2() const
-{
-  return v[0]*v[0]+
-    v[1]*v[1]+
-    v[2]*v[2]+
-    v[3]*v[3];
-}
-
-float AGVector4::length3() const
-{
-  return sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);
-}
-
-AGVector4 AGVector4::normalized() const
-{
-  return *this*(1.0f/length());
-}
-void AGVector4::normalize()
-{
-  operator*=(1.0f/length());
-}
-
-AGVector4 AGVector4::normalized3() const
-{
-  return *this*(1.0f/length3());
-}
-void AGVector4::normalize3()
-{
-  operator*=(1.0f/length3());
-}
-
-float &AGVector4::operator[](int index)
-{
-  assert(index>=0 && index<4);
-  return v[index];
-}
-
-float AGVector4::operator[](int index) const
-{
-  assert(index>=0 && index<4);
-  return v[index];
-}
-
-bool AGVector4::nonZero() const
-{
-  return v[0]!=0 ||
-    v[1]!=0 ||
-    v[2]!=0 ||
-    v[3]!=0;
-}
-
-AGString AGVector4::toString() const
-{
-  AGStringStream os;
-  os<<"("<<v[0]<<","<<v[1]<<","<<v[2]<<","<<v[3]<<")";
-  return os.str();
-}
-
-(AGVector4::operator float*)()
-{
-  return v;
-}
-
-(AGVector4::operator const float*)() const
-{
-  return v;
-}
-
-AGVector4 AGVector4::operator%(const AGVector4 &a) const
-{
-  return AGVector4(v[1] * a.v[2] - v[2] * a.v[1],
-		   v[2] * a.v[0] - v[0] * a.v[2],
-		   v[0] * a.v[1] - v[1] * a.v[0]);
-}
-
-///////////////////////////////////////////////////////////////
-// AGMatrix4
-///////////////////////////////////////////////////////////////
-
-AGMatrix4::AGMatrix4(float v[16])
-{
-  for(size_t i=0;i<16;i++)
-    a[i]=v[i];
-}
-AGMatrix4::AGMatrix4(float angle,const AGVector3&d)
-{
-  float co=cos(angle);
-  float si=sin(angle);
-  /*
-  set(0,0,co + d[0]*d[0]*(1-co));
-  set(0,1,d[0]*d[1]*(1-co)-d[2]*si);
-  set(0,2,d[0]*d[2]*(1-co)+d[1]*si);
-
-  set(1,0,d[1]*d[0]*(1-co)+d[2]*si);
-  set(1,1,co+d[1]*d[1]*(1-co));
-  set(1,2,d[1]*d[2]*(1-co)-d[0]*si);
-
-  set(2,0,d[2]*d[0]*(1-co)-d[1]*si);
-  set(2,1,d[2]*d[1]*(1-co)+d[0]*si);
-  set(2,2,co + d[2]*d[2]*(1-co));
-  */
-    set(0,0,co + d[0]*d[0]*(1-co));
-  set(1,0,d[0]*d[1]*(1-co)-d[2]*si);
-  set(2,0,d[0]*d[2]*(1-co)+d[1]*si);
-
-  set(0,1,d[1]*d[0]*(1-co)+d[2]*si);
-  set(1,1,co+d[1]*d[1]*(1-co));
-  set(2,1,d[1]*d[2]*(1-co)-d[0]*si);
-
-  set(0,2,d[2]*d[0]*(1-co)-d[1]*si);
-  set(1,2,d[2]*d[1]*(1-co)+d[0]*si);
-  set(2,2,co + d[2]*d[2]*(1-co));
-  
-  set(3,0,0);
-  set(3,1,0);
-  set(3,2,0);
-
-  set(0,3,0);
-  set(1,3,0);
-  set(2,3,0);
-
-  set(3,3,1);
-}
-
-
-AGMatrix4::AGMatrix4()
-{
-  get(0,1)=get(0,2)=get(0,3)=
-    get(1,0)=get(1,2)=get(1,3)=
-    get(2,0)=get(2,1)=get(2,3)=
-    get(3,0)=get(3,1)=get(3,2)=0.0f;
-
-  get(0,0)=get(1,1)=get(2,2)=get(3,3)=1.0f;
-}
-
-/*AGMatrix3::AGMatrix4(const AGAngle &n)
-{
-  a[0][0]=cos(n.angle);
-  a[1][0]=sin(n.angle);
-  a[0][1]=-sin(n.angle);
-  a[1][1]=cos(n.angle);
-  a[2][0]=a[2][1]=a[0][2]=a[1][2]=0.0f;
-  a[2][2]=1.0f;
-  }*/
-
-AGMatrix4::AGMatrix4(const AGVector4 &n)
-{
-  get(0,0)=get(1,1)=get(2,2)=get(3,3)=1.0f;
-  get(0,1)=get(0,2)=get(0,3)=
-    get(1,0)=get(1,2)=get(1,3)=
-    get(2,0)=get(2,1)=get(2,3)=0.0f;
-  get(3,0)=n[0];
-  get(3,1)=n[1];
-  get(3,2)=n[2];
-}
-
-AGMatrix4 &AGMatrix4::operator+=(const AGMatrix4 &m)
-{
-  for(size_t x=0;x<4;x++)
-    for(size_t y=0;y<4;y++)
-      get(x,y)+=m.get(x,y);
-  return *this;
-}
-
-AGMatrix4 AGMatrix4::transposed() const
-{
-  AGMatrix4 a;
-  for(size_t x=0;x<4;x++)
-    for(size_t y=0;y<4;y++)
-      a.get(x,y)=get(y,x);
-  return a;
-}
-
-
-
-AGMatrix4 AGMatrix4::inverted() const
-{
-  // gauss-alg.
-  AGMatrix4 a;
-  AGMatrix4 b(*this);
-
-  gauss(a,b,4);
-  return a;
-}
-
-void AGMatrix4::swapRows(size_t a,size_t b)
-{
-  if(a==b)
-    return;
-  assert(a<4);
-  assert(b<4);
-  for(size_t x=0;x<4;x++)
-    {
-      float t=get(x,a);
-      set(x,a,get(x,b));
-      set(x,b,t);
-    }
-}
-
-void AGMatrix4::swapCols(size_t a,size_t b)
-{
-  if(a==b)
-    return;
-  assert(a<4);
-  assert(b<4);
-  for(size_t y=0;y<4;y++)
-    {
-      float t=get(a,y);
-      set(a,y,get(b,y));
-      set(b,y,t);
-    }
-}
-
-
-AGMatrix3 AGMatrix4::get3x3(size_t x,size_t y) const
-{
-  AGMatrix3 m;
-  assert(x<2);
-  assert(y<2);
-  for(size_t i=0;i<3;i++)
-    for(size_t j=0;j<3;j++)
-      m.set(i,j,get(i+x,j+y));
-  return m;
-}
-
-
-void AGMatrix4::set(size_t x,size_t y,float f)
-{
-  assert(x>=0 && x<4);
-  assert(y>=0 && y<4);
-  a[x*4+y]=f;
-}
-float AGMatrix4::get(size_t x,size_t y) const
-{
-  assert(x>=0 && x<4);
-  assert(y>=0 && y<4);
-  return a[4*x+y];
-}
-
-float &AGMatrix4::get(size_t x,size_t y)
-{
-  assert(x>=0 && x<4);
-  assert(y>=0 && y<4);
-  return a[4*x+y];
-}
-
-AGMatrix4 AGMatrix4::operator*(const AGMatrix4 &m) const
-{
-  AGMatrix4 n;
-  size_t x,y;
-  for(x=0;x<4;x++)
-    for(y=0;y<4;y++)
-      n(x,y)=get(0,y)*m(x,0)+
-	get(1,y)*m(x,1)+
-	get(2,y)*m(x,2)+
-	get(3,y)*m(x,3);
-  return n;
-}
-AGMatrix4 &AGMatrix4::operator*=(const AGMatrix4 &m)
-{
-  *this=(*this)*m;
-  return *this;
-}
-
-AGVector4 AGMatrix4::operator*(const AGVector4 &v) const
-{
-  return AGVector4(get(0,0)*v[0]+get(1,0)*v[1]+get(2,0)*v[2]+get(3,0)*v[3],
-		   get(0,1)*v[0]+get(1,1)*v[1]+get(2,1)*v[2]+get(3,1)*v[3],
-		   get(0,2)*v[0]+get(1,2)*v[1]+get(2,2)*v[2]+get(3,2)*v[3],
-		   get(0,3)*v[0]+get(1,3)*v[1]+get(2,3)*v[2]+get(3,3)*v[3]);
-}
-
-AGString AGMatrix4::toString() const
-{
-  std::ostringstream os;
-  os<<"("<<get(0,0)<<","<<get(1,0)<<","<<get(2,0)<<","<<get(3,0)<<")"<<std::endl;
-  os<<"("<<get(0,1)<<","<<get(1,1)<<","<<get(2,1)<<","<<get(3,1)<<")"<<std::endl;
-  os<<"("<<get(0,2)<<","<<get(1,2)<<","<<get(2,2)<<","<<get(3,2)<<")"<<std::endl;
-  os<<"("<<get(0,3)<<","<<get(1,3)<<","<<get(2,3)<<","<<get(3,3)<<")"<<std::endl;
-  return AGString(os.str());
-}
-
-(AGMatrix4::operator float*)()
-{
-  return a;
-}
-
-(AGMatrix4::operator const float*)() const
-{
-  return a;
-}
-
-/*
-double gMatrixDoubleBuf[16];
-(AGMatrix4::operator const double*)() const
-{
-  for(int i=0;i<16;i++)
-    gMatrixDoubleBuf[i]=a[i];
-  return gMatrixDoubleBuf;
-  }*/
-
-float AGMatrix4::operator()(size_t x,size_t y) const
-{
-  return get(x,y);
-}
-float &AGMatrix4::operator()(size_t x,size_t y)
-{
-  return get(x,y);
-}
-
-AGVector4 AGMatrix4::getRow(size_t i) const
-{
-  //  return AGVector4(get(i,0),get(i,1),get(i,2),get(i,3));
-  return AGVector4(get(0,i),get(1,i),get(2,i),get(3,i));
-}
-
-
-AGMatrix4::MRow AGMatrix4::operator[](size_t y)
-{
-  MRow r;
-  r.matrix=this;
-  r.y=y;
-  return r;
-}
-/*
-const AGMatrix4::Row AGMatrix4::operator[](size_t y) const
-{
-  Row r;
-  r.matrix=const_cast<AGMatrix4*>(this);
-  r.y=y;
-  return r;
-  }*/
-
-
-///////////////////////////////////////////////////////////////
-// AGBox3
-///////////////////////////////////////////////////////////////
-
-AGBox3::AGBox3(const AGVector3 &pBase,const AGVector3 &pDir):
-  base(pBase),dir(pDir)
-{
-  // assert that pDir[i]>0
-  for(size_t i=0;i<3;i++)
-    if(dir[i]<0)
-      {
-	base[i]+=dir[i];
-	dir[i]=-dir[i];
-      }
-  mValid=true;
-}
-
-
-
-AGBox3::AGBox3():base(AGVector3(0,0,0)),dir(AGVector3(0,0,0))
-{
-  mValid=false;
-}
-
-bool AGBox3::valid() const
-{
-  return mValid;
-}
-
-
-bool AGBox3::collides(const AGMatrix4 &frustum) const
-{
-  std::vector<AGVector3> a=getVertices();
-  float minx,miny,minz;
-  float maxx,maxy,maxz;
-
-  minx=miny=minz=10000;
-  maxx=maxy=maxz=-10000;
-  // simply check, if any of the box's vertices lie inside the frustum
-  for(std::vector<AGVector3>::iterator i=a.begin();i!=a.end();i++)
-    {
-      AGVector4 p(frustum*AGVector4(*i,1));
-      p/=p[3];
-      if(p[0]>=-1 && p[0]<=1 &&
-	 p[1]>=-1 && p[1]<=1 &&
-	 p[2]>=-1 && p[2]<=1)
-	return true;
-
-      minx=std::min(minx,p[0]);
-      miny=std::min(miny,p[1]);
-      minz=std::min(minz,p[2]);
-
-      maxx=std::max(maxx,p[0]);
-      maxy=std::max(maxy,p[1]);
-      maxz=std::max(maxz,p[2]);
-	
-    }
-
-  return AGBox3(AGVector3(-1,-1,-1),AGVector3(2,2,2)).collides(AGBox3(AGVector3(minx,miny,minz),AGVector3(maxx-minx,maxy-miny,maxz-minz)));
-}
-
-bool AGBox3::collides(const AGBox3 &box) const
-{
-  AGVector3 a=base+dir;
-  AGVector3 b=box.base+box.dir;
-
-  /*  cdebug(base.toString()<<"   "<<a.toString());
-  cdebug(box.base.toString()<<"   "<<b.toString());
-
-  cdebug(collide1d(base[0],a[0],box.base[0],b[0]));
-  cdebug(collide1d(base[1],a[1],box.base[1],b[1]));
-  cdebug(collide1d(base[2],a[2],box.base[2],b[2]));
-  */
-
-  return collide1d(base[0],a[0],box.base[0],b[0]) &&
-    collide1d(base[1],a[1],box.base[1],b[1]) &&
-    collide1d(base[2],a[2],box.base[2],b[2]);
-}
-
-
-
-std::vector<AGVector3> AGBox3::getVertices() const
-{
-  std::vector<AGVector3> a;
-  a.push_back(base+AGVector3(0,0,0));
-  a.push_back(base+AGVector3(dir[0],0,0));
-  a.push_back(base+AGVector3(0,dir[1],0));
-  a.push_back(base+AGVector3(0,0,dir[2]));
-
-  a.push_back(base+AGVector3(dir[0],dir[1],0));
-  a.push_back(base+AGVector3(dir[0],0,dir[2]));
-  a.push_back(base+AGVector3(0,dir[1],dir[2]));
-  a.push_back(base+AGVector3(dir[0],dir[1],dir[2]));
-  return a;
-}
-
-AGBox3 AGBox3::operator-(const AGVector3 &v) const
-{
-  if(valid())
-    return AGBox3(base-v,dir);
-  else
-    return AGBox3();
-}
-AGBox3 AGBox3::operator+(const AGVector3 &v) const
-{
-  if(valid())
-    return AGBox3(base+v,dir);
-  else
-    return AGBox3();
-}
-
-
-
-void AGBox3::include(const AGVector3&p)
-{
-  if(!mValid)
-    {
-      base=p;
-      dir=AGVector3(0,0,0);
-      mValid=true;
-      return;
-    }
-  AGVector3 b=base,b2=base+dir;
-
-  base[0]=std::min(b[0],p[0]);
-  base[1]=std::min(b[1],p[1]);
-  base[2]=std::min(b[2],p[2]);
-  AGVector3 n;
-  n[0]=std::max(b2[0],p[0]);
-  n[1]=std::max(b2[1],p[1]);
-  n[2]=std::max(b2[2],p[2]);
-  dir[0]=n[0]-base[0];
-  dir[1]=n[1]-base[1];
-  dir[2]=n[2]-base[2];
-}
-
-bool AGBox3::collides(const AGVector3&p) const
-{
-  return p[0]>=base[0] && p[1]>=base[1] && p[2]>=base[2] &&
-    p[0]<base[0]+dir[0] && p[1]<base[1]+dir[1] && p[2]<base[2]+dir[2];
-}
-bool AGBox3::collides(const AGLine3&p) const
-{
-  // FIXME: implement like this:http://www.garagegames.com/index.php?sec=mg&mod=resource&page=view&qid=309
-
-  std::vector<AGRect3> sides=getSides();
-  for(std::vector<AGRect3>::iterator i=sides.begin();i!=sides.end();++i)
-    {
-      if((*i).collides(p))
-	return true;
-    }
-  return false;
-}
-
-bool AGBox3::contains(const AGTriangle3 &t) const
-{
-  for(size_t i=0;i<3;i++)
-    if(!collides(t[i]))
-      return false;
-  return true;
-}
-
-
-std::vector<AGRect3> AGBox3::getSides() const
-{
-  AGVector3 b2=base+dir;
-  std::vector<AGRect3> s;
-  s.push_back(AGRect3(base,AGVector3(dir[0],dir[1],0)));
-  s.push_back(AGRect3(base,AGVector3(dir[0],0,dir[2])));
-  s.push_back(AGRect3(base,AGVector3(0,dir[1],dir[2])));
-  s.push_back(AGRect3(b2,AGVector3(-dir[0],-dir[1],0)));
-  s.push_back(AGRect3(b2,AGVector3(-dir[0],0,-dir[2])));
-  s.push_back(AGRect3(b2,AGVector3(0,-dir[1],-dir[2])));
-  return s;
-}
-
-bool AGBox3::includes(const AGBox3 &b)
-{
-  AGVector3 u0=base+dir;
-  AGVector3 u1=b.base+b.dir;
-  return (b.base[0]>=base[0] && b.base[1]>=base[1] && b.base[2]>=base[2] &&
-	  u1[0]<=u0[0] && u1[1]<=u0[1] && u1[2]<=u0[2]);
-}
-
-AGString AGBox3::toString() const
-{
-  std::ostringstream os;
-  os<<"["<<base.toString()<<";"<<dir.toString()<<"]";
-  return AGString(os.str());
-}
-
-std::vector<AGBox3> AGBox3::split() const
-{
-  std::vector<AGBox3> r;
-  AGVector3 d=dir*0.5;
-  AGVector3 x(dir[0],0,0);
-  AGVector3 y(0,dir[1],0);
-  AGVector3 z(0,0,dir[2]);
-  r.push_back(AGBox3(base      ,d));
-  r.push_back(AGBox3(base+x    ,d));
-  r.push_back(AGBox3(base  +y  ,d));
-  r.push_back(AGBox3(base+x+y  ,d));
-  r.push_back(AGBox3(base    +z,d));
-  r.push_back(AGBox3(base+x  +z,d));
-  r.push_back(AGBox3(base  +y+z,d));
-  r.push_back(AGBox3(base+x+y+z,d));
-  return r;
-}
-
-///////////////////////////////////////////////////////////////
-// AGRect3
-///////////////////////////////////////////////////////////////
-
-AGRect3::AGRect3(const AGVector3 &pBase,const AGVector3 &pDir):
-  base(pBase),dir(pDir)
-{
-  // assert that dir[i]>=0
-  for(size_t i=0;i<3;i++)
-    if(dir[i]<0)
-      {
-	base[i]+=dir[i];
-	dir[i]=-dir[i];
-      }
-}
-
-bool AGRect3::collides(const AGLine3&pLine) const
-{
-  AGVector3 d0,d1; // directions of rect's sides
-  if(dir[0]==0)
-    {
-      d0=AGVector3(0,dir[1],0);
-      d1=AGVector3(0,0,dir[2]);
-    }
-  else if(dir[1]==0)
-    {
-      d0=AGVector3(dir[0],0,0);
-      d1=AGVector3(0,0,dir[2]);
-    }
-  else
-    {
-      d0=AGVector3(dir[0],0,0);
-      d1=AGVector3(0,dir[1],0);
-    }
-
-  AGVector3 normal=d0%d1;
-
-  float v0=(pLine.getV0()-base)*normal;
-  float v1=(pLine.getV1()-base)*normal;
-  if(AGsign(v0)==AGsign(v1))
-    return false;
-
-  float vall=v1-v0;
-  float v=-v0/vall;
-  AGVector3 ip=pLine.getV1()*v+pLine.getV0()*(1-v);
-
-  //  cdebug("ip:"<<ip.toString());
-  //  cdebug("dist:"<<(ip-base)*normal);
-  
-  for(size_t i=0;i<3;i++)
-    {
-      if(fabs(dir[i])<0.0001)
-	continue;
-      if(ip[i]<base[i] || ip[i]>base[i]+dir[i])
-	{
-	  //	  cdebug("fail:"<<i);
-	  return false;
-	}
-    }
-  return true;
-}
-
-AGString AGRect3::toString() const
-{
-  std::ostringstream os;
-  os<<"["<<base.toString()<<";"<<dir.toString()<<"]";
-  return AGString(os.str());
-}
-
-
-
-
-std::ostream &operator<<(std::ostream &o,const AGVector2&v)
-{
-  o<<v.toString();
-  return o;
-}
-
-std::ostream &operator<<(std::ostream &o,const AGVector3&v)
-{
-  o<<v.toString();
-  return o;
-}
-
-std::ostream &operator<<(std::ostream &o,const AGVector4&v)
-{
-  o<<v.toString();
-  return o;
-}
-
-std::ostream &operator<<(std::ostream &o,const AGRect2&v)
-{
-  o<<v.toString();
-  return o;
-}
-
-std::ostream &operator<<(std::ostream &o,const AGBox3&v)
-{
-  o<<"("<<v.base<<" "<<v.dir<<"/"<<v.valid()<<")";
-  return o;
-}

Deleted: antargis/branches/rant/ext/math/ag_geometry.h
===================================================================
--- antargis/branches/rant/ext/math/ag_geometry.h	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/math/ag_geometry.h	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,709 +0,0 @@
-/*
- * Copyright (c) 2005 by David Kamphausen. All rights reserved.
- *
- * ag_geometry.h
- * by David Kamphausen (david.kamphausen at web.de)
- *
- * The "Antargis" project, including all files needed to compile it,
- * is free software; you can redistribute it and/or use it and/or modify it
- * under the terms of the GNU General Public License as published
- * by the Free Software Foundation; either version 2 of the License,
- * or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
- *
- * You should have received a copy of the GNU General Public
- * License along with this program.
- */
-
-// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
-
-#ifndef AG_TRIANGLE_H
-#define AG_TRIANGLE_H
-
-#include <SDL.h>
-#include <iostream>
-#include <list>
-#include <vector>
-#include <ag_base.h>
-#include <ag_string.h>
-
-/* There are following classes:
-
-   We do NOT use templates here, because of SWIG-problems.
-
-   - AGVector2 - 2d vector
-   - AGVector3 - is homogenous 2d and inhom 3d
-   - AGVector4 - hom. 3d
-   - AGMatrix3 - 3x3 Matrix
-   - AGMatrix4 - 4x4 Matrix
-
-   - AGLine2     - 2d Line (eats AGVector3)
-   - AGTriangle2 - 2d triangle (eats AGVector3)
-
-   ATTENTION: the classes may NOT be virtual, as they're possibly used in an array, where then the size is NOT sizeof(v[x]) !!!
-*/
-
-
-class AGRect2;
-class AGBox3;
-class Node;
-
-/** \brief Simple structure holding an angle in degrees
- */
-struct AGAngle
-{
-  float angle;
-  
-  /// @param an angle in degrees
-  explicit AGAngle(float a);
-};
-
-class AGEXPORT AGVector2
-{
- public:
-  float v[2];
-
-  AGVector2(const AGString &s);
-  AGVector2(float pX,float pY);
-  AGVector2(const AGAngle &a);
-  AGVector2(const AGVector2 &a);
-  AGVector2();
-
-  void setX(float pX);
-  void setY(float pY);
-
-  AGVector2 dim2() const;
-
-  
-#ifdef SWIG
-  %rename(x) getX() const;
-  %rename(y) getY() const;
-#endif
-  float getX() const;
-  float getY() const;
-
-  AGAngle getAngle() const;
-
-
-  bool operator<(const AGVector2 &p) const;
-
-  AGVector2 operator-() const;
-  AGVector2 operator-(const AGVector2 &p) const;
-  AGVector2 operator+(const AGVector2 &p) const;
-  AGVector2 &operator+=(const AGVector2 &p);
-  AGVector2 &operator-=(const AGVector2 &p);
-
-  float operator*(const AGVector2 &p) const;
-  AGVector2 &operator*=(float f);
-  AGVector2 &operator/=(float f);
-  AGVector2 operator*(float f) const;
-  AGVector2 operator/(float f) const;
-
-  bool operator==(const AGVector2 &a) const;
-  bool operator!=(const AGVector2 &a) const;
-
-  float length() const;
-  float length2() const;
-
-  AGVector2 normalized() const;
-  void normalize();
-
-  AGVector2 normal() const;
-
-#ifdef SWIG
-  %rename(__getitem__) operator[](int index) const;
-#endif
-  float operator[](int index) const;
-  float &operator[](int index);
-
-  bool nonZero() const;
-
-  void saveXML(Node &node) const;
-  void loadXML(const Node &node);
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-
-#ifndef SWIG
-  (operator float*)();
-  (operator const float*)() const;
-#endif
-};
-
-// 2-dim homogenous vector
-class AGEXPORT AGVector3
-{
- public:
-  float v[3];
-
-  AGVector3(const AGVector2 &p,float h=1.0f);
-  AGVector3(float pX,float pY,float pZ=0.0f);
-  AGVector3(const AGAngle &a);
-  AGVector3(const AGVector3 &a);
-  AGVector3();
-
-  void setX(float pX);
-  void setY(float pY);
-  void setZ(float pZ);
-
-  
-#ifdef SWIG
-  %rename(x) getX() const;
-  %rename(y) getY() const;
-  %rename(z) getZ() const;
-#endif
-  float getX() const;
-  float getY() const;
-  float getZ() const;
-
-  AGAngle getAngle() const;
-
-  AGVector3 operator-() const;
-
-  AGVector3 operator-(const AGVector3 &p) const;
-  AGVector3 operator+(const AGVector3 &p) const;
-#ifdef SWIG
-%rename(add) operator+=(const AGVector3 &p);
-%rename(sub) operator-=(const AGVector3 &p);
-#endif
-  AGVector3 &operator+=(const AGVector3 &p);
-  AGVector3 &operator-=(const AGVector3 &p);
-
-  float operator*(const AGVector3 &p) const;
-  AGVector3 &operator*=(float f);
-  AGVector3 &operator/=(float f);
-  AGVector3 operator*(float f) const;
-  AGVector3 operator/(float f) const;
-  AGVector3 operator%(const AGVector3 &a) const;
-
-  bool operator==(const AGVector3 &a) const;
-  bool operator!=(const AGVector3 &a) const;
-
-  float length() const;
-  float length2() const;
-
-  AGVector3 normalized() const;
-  void normalize();
-
-  AGVector3 normal() const;
-
-  float operator[](int index) const;
-  float &operator[](int index);
-
-  bool nonZero() const;
-
-  void saveXML(Node &node) const;
-  void loadXML(const Node &node);
-
-  AGVector2 dim2() const;
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-
-#ifndef SWIG
-  (operator float*)();
-#endif
-};
-
-
-class AGEXPORT AGMatrix3
-{
-  float a[3][3];
- public:
-  struct Row
-  {
-    AGMatrix3 *matrix;
-    int y;
-
-    float &operator[](size_t x)
-    {
-      return matrix->get(x,y);
-    }
-    float operator[](size_t x) const
-    {
-      return matrix->get(x,y);
-    }
-  };
-
-  AGMatrix3();
-  AGMatrix3(const AGAngle &a); // rotate
-  AGMatrix3(const AGVector3 &a); // transpose
-  AGMatrix3(float x,float y); // scale
-  void set(size_t x,size_t y,float f);
-  float get(size_t x,size_t y) const;
-  float &get(size_t x,size_t y);
-
-  AGMatrix3 operator*(const AGMatrix3 &m) const;
-  AGMatrix3 &operator*=(const AGMatrix3 &m);
-
-  AGVector3 operator*(const AGVector3 &v) const;
-  //  AGVector2 operator*(const AGVector2 &v) const;
-
-  AGMatrix3 operator-() const;
-
-  AGMatrix3 inverted() const;
-  AGMatrix3 transposed() const;
-
-  Row operator[](size_t y);
-  const Row operator[](size_t y) const;
-
-  void swapRows(size_t a,size_t b);
-  void swapCols(size_t a,size_t b);
-  
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-};
-
-class AGEXPORT AGLine2
-{
-  AGVector2 v0,v1;
- public:
-  AGLine2();
-  AGLine2(const AGVector2 &pv0,const AGVector2 &pv1);
-  
-  AGVector2 getV0() const;
-  AGVector2 getV1() const;
-
-  bool has(const AGVector2 &v) const;
-
-  bool collide(const AGLine2 &l) const;
-  AGVector2 collisionPoint(const AGLine2 &l) const;
-  AGVector2 collisionPointNI(const AGLine2 &l) const; // no inclusion test
-  bool includes(const AGVector2 &v) const;
-
-  AGRect2 getBBox() const;
-
-  AGVector2 normal() const;
-  AGVector2 direction() const;
-
-  float distance(const AGVector2 &v) const;
-
-  AGVector2 &operator[](size_t i);
-  AGVector2 operator[](size_t i) const;
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-};
-
-class AGEXPORT AGLine3
-{
-  AGVector3 v0,v1;
- public:
-  AGLine3();
-  AGLine3(const AGVector3 &pv0,const AGVector3 &pv1);
-  
-  AGVector3 getV0() const;
-  AGVector3 getV1() const;
-
-  bool has(const AGVector3 &v) const;
-  /*
-  bool collide(const AGLine3 &l) const;
-  AGVector3 collisionPoint(const AGLine3 &l) const;
-  AGVector3 collisionPointNI(const AGLine3 &l) const; // no inclusion test
-  bool includes(const AGVector3 &v) const;
-  */
-  //  AGBox3 getBBox() const;
-
-  //  AGVector3 normal() const;
-  AGVector3 direction() const;
-
-  float distance(const AGVector3 &p) const;
-
-  //  float distance(const AGVector3 &v) const;
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-};
-
-class AGEXPORT AGCollisionData
-{
-};
-
-class AGRect2;
-
-class AGEXPORT AGTriangle2
-{
-  AGVector2 p[3];
- public:
-  AGTriangle2(const AGVector2 &v0,const AGVector2 &v1,const AGVector2 &v2);
-
-  AGVector2 operator[](int index) const;
-
-  AGVector2 get(int index) const;
-
-  bool collide(const AGTriangle2 &t) const;
-
-  // FIXME: sweep-based test
-  //  AGCollisionData collide(const AGTriangle &t,const AGVector &v0,const AGVector &v1) const;
-
-  std::vector<AGVector2> getNormals() const;
-
-  void apply(const AGMatrix3 &m);
-  AGTriangle2 applied(const AGMatrix3 &m) const;
-
-  // estimate touching point (or middle of touching area)
-  AGVector2 touchPoint(const AGTriangle2 &t) const;
-  AGVector2 touchVector(const AGTriangle2 &t) const;
-
-  std::vector<AGVector2> collisionPoints(const AGLine2 &l) const;
-
-  bool contains(const AGVector2 &p) const;
-
-  AGRect2 getBBox() const;
-
-  AGLine2 nearestLine(const AGVector2 &v) const;
-
-  std::vector<AGLine2> getLines() const;
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-};
-
-class AGEXPORT AGCircle2
-{
-  AGVector3 p;
-  float radius;
- public:
-  AGCircle2(const AGVector3 &v,float rad);
-
-  bool inCircle(const AGTriangle2 &t) const;
-  bool outCircle(const AGTriangle2 &t) const;
-  bool inCircle(const AGVector3 &v) const;
-  bool outCircle(const AGVector3 &v) const;
-
-  AGVector3 getPos() const;
-  float getRadius() const;
-
-};
-
-class AGVector4;
-class AGEXPORT AGTriangle3
-{
-  AGVector3 p[3];
- public:
-  AGTriangle3(const AGVector3 &v0,const AGVector3 &v1,const AGVector3 &v2);
-  
-  // (x,y,z,0) for no collision 
-  // (x,y,z,1) for collision in point (x,y,z)
-  AGVector4 collide(const AGLine3 &pLine) const;
-
-  AGString toString() const;
-
-  AGVector3 operator[](int index) const;
-};
-
-class AGEXPORT AGRect2
-{
-  AGVector2 v0,v1;
- public:
-  AGRect2();
-  AGRect2(const AGVector2 &pv0,const AGVector2 &pv1);
-  AGRect2(float x,float y,float w,float h);
-  AGRect2(const AGString &ps);
-  AGRect2(const SDL_Rect &r);
-
-  bool collide(const AGRect2 &r) const;
-
-  void include(const AGVector2 &v);
-
-  AGRect2 operator+(const AGVector2 &v) const;
-  AGRect2 &operator+=(const AGVector2 &v);
-  AGRect2 &operator-=(const AGVector2 &v);
-
-  AGRect2& operator+=(const AGRect2 &r);
-
-  bool contains(const AGVector2 &v) const;
-  bool contains(const AGRect2 &v) const;
-
-  std::list<AGRect2> split() const;
-
-  AGVector2 operator[](size_t i) const;
-  AGVector2 &operator[](size_t i);
-
-  AGVector2 getV0() const;
-  AGVector2 getV1() const;
-  AGVector2 getV01() const;
-  AGVector2 getV10() const;
-
-  AGRect2 shrink(float f) const;
-  AGRect2 grow(float f) const;
-
-  void setX(float p);
-  void setY(float p);
-
-  void setLeft(float p); // attention - modifies right, too
-  void setTop(float p);  // attention - modifies bottom, too
-
-  void setRight(float p);
-  void setBottom(float p);
-
-  float setWidth(float w);
-  float setHeight(float w);
-
-  float x() const;
-  float y() const;
-  float w() const;
-  float h() const;
-
-  float width() const;
-  float height() const;
-
-  float x0() const;
-  float y0() const;
-  float x1() const;
-  float y1() const;
-
-  AGRect2 origin() const;
-
-  AGRect2 intersect(const AGRect2 &r) const;
-
-  //result=this-r
-  std::vector<AGRect2> difference(const AGRect2 &r) const;
-
-  SDL_Rect sdl() const;
-
-  bool operator==(const AGRect2 &r) const;
-  bool operator!=(const AGRect2 &r) const;
-
-  void check() const;
-
-  AGRect2 alignGrid() const; // align to integer grid
-
-  float content() const;
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-};
-
-
-class AGEXPORT AGVector4
-{
- public:
-  float v[4];
-
-  AGVector4(float pX,float pY,float pZ,float pW=1.0f);
-  AGVector4(const AGVector4 &a);
-  AGVector4(const AGVector3 &a,float h);
-  AGVector4();
-
-  void setX(float pX);
-  void setY(float pY);
-  void setZ(float pZ);
-  void setW(float pW);
-
-  
-#ifdef SWIG
-  %rename(x) getX() const;
-  %rename(y) getY() const;
-  %rename(z) getZ() const;
-  %rename(w) getW() const;
-#endif
-  float getX() const;
-  float getY() const;
-  float getZ() const;
-  float getW() const;
-
-  AGVector4 operator-(const AGVector4 &p) const;
-  AGVector4 operator+(const AGVector4 &p) const;
-#ifdef SWIG
-%rename(add) operator+=(const AGVector4 &p);
-%rename(sub) operator-=(const AGVector4 &p);
-#endif
-  AGVector4 &operator+=(const AGVector4 &p);
-  AGVector4 &operator-=(const AGVector4 &p);
-
-  float operator*(const AGVector4 &p) const;
-  AGVector4 &operator*=(float f);
-  AGVector4 &operator/=(float f);
-  AGVector4 operator*(float f) const;
-  AGVector4 operator/(float f) const;
-  AGVector4 operator-() const;
-
-  bool operator==(const AGVector4 &a) const;
-  bool operator!=(const AGVector4 &a) const;
-
-  float length() const;
-  // length^2
-  float length2() const;
-
-  // length 3-dim vector
-  float length3() const;
-
-
-  AGVector4 normalized() const;
-  void normalize();
-
-  // 3-dimensional
-  AGVector4 normalized3() const;
-  void normalize3();
-
-
-  float operator[](int index) const;
-  float &operator[](int index);
-
-  bool nonZero() const;
-
-  // vector-cross-product
-  // ignores 4th coordinate
-  AGVector4 operator%(const AGVector4 &a) const;
-  AGVector4 cross(const AGVector4 &a) const
-  {
-    return operator%(a);
-  }
-
-
-  AGVector3 dim3() const;
-  AGVector2 dim2() const;
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-
-#ifndef SWIG
-  (operator float*)();
-  (operator const float*)() const;
-#endif
-};
-
-class AGEXPORT AGMatrix4
-{
-  float a[16];
- public:
-  struct MRow
-  {
-    AGMatrix4 *matrix;
-    int y;
-
-    float &operator[](size_t x)
-    {
-      return matrix->get(x,y);
-    }
-    float operator[](size_t x) const
-    {
-      return matrix->get(x,y);
-    }
-  };
-
-  AGMatrix4();
-  AGMatrix4(float v[16]);
-  AGMatrix4(float angle,const AGVector3 &d);
-  // FIXME: add quaternion
-  //  AGMatrix4(const AGAngle &a);
-  AGMatrix4(const AGVector4 &a);
-  void set(size_t x,size_t y,float f);
-  float get(size_t x,size_t y) const;
-  float &get(size_t x,size_t y);
-
-  AGMatrix4 operator*(const AGMatrix4 &m) const;
-  AGMatrix4 &operator*=(const AGMatrix4 &m);
-  AGMatrix4 &operator+=(const AGMatrix4 &m);
-
-  AGMatrix3 get3x3(size_t x,size_t y) const;
-
-  AGVector4 operator*(const AGVector4 &v) const;
-
-  float operator()(size_t x,size_t y) const;
-  float &operator()(size_t x,size_t y);
-
-  AGMatrix4 inverted() const;
-  AGMatrix4 transposed() const;
-
-  MRow operator[](size_t y);
-  //  const Row operator[](size_t y) const;
-
-  void swapRows(size_t a,size_t b);
-  void swapCols(size_t a,size_t b);
-
-#ifdef SWIG
-  %rename(to_s) toString() const;
-#endif
-  AGString toString() const;
-
-#ifndef SWIG
-  (operator float*)();
-  (operator const float*)() const;
-  //  (operator const double*)() const;
-#endif
-
-  AGVector4 getRow(size_t i) const;
-};
-
-// axis-aligned
-class AGEXPORT AGRect3
-{
-  AGVector3 base,dir;
- public:
-  AGRect3(const AGVector3 &pBase,const AGVector3 &pDir);
-
-  bool collides(const AGLine3&pLine) const;
-
-  AGString toString() const;
-};
-
-// axis-aligned
-class AGEXPORT AGBox3
-{
- public:
-  AGVector3 base,dir;
-
-  AGBox3();
-  AGBox3(const AGVector3 &pBase,const AGVector3 &pDir);
-
-  void include(const AGVector3&p);
-  bool includes(const AGBox3 &b);
-  bool collides(const AGVector3&p) const;
-
-  bool collides(const AGLine3&p) const;
-  bool collides(const AGBox3 &b) const;
-
-  bool contains(const AGTriangle3 &t) const;
-
-  std::vector<AGRect3> getSides() const;
-
-  AGString toString() const;
-
-  std::vector<AGBox3> split() const;
-
-  bool collides(const AGMatrix4 &frustum) const;
-
-  std::vector<AGVector3> getVertices() const;
-  void calcVertices(std::vector<AGVector3> &vs) const;
-
-  AGBox3 operator+(const AGVector3 &v) const;
-  AGBox3 operator-(const AGVector3 &v) const;
-
-  bool valid() const;
-
- private:
-  bool mValid;
-};
-
-std::ostream &operator<<(std::ostream &o,const AGVector2&v);
-std::ostream &operator<<(std::ostream &o,const AGVector3&v);
-std::ostream &operator<<(std::ostream &o,const AGVector4&v);
-std::ostream &operator<<(std::ostream &o,const AGRect2&v);
-std::ostream &operator<<(std::ostream &o,const AGBox3&v);
-
-#include "ag_geometry_inline.cc"
-
-#include <ag_serial_vec.h>
-
-#endif

Modified: antargis/branches/rant/ext/math/headers.hh
===================================================================
--- antargis/branches/rant/ext/math/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/math/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,27 +1,25 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/math/ag_geometry.h"
-#ifdef SWIG
-%include "ext/math/ag_rand.h"
-%include "ext/math/ant_frustum.h"
-%include "ext/math/ag_algebra.h"
-%include "ext/math/ag_geometry.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/math/ag_algebra.h"
+#ifdef SWIG
+%include "ext/math/ag_rand.h"
+%include "ext/math/ant_frustum.h"
+%include "ext/math/ag_algebra.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/sound/headers.hh
===================================================================
--- antargis/branches/rant/ext/sound/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/sound/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,21 +1,21 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/sound/ag_mixer.h"
-#ifdef SWIG
-%include "ext/sound/ag_mixer.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/sound/ag_mixer.h"
+#ifdef SWIG
+%include "ext/sound/ag_mixer.h"
+#endif
+#endif

Modified: antargis/branches/rant/ext/video/headers.hh
===================================================================
--- antargis/branches/rant/ext/video/headers.hh	2007-07-29 10:14:50 UTC (rev 1152)
+++ antargis/branches/rant/ext/video/headers.hh	2007-07-29 13:15:31 UTC (rev 1153)
@@ -1,47 +1,46 @@
-#ifndef __ANTARGIS_H__
-#define __ANTARGIS_H__
-#include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_rubyobj.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_video_base.h"
-#include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/math/ag_geometry.h"
-#include "ext/math/ag_rand.h"
-#include "ext/math/ant_frustum.h"
-#include "ext/math/ag_algebra.h"
-#include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_surface.h"
-#include "ext/video/ag_texture.h"
-#include "ext/video/ag_screen.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_clip.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_painter.h"
-#include "ext/video/ag_color.h"
-#ifdef SWIG
-%include "ext/video/ag_painttarget.h"
-%include "ext/video/ag_surface.h"
-%include "ext/video/ag_texture.h"
-%include "ext/video/ag_screen.h"
-%include "ext/video/ag_fontengine.h"
-%include "ext/video/ag_video.h"
-%include "ext/video/ag_clip.h"
-%include "ext/video/ag_rendercontext.h"
-%include "ext/video/ag_texturecache.h"
-%include "ext/video/ag_font.h"
-%include "ext/video/ag_painter.h"
-%include "ext/video/ag_color.h"
-#endif
-#endif
+#ifndef __ANTARGIS_H__
+#define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
+#include "ext/basic/ag_singleton.h"
+#include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_string_utf8.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_video_base.h"
+#include "ext/basic/ag_xml.h"
+#include "ext/math/ag_algebra.h"
+#include "ext/math/ag_rand.h"
+#include "ext/math/ant_frustum.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_surface.h"
+#include "ext/video/ag_texture.h"
+#include "ext/video/ag_screen.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_video.h"
+#include "ext/video/ag_clip.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_color.h"
+#ifdef SWIG
+%include "ext/video/ag_painttarget.h"
+%include "ext/video/ag_surface.h"
+%include "ext/video/ag_texture.h"
+%include "ext/video/ag_screen.h"
+%include "ext/video/ag_fontengine.h"
+%include "ext/video/ag_video.h"
+%include "ext/video/ag_clip.h"
+%include "ext/video/ag_rendercontext.h"
+%include "ext/video/ag_texturecache.h"
+%include "ext/video/ag_font.h"
+%include "ext/video/ag_painter.h"
+%include "ext/video/ag_color.h"
+#endif
+#endif



From davidkamphausen at mail.berlios.de  Sun Jul 29 16:45:01 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 16:45:01 +0200
Subject: [Antargis-svn] r1154 - in antargis/branches/rant: . build/configs
Message-ID: <200707291445.l6TEj1Fd017306@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 16:45:01 +0200 (Sun, 29 Jul 2007)
New Revision: 1154

Added:
   antargis/branches/rant/antargis.iss
Modified:
   antargis/branches/rant/Rantfile
   antargis/branches/rant/build/configs/mingw32.rb
   antargis/branches/rant/configure
Log:
* some more changes for windows

Modified: antargis/branches/rant/Rantfile
===================================================================
--- antargis/branches/rant/Rantfile	2007-07-29 13:15:31 UTC (rev 1153)
+++ antargis/branches/rant/Rantfile	2007-07-29 14:45:01 UTC (rev 1154)
@@ -1,6 +1,7 @@
 import "md5"                         # md5 is needed for automatic checksum-check for changes in files
 import "autoclean"                    # autoclean includes the a simple facility for a clean-make-target
-import "package/tgz"                  # support for packaging (tar.gz, zip)
+import "package/tgz"                  # support for packaging (tar.gz, zip)
+import "package/zip"                  # support for packaging (tar.gz, zip)
 import "rubydoc"
 import "c/dependencies"
 
@@ -51,7 +52,8 @@
 rubyIncDir=getConfig("archdir")
     
 # gather include-directories (separately from other cflags, so they can be used for swig later on
-var :INCLUDES => sourceDirs+[rubyIncDir,"."]
+var :INCLUDES => sourceDirs+[rubyIncDir,"."]
+
 var :INCLUDESTR => var[:INCLUDES].collect{|d|"-I#{d}"}.join(" ")+" "+externalIncludes    # build include-string (-I...)
 
 
@@ -263,7 +265,8 @@
 # make rant-stand-alone
 #
 task :rantStandAlone =>[] do |t|
-	`rant-import --auto build.rb`
+	cmd="rant-import --auto build.rb"
+    sys cmd
 end
 #
 ###########################################
@@ -283,9 +286,13 @@
 files=(sys["build/**/*"]+sys["ext/**/*"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/ or f=~/swig/ or f=~/packages/ or f=~/\.o/ or f=~/\.so/)}
 #puts files
 #exit
+
+if isWindows
+    sourcePkg=gen Package::Zip, "packages","antargis-source-"+extendCommand($config,"version"), :files => files
+else
+    sourcePkg=gen Package::Tgz, "packages","antargis-source-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => files
+end
 
-sourcePkg=gen Package::Tgz, "packages","antargis-source-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => files
-
 task :dist=>[:swigSources,:rantStandAlone,sourcePkg.path] do |t|
 end
 #
@@ -293,8 +300,12 @@
 
 ###########################################
 # build source-distribution
-#
-binpkg=gen Package::Tgz, "packages","antargis-"+extendCommand($config,"system")+"-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => (sys["ext/*.so"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/)}
+#
+if isWindows
+    binpkg=gen Package::Zip, "packages","antargis-"+extendCommand($config,"system")+"-"+extendCommand($config,"version"), :files => (sys["ext/*.so"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/)}
+else
+    binpkg=gen Package::Tgz, "packages","antargis-"+extendCommand($config,"system")+"-"+extendCommand($config,"version"), :extension => ".tar.gz", :files => (sys["ext/*.so"]+sys["ruby/**/*.rb"]+sys["data/**/*"]+sys["*"]).select{|f|not (f=~/~/ or f=~/.xcf/)}
+end
 
 task :bindist=>[:extensions,binpkg.path] do |t| #"packages/antargis-"+extendCommand($config,"version")+".tar.gz"] do |t|
 end

Added: antargis/branches/rant/antargis.iss
===================================================================
--- antargis/branches/rant/antargis.iss	2007-07-29 13:15:31 UTC (rev 1153)
+++ antargis/branches/rant/antargis.iss	2007-07-29 14:45:01 UTC (rev 1154)
@@ -0,0 +1,66 @@
+; -- Example1.iss --
+; Demonstrates copying 3 files and creating an icon.
+
+; SEE THE DOCUMENTATION FOR DETAILS ON CREATING .ISS SCRIPT FILES!
+
+[Setup]
+AppName=Antargis
+AppVerName=Antargis 0.2.1.1
+DefaultDirName={pf}\Antargis
+DefaultGroupName=Antargis
+UninstallDisplayIcon={app}\Antargis.exe
+Compression=lzma/fast
+SolidCompression=yes
+;InfoAfterFile=c:\Antargis\readme.txt
+OutputBaseFilename=Antargis-0.2.1.1-setup
+AppPublisher=Antargis-Team
+AppPublisherURL=antargis.berlios.de
+AppVersion=0.2.1.1
+
+
+[Files]
+Source: "c:\antargis\rant\packages\antargis-windows-0.2.1.1\*"; DestDir: "{app}"; Flags:recursesubdirs
+
+[Icons]
+Name: "{group}\Antargis"; Filename: "{app}\Antargis.lnk" ; WorkingDir: "{app}"
+
+[Languages]
+Name: en; MessagesFile: "compiler:Default.isl"
+;Name: es; MessagesFile: "compiler:Languages\Spanish.isl"
+Name: de; MessagesFile: "compiler:Languages\German.isl"
+
+[UninstallDelete]
+Type: files; Name: "{app}\Antargis.lnk"
+Type: files; Name: "{app}\error.txt"
+Type: dirifempty; Name: "{app}"
+
+[Code]
+function NextButtonClick(CurPageID: Integer): Boolean;
+var
+  ResultCode: Integer;
+begin
+  case CurPageID of
+    wpSelectDir:
+      begin
+        CreateDir(ExpandConstant('{app}'));
+        CreateShellLink(
+        ExpandConstant('{app}\Antargis.lnk'),
+        'Antargis 0.1',
+        ExpandConstant('{app}\allinoneruby186.exe'),
+        ExpandConstant('"{app}\run.rb"'),
+        ExpandConstant('{app}'),
+          '',
+          0,
+          SW_SHOWNORMAL);
+      end;
+  end;
+
+  Result := True;
+end;
+
+
+procedure AfterMyProgInstall(S: String);
+begin
+  MsgBox('AfterMyProgInstall:' #13#13 'Setup just installed ' + S + ' as ' + CurrentFileName + '.', mbInformation, MB_OK);
+end;
+

Modified: antargis/branches/rant/build/configs/mingw32.rb
===================================================================
--- antargis/branches/rant/build/configs/mingw32.rb	2007-07-29 13:15:31 UTC (rev 1153)
+++ antargis/branches/rant/build/configs/mingw32.rb	2007-07-29 14:45:01 UTC (rev 1154)
@@ -7,7 +7,7 @@
 # 
 
 $config={
-	"system"=>"unix",
+	"system"=>"windows",
 	"CXX"=>"$(g++)",
 	"CC"=>"$(gcc)",
 	"SWIG"=>"$(swig)",

Modified: antargis/branches/rant/configure
===================================================================
--- antargis/branches/rant/configure	2007-07-29 13:15:31 UTC (rev 1153)
+++ antargis/branches/rant/configure	2007-07-29 14:45:01 UTC (rev 1154)
@@ -50,7 +50,7 @@
 		CFG.set("version",v)
 	end
 
-if $:.join("")=~/ruby1.8/
+if $:.join("")=~/1.8/
 	if isWindows
 		CFG.set("RUBYLIB","msvcrt-ruby18")
 	else



From davidkamphausen at mail.berlios.de  Sun Jul 29 19:39:54 2007
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 29 Jul 2007 19:39:54 +0200
Subject: [Antargis-svn] r1155 - antargis/branches
Message-ID: <200707291739.l6THdsMU013682@sheep.berlios.de>

Author: davidkamphausen
Date: 2007-07-29 19:39:54 +0200 (Sun, 29 Jul 2007)
New Revision: 1155

Added:
   antargis/branches/0.2.1/
Log:
A    svn+ssh://davidkamphausen at svn.berlios.de/svnroot/repos/antargis/antargis/branches/0.2.1


Copied: antargis/branches/0.2.1 (from rev 1154, antargis/branches/rant)



