From davidkamphausen at mail.berlios.de  Tue Jan  1 18:07:06 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 1 Jan 2008 18:07:06 +0100
Subject: [Antargis-svn] r1210 - antargis/tags
Message-ID: <200801011707.m01H76gP006599@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-01 18:07:05 +0100 (Tue, 01 Jan 2008)
New Revision: 1210

Added:
   antargis/tags/0.2.1.5/
Log:
A    svn+ssh://davidkamphausen at svn.berlios.de/svnroot/repos/antargis/antargis/tags/0.2.1.5


Copied: antargis/tags/0.2.1.5 (from rev 1209, antargis/trunk)



From davidkamphausen at mail.berlios.de  Sun Jan  6 17:08:39 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 6 Jan 2008 17:08:39 +0100
Subject: [Antargis-svn] r1211 - in antargis/trunk: . build build/swig ext
	ext/basic ext/game ext/video ruby
Message-ID: <200801061608.m06G8ddO003299@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-06 17:08:38 +0100 (Sun, 06 Jan 2008)
New Revision: 1211

Added:
   antargis/trunk/build/swig/
   antargis/trunk/build/swig/AGString.i
   antargis/trunk/build/swig/ag_data.i
   antargis/trunk/build/swig/ag_filename.i
   antargis/trunk/build/swig/ag_string.i
   antargis/trunk/build/swig/common.i
   antargis/trunk/build/swig/std_list.i
   antargis/trunk/build/swig/std_string.i
   antargis/trunk/build/swig/tests/
   antargis/trunk/ext/test/
Removed:
   antargis/trunk/build/AGString.i
   antargis/trunk/build/ag_data.i
   antargis/trunk/build/ag_filename.i
   antargis/trunk/build/ag_string.i
   antargis/trunk/build/common.i
   antargis/trunk/build/std_list.i
   antargis/trunk/build/std_string.i
Modified:
   antargis/trunk/TODO
   antargis/trunk/build/interface_template.rb
   antargis/trunk/ext/Rakefile
   antargis/trunk/ext/basic/ag_fs.cc
   antargis/trunk/ext/basic/templates.i
   antargis/trunk/ext/game/entity.cc
   antargis/trunk/ext/game/entity.h
   antargis/trunk/ext/game/height_map.cc
   antargis/trunk/ext/game/map.cc
   antargis/trunk/ext/video/ag_surface.cc
   antargis/trunk/ext/video/templates.i
   antargis/trunk/ruby/campaign.rb
   antargis/trunk/ruby/dialogs.rb
   antargis/trunk/ruby/editview.rb
   antargis/trunk/ruby/map.rb
Log:
* many changes concerning swig


Modified: antargis/trunk/TODO
===================================================================
--- antargis/trunk/TODO	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/TODO	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,3 +1,5 @@
+
+* fix saving - problem occurs only if game is loaded ? (in editor, too)
 * move build/*.rb files to build/unused_tools/* if they're not used
 * google for "/tmp/cciSLVG5.s:932678: Warning: .stabs: description field '1c216' too big, try a different debug format"
 
@@ -18,7 +20,6 @@
 * moveto doesn't really work with "near" (hljob)
 * heroes don't die in reasonable fashion - starving men too
 * add seasons
-* take food - near doesn't work - same for attack (in some cases?)
 
 * Spreading should be done only for men who need it!
 

Deleted: antargis/trunk/build/AGString.i
===================================================================
--- antargis/trunk/build/AGString.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/AGString.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,86 +0,0 @@
-//
-// SWIG typemaps for AGString
-// Luigi Ballabio
-// Apr 8, 2002
-//
-// Ruby implementation
-
-
-// ------------------------------------------------------------------------
-// AGString is typemapped by value
-// This can prevent exporting methods which return a string
-// in order for the user to modify it.
-// However, I think I'll wait until someone asks for it...
-// ------------------------------------------------------------------------
-
-%include exception.i
-
-%{
-#include <ag_string.h>
-%}
-
-//namespace std {
-
-    // Ruby wants class names to start with a capital letter
-    //%rename(String) AGString;
-    class AGString;
-
-    /* Overloading check */
-    %typemap(typecheck) AGString = char *;
-    %typemap(typecheck) const AGString & = char *;
-
-    %typemap(in) AGString {
-        if (TYPE($input) == T_STRING) {
-//            $1 = AGString(StringValuePtr($input));
-            $1 = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(in) const AGString & (AGString temp) {
-        if (TYPE($input) == T_STRING) {
-//            temp = AGString(StringValuePtr($input));
-            temp = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-            $1 = &temp;
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(out) AGString {
-        $result = rb_str_new($1.c_str(),$1.length());
-    }
-
-    %typemap(out) const AGString & {
-        $result = rb_str_new($1->c_str(),$1->length());
-    }
-
-    %typemap(directorin) AGString, const AGString &, AGString & "$input=rb_str_new2($1_name.c_str());";
-
-    %typemap(directorin) AGString *, const AGString * "$1_name->c_str()";
-    
-    %typemap(directorout) AGString {
-        if (TYPE($input) == T_STRING)
-//            $result = AGString(StringValuePtr($input));
-            $result = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-        else
-            throw Swig::DirectorTypeMismatchException("string expected");
-    }
-    
-    %typemap(directorout) const string & (AGString temp) {
-        if (TYPE($input) == T_STRING) {
-//            temp = AGString(StringValuePtr($input));
-            temp = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-            $result = &temp;
-        } else {
-            throw Swig::DirectorTypeMismatchException("string expected");
-        }
-    }
-
-    %typemap(throws) AGString, const AGString &
-        "rb_raise(rb_eRuntimeError, $1.c_str());";
-
-    %typemap(throws) AGString *, const AGString *
-        "rb_raise(rb_eRuntimeError, $1->c_str());";
-//}

Deleted: antargis/trunk/build/ag_data.i
===================================================================
--- antargis/trunk/build/ag_data.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/ag_data.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,82 +0,0 @@
-//
-// SWIG typemaps for std::string
-// Luigi Ballabio
-// Apr 8, 2002
-//
-// Ruby implementation
-
-
-// ------------------------------------------------------------------------
-// std::string is typemapped by value
-// This can prevent exporting methods which return a string
-// in order for the user to modify it.
-// However, I think I'll wait until someone asks for it...
-// ------------------------------------------------------------------------
-
-%include exception.i
-
-%{
-#include <ag_string.h>
-#include <ag_fs.h>
-%}
-
-
-    // Ruby wants class names to start with a capital letter
-    // %rename(String) string;
-    class AGData;
-
-    /* Overloading check */
-    %typemap(typecheck) AGData = char *;
-    %typemap(typecheck) const AGData & = char *;
-
-    %typemap(in) AGData {
-        if (TYPE($input) == T_STRING) {
-            $1 = AGData(RSTRING($input)->ptr,RSTRING($input)->len);
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(in) const AGData & (AGData temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGData(RSTRING($input)->ptr,RSTRING($input)->len);
-            $1 = &temp;
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(out) AGData {
-        $result = rb_str_new($1.c_str(),$1.length());
-    }
-
-    %typemap(out) const AGData & {
-        $result = rb_str_new($1->c_str(),$1->length());
-    }
-
-    %typemap(directorin) AGData, const AGData &, AGData & "$input=rb_str_new($1_name.c_str(),$1_name.length());";
-
-    %typemap(directorin) AGData *, const AGData * "$1_name->c_str()";
-    
-    %typemap(directorout) AGData {
-        if (TYPE($input) == T_STRING)
-            $result = AGData(RSTRING($input)->ptr,RSTRING($input)->len);
-        else
-            throw Swig::DirectorTypeMismatchException("string expected");
-    }
-    
-    %typemap(directorout) const AGData & (AGData temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGData(RSTRING($input)->ptr,RSTRING($input)->len);
-            $result = &temp;
-        } else {
-            throw Swig::DirectorTypeMismatchException("string expected");
-        }
-    }
-/*
-    %typemap(throws) AGData, const string &
-        "rb_raise(rb_eRuntimeError, $1.c_str());";
-
-    %typemap(throws) string *, const string *
-        "rb_raise(rb_eRuntimeError, $1->c_str());";
-*/

Deleted: antargis/trunk/build/ag_filename.i
===================================================================
--- antargis/trunk/build/ag_filename.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/ag_filename.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,82 +0,0 @@
-//
-// SWIG typemaps for std::string
-// Luigi Ballabio
-// Apr 8, 2002
-//
-// Ruby implementation
-
-
-// ------------------------------------------------------------------------
-// std::string is typemapped by value
-// This can prevent exporting methods which return a string
-// in order for the user to modify it.
-// However, I think I'll wait until someone asks for it...
-// ------------------------------------------------------------------------
-
-%include exception.i
-
-%{
-#include <ag_string.h>
-#include <ag_fs.h>
-%}
-
-
-    // Ruby wants class names to start with a capital letter
-    // %rename(String) string;
-    class AGFilename;
-
-    /* Overloading check */
-    %typemap(typecheck) AGFilename = char *;
-    %typemap(typecheck) const AGFilename & = char *;
-
-    %typemap(in) AGFilename {
-        if (TYPE($input) == T_STRING) {
-            $1 = AGFilename(RSTRING($input)->ptr,RSTRING($input)->len);
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(in) const AGFilename & (AGFilename temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGFilename(RSTRING($input)->ptr,RSTRING($input)->len);
-            $1 = &temp;
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(out) AGFilename {
-        $result = rb_str_new($1.c_str(),$1.length());
-    }
-
-    %typemap(out) const AGFilename & {
-        $result = rb_str_new($1->c_str(),$1->length());
-    }
-
-    %typemap(directorin) AGFilename, const AGFilename &, AGFilename & "$input=rb_str_new($1_name.c_str(),$1_name.length());";
-
-    %typemap(directorin) AGFilename *, const AGFilename * "$1_name->c_str()";
-    
-    %typemap(directorout) AGFilename {
-        if (TYPE($input) == T_STRING)
-            $result = AGFilename(RSTRING($input)->ptr,RSTRING($input)->len);
-        else
-            throw Swig::DirectorTypeMismatchException("string expected");
-    }
-    
-    %typemap(directorout) const AGFilename & (AGFilename temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGFilename(RSTRING($input)->ptr,RSTRING($input)->len);
-            $result = &temp;
-        } else {
-            throw Swig::DirectorTypeMismatchException("string expected");
-        }
-    }
-/*
-    %typemap(throws) AGFilename, const string &
-        "rb_raise(rb_eRuntimeError, $1.c_str());";
-
-    %typemap(throws) string *, const string *
-        "rb_raise(rb_eRuntimeError, $1->c_str());";
-*/

Deleted: antargis/trunk/build/ag_string.i
===================================================================
--- antargis/trunk/build/ag_string.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/ag_string.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,96 +0,0 @@
-//
-// SWIG typemaps for std::string
-// Luigi Ballabio
-// Apr 8, 2002
-//
-// Ruby implementation
-
-
-// ------------------------------------------------------------------------
-// std::string is typemapped by value
-// This can prevent exporting methods which return a string
-// in order for the user to modify it.
-// However, I think I'll wait until someone asks for it...
-// ------------------------------------------------------------------------
-
-%include exception.i
-
-%{
-#include <ag_string.h>
-%}
-
-
-    // Ruby wants class names to start with a capital letter
-%rename(String) AGString;
-class AGString;
-
-    /* Overloading check */
-    %typemap(typecheck) AGString = char *;
-    %typemap(typecheck) const AGString & = char *;
-
-    %typemap(in) AGString {
-        if (TYPE($input) == T_STRING) {
-            $1 = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(in) const AGString & (AGString temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-            $1 = &temp;
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(out) AGString {
-        $result = rb_str_new($1.c_str(),$1.length());
-    }
-
-    %typemap(out) const AGString & {
-        $result = rb_str_new($1->c_str(),$1->length());
-    }
-
-    %typemap(directorin) AGString, const AGString &, AGString & "$input=rb_str_new($1_name.c_str(),$1_name.length());";
-
-    %typemap(directorin) AGString *, const AGString * "$1_name->c_str()";
-    
-    %typemap(directorout) AGString {
-        if (TYPE($input) == T_STRING)
-            $result = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-        else
-            throw Swig::DirectorTypeMismatchException("string expected");
-    }
-    
-    %typemap(directorout) const AGString & (AGString temp) {
-        if (TYPE($input) == T_STRING) {
-            temp = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
-            $result = &temp;
-        } else {
-            throw Swig::DirectorTypeMismatchException("string expected");
-        }
-    }
-/*
-    %typemap(throws) AGString, const string &
-        "rb_raise(rb_eRuntimeError, $1.c_str());";
-
-    %typemap(throws) string *, const string *
-        "rb_raise(rb_eRuntimeError, $1->c_str());";
-*/
-
-%{
-AGString SWIG_RB2AGSTR(VALUE x) {
-    return AGString(RSTRING_PTR(x), RSTRING_LEN(x));
-}
-VALUE SWIG_AGSTR2RB(const AGString& s) {
-    return rb_str_new(s.data(), s.size());
-}
-%}
-namespace std
-{
-	specialize_std_vector(AGString,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
-	specialize_std_vector(AGFilename,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
-	specialize_std_vector(AGData,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
-}
\ No newline at end of file

Deleted: antargis/trunk/build/common.i
===================================================================
--- antargis/trunk/build/common.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/common.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,37 +0,0 @@
-%feature("director");
-%include "typemaps.i"
-%include "std_string.i"
-//%include "AGString.i"
-%include "std_vector.i"
-%include "std_pair.i"
-%include "std_map.i"
-%include "std_list.i"
-%include "ag_string.i"
-%include "ag_filename.i"
-%include "ag_data.i"
-
-%{
-#include <ag_rubyobj.h>
-
-SWIGRUNTIME VALUE
-AG_NewPointerObj(void *ptr, swig_type_info *type, int flags)
-{
-	AGRubyObject *o=(AGRubyObject*)ptr;
-#ifdef GCDEBUG
-	printf("AG_NewPointerObj o:0x%lx , ruby:0x%lx vl:0x%lx\n",o,o->mRubyObject,o->mRUBY);
-#endif
-	if(o->mRubyObject)
-		return o->mRUBY;
-
-	swig_type_info *t=SWIG_TypeDynamicCast(type,(void**)&o);
-
-	o->mRubyObject=true;
-	o->mRUBY=SWIG_NewPointerObj((void *) o, t,flags);
-#ifdef GCDEBUG
-	printf("NEW AG_NewPointerObj o:0x%lx , ruby:0x%lx vl:0x%lx\n",o,o->mRubyObject,o->mRUBY);
-#endif
-	return o->mRUBY;
-}
-
-%}
-

Modified: antargis/trunk/build/interface_template.rb
===================================================================
--- antargis/trunk/build/interface_template.rb	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/interface_template.rb	2008-01-06 16:08:38 UTC (rev 1211)
@@ -6,7 +6,7 @@
 %module(directors="1") #{moduleName}
 
 // include common (stdc++) thingies and set options
-%include "build/common.i"
+%include "build/swig/common.i"
 
 %{
 	void AG_Init_lib#{moduleName}();
@@ -44,7 +44,6 @@
 def interface_templateBAK(moduleName,files)
 <<EOT
 %module(directors="1") #{moduleName}
-//%include "build/common.i"
 
 
 

Deleted: antargis/trunk/build/std_list.i
===================================================================
--- antargis/trunk/build/std_list.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/std_list.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,452 +0,0 @@
-/* -----------------------------------------------------------------------------
- * See the LICENSE file for information on copyright, usage and redistribution
- * of SWIG, and the README file for authors - http://www.swig.org/release.html.
- *
- * std_vector.i
- *
- * SWIG typemaps for std::vector
- * ----------------------------------------------------------------------------- */
-
-%include <std_common.i>
-
-// ------------------------------------------------------------------------
-// std::list
-// 
-// The aim of all that follows would be to integrate std::list with 
-// Ruby as much as possible, namely, to allow the user to pass and 
-// be returned Ruby arrays
-// const declarations are used to guess the intent of the function being
-// exported; therefore, the following rationale is applied:
-// 
-//   -- f(std::list<T>), f(const std::list<T>&), f(const std::list<T>*):
-//      the parameter being read-only, either a Ruby array or a
-//      previously wrapped std::list<T> can be passed.
-//   -- f(std::list<T>&), f(std::list<T>*):
-//      the parameter must be modified; therefore, only a wrapped std::list
-//      can be passed.
-//   -- std::list<T> f():
-//      the list is returned by copy; therefore, a Ruby array of T:s 
-//      is returned which is most easily used in other Ruby functions
-//   -- std::list<T>& f(), std::list<T>* f(), const std::list<T>& f(),
-//      const std::list<T>* f():
-//      the list is returned by reference; therefore, a wrapped std::list
-//      is returned
-// ------------------------------------------------------------------------
-
-%{
-#include <list>
-#include <algorithm>
-#include <stdexcept>
-%}
-
-// exported class
-
-namespace std {
-
-    %mixin list "Enumerable";
-
-    template<class T> class list {
-        %typemap(in) list<T> {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                $1;
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    T* x;
-		    SWIG_ConvertPtr(o, (void **) &x, $descriptor(T *), 1);
-                    $1.push_back(*x);
-                }
-            } else {
-	        void *ptr;
-                SWIG_ConvertPtr($input, &ptr, $&1_descriptor, 1);
-                $1 = *(($&1_type) ptr);
-            }
-        }
-        %typemap(in) const list<T>& (std::list<T> temp),
-                     const list<T>* (std::list<T> temp) {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                $1 = &temp;
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    T* x;
-                    SWIG_ConvertPtr(o, (void **) &x, $descriptor(T *), 1);
-                    temp.push_back(*x);
-                }
-            } else {
-                SWIG_ConvertPtr($input, (void **) &$1, $1_descriptor, 1);
-            }
-        }
-        %typemap(out) list<T> {
-            $result = rb_ary_new2($1.size());
-            size_t j=0;
-            for($1_type::iterator i=$1.begin();i!=$1.end();i++,j++)
-            {
-                T* x = new T(*i);
-                assert(x);
-                // no AG_NewPointerObj needed, because object is definitely created above and thus has no mRubyObject defined
-                rb_ary_store($result,j,SWIG_NewPointerObj((void*)x,$descriptor(T*),1));
-            }
-            assert(j==$1.size());
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) list<T> {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    T* x;
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if ((SWIG_ConvertPtr(o,(void **) &x, 
-                                         $descriptor(T *),0)) != -1)
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $&1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) const list<T>&,
-                                          const list<T>* {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    T* x;
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if ((SWIG_ConvertPtr(o,(void **) &x, 
-                                         $descriptor(T *),0)) != -1)
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-      public:
-        list();
-        list(unsigned int size);
-        list(unsigned int size, const T& value);
-        list(const list<T> &);
-
-        %rename(__len__) size;
-        unsigned int size() const;
-        %rename("empty?") empty;
-        bool empty() const;
-        void clear();
-        %rename(push) push_back;
-        void push_back(const T& x);
-        %extend {
-            T pop() throw (std::out_of_range) {
-                if (self->size() == 0)
-                    throw std::out_of_range("pop from empty list");
-                T x = self->back();
-                self->pop_back();
-                return x;
-            }
-
-            void each() {
-	        for(std::list<T>::iterator i=self->begin();i!=self->end();i++) // without ptr
-                {
-		    rb_yield(AG_NewPointerObj((void*)&(*i),$descriptor(T*),0));
-                }
-            }
-        }
-    };
-
-    // Partial specialization for lists of pointers.  [ beazley ]
-
-    %mixin list<T*> "Enumerable";
-    template<class T> class list<T*> {
-        %typemap(in) list<T*> {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                $1 = std::list<T* >();//(size);
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    T* x;
-                    SWIG_ConvertPtr(o, (void **) &x, $descriptor(T *), 1);
-		    $1.push_back(x);
-                }
-            } else {
-                void *ptr;
-                SWIG_ConvertPtr($input, &ptr, $&1_descriptor, 1);
-                $1 = *(($&1_type) ptr);
-            }
-        }
-        %typemap(in) const list<T*>& (std::list<T*> temp),
-                     const list<T*>* (std::list<T*> temp) {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                temp = std::list<T* >();//(size);
-                $1 = &temp;
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    T* x;
-                    SWIG_ConvertPtr(o, (void **) &x, $descriptor(T *), 1);
-                    temp.push_back(x);
-                }
-            } else {
-                SWIG_ConvertPtr($input, (void **) &$1, $1_descriptor, 1);
-            }
-        }
-        %typemap(out) list<T*> {
-            $result = rb_ary_new2($1.size());
-            size_t j=0;
-             for($1_type::iterator i=$1.begin();i!=$1.end();i++,j++) {
-               rb_ary_store($result,j,AG_NewPointerObj(*i,$descriptor(T*),1));
-             }
-            assert(j==$1.size());
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) list<T*> {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    T* x;
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if ((SWIG_ConvertPtr(o,(void **) &x, 
-                                         $descriptor(T *),0)) != -1)
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T* >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $&1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) const list<T*>&,
-                                          const list<T*>* {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    T* x;
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if ((SWIG_ConvertPtr(o,(void **) &x, 
-                                         $descriptor(T *),0)) != -1)
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T* >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-      public:
-        list();
-        list(unsigned int size);
-        list(unsigned int size, T * &value);
-        list(const list<T*> &);
-
-        %rename(__len__) size;
-        unsigned int size() const;
-        %rename("empty?") empty;
-        bool empty() const;
-        void clear();
-        %rename(push) push_back;
-        void push_back(T* x);
-        %extend {
-            T* pop() throw (std::out_of_range) {
-                if (self->size() == 0)
-                    throw std::out_of_range("pop from empty list");
-                T* x = self->back();
-                self->pop_back();
-                return x;
-            }
-
-            void each() {
-                for(std::list<T*>::iterator i=self->begin();i!=self->end();i++) // with ptr
-                {
-                    rb_yield(AG_NewPointerObj(*i,$descriptor(T*),0));
-		}
-            }
-        }
-    };
-        
-
-    // specializations for built-ins
-
-    %define specialize_std_list(T,CHECK,CONVERT_FROM,CONVERT_TO)
-    %mixin list<T> "Enumerable";
-    template<> class list<T> {
-        %typemap(in) list<T> {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                $1 = std::list<T >();//(size);
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    if (CHECK(o))
-                        (($1_type &)$1)[i] = (T)(CONVERT_FROM(o));
-                    else
-                        rb_raise(rb_eTypeError,
-                                 "wrong argument type"
-                                 " (expected list<" #T ">)");
-                }
-            } else {
-	        void *ptr;
-                SWIG_ConvertPtr($input, &ptr, $&1_descriptor, 1);
-                $1 = *(($&1_type) ptr);
-            }
-        }
-        %typemap(in) const list<T>& (std::list<T> temp),
-                     const list<T>* (std::list<T> temp) {
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                temp = std::list<T >();//(size);
-                $1 = &temp;
-                for (unsigned int i=0; i<size; i++) {
-                    VALUE o = RARRAY_PTR($input)[i];
-                    if (CHECK(o))
-                        temp.push_back((T)(CONVERT_FROM(o)));
-                    else
-                        rb_raise(rb_eTypeError,
-                                 "wrong argument type"
-                                 " (expected list<" #T ">)");
-                }
-            } else {
-                SWIG_ConvertPtr($input, (void **) &$1, $1_descriptor, 1);
-            }
-        }
-        %typemap(out) list<T> {
-            $result = rb_ary_new2($1.size());
-            for (($1_type)::iterator i=$1.begin();i!=$1.end();i++) //unsigned int i=0; i<$1.size(); i++)
-                rb_ary_store($result,i,CONVERT_TO(*i));
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) list<T> {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if (CHECK(o))
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $&1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-        %typecheck(SWIG_TYPECHECK_LIST) const list<T>&,
-                                          const list<T>* {
-            /* native sequence? */
-            if (rb_obj_is_kind_of($input,rb_cArray)) {
-                unsigned int size = RARRAY_LEN($input);
-                if (size == 0) {
-                    /* an empty sequence can be of any type */
-                    $1 = 1;
-                } else {
-                    /* check the first element only */
-                    VALUE o = RARRAY_PTR($input)[0];
-                    if (CHECK(o))
-                        $1 = 1;
-                    else
-                        $1 = 0;
-                }
-            } else {
-                /* wrapped list? */
-                std::list<T >* v;
-                if (SWIG_ConvertPtr($input,(void **) &v, 
-                                    $1_descriptor,0) != -1)
-                    $1 = 1;
-                else
-                    $1 = 0;
-            }
-        }
-      public:
-        list();
-        list(unsigned int size);
-        list(unsigned int size, const T& value);
-        list(const list<T> &);
-
-        %rename(__len__) size;
-        unsigned int size() const;
-        %rename("empty?") empty;
-        bool empty() const;
-        void clear();
-        %rename(push) push_back;
-        void push_back(T x);
-        %extend {
-            T pop() throw (std::out_of_range) {
-                if (self->size() == 0)
-                    throw std::out_of_range("pop from empty list");
-                T x = self->back();
-                self->pop_back();
-                return x;
-            }
-		
-            void each() {
-		for(std::list<T>::iterator i=self->begin();i!=self->end();i++) // with ptr2
-                    rb_yield(CONVERT_TO(*i));
-            }
-        }
-    };
-    %enddef
-
-    specialize_std_list(bool,SWIG_BOOL_P,SWIG_RB2BOOL,SWIG_BOOL2RB);
-    specialize_std_list(char,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(int,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(short,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(long,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(unsigned char,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(unsigned int,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(unsigned short,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(unsigned long,FIXNUM_P,FIX2INT,INT2NUM);
-    specialize_std_list(double,SWIG_FLOAT_P,SWIG_NUM2DBL,rb_float_new);
-    specialize_std_list(float,SWIG_FLOAT_P,SWIG_NUM2DBL,rb_float_new);
-    specialize_std_list(std::string,SWIG_STRING_P,SWIG_RB2STR,SWIG_STR2RB);
-
-}
-

Deleted: antargis/trunk/build/std_string.i
===================================================================
--- antargis/trunk/build/std_string.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/build/std_string.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -1,86 +0,0 @@
-//
-// SWIG typemaps for std::string
-// Luigi Ballabio
-// Apr 8, 2002
-//
-// Ruby implementation
-
-
-// ------------------------------------------------------------------------
-// std::string is typemapped by value
-// This can prevent exporting methods which return a string
-// in order for the user to modify it.
-// However, I think I'll wait until someone asks for it...
-// ------------------------------------------------------------------------
-
-%include exception.i
-
-%{
-#include <string>
-%}
-
-namespace std {
-
-    // Ruby wants class names to start with a capital letter
-    %rename(String) string;
-    class string;
-
-    /* Overloading check */
-    %typemap(typecheck) string = char *;
-    %typemap(typecheck) const string & = char *;
-
-    %typemap(in) string {
-        if (TYPE($input) == T_STRING) {
-//            $1 = std::string(StringValuePtr($input));
-            $1 = std::string(RSTRING($input)->ptr,RSTRING($input)->len);
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(in) const string & (std::string temp) {
-        if (TYPE($input) == T_STRING) {
-//            temp = std::string(StringValuePtr($input));
-            temp = std::string(RSTRING($input)->ptr,RSTRING($input)->len);
-            $1 = &temp;
-        } else {
-            SWIG_exception(SWIG_TypeError, "not a string");
-        }
-    }
-
-    %typemap(out) string {
-        $result = rb_str_new($1.c_str(),$1.length());
-    }
-
-    %typemap(out) const string & {
-        $result = rb_str_new($1->c_str(),$1.length());
-    }
-
-    %typemap(directorin) string, const string &, string & "$input=rb_str_new2($1_name.c_str());";
-
-    %typemap(directorin) string *, const string * "$1_name->c_str()";
-    
-    %typemap(directorout) string {
-        if (TYPE($input) == T_STRING)
-//            $result = std::string(StringValuePtr($input));
-            $result = std::string(RSTRING($input)->ptr,RSTRING($input)->len);
-        else
-            throw Swig::DirectorTypeMismatchException("string expected");
-    }
-    
-    %typemap(directorout) const string & (std::string temp) {
-        if (TYPE($input) == T_STRING) {
-//            temp = std::string(StringValuePtr($input));
-            temp = std::string(RSTRING($input)->ptr,RSTRING($input)->len);
-            $result = &temp;
-        } else {
-            throw Swig::DirectorTypeMismatchException("string expected");
-        }
-    }
-
-    %typemap(throws) string, const string &
-        "rb_raise(rb_eRuntimeError, $1.c_str());";
-
-    %typemap(throws) string *, const string *
-        "rb_raise(rb_eRuntimeError, $1->c_str());";
-}

Copied: antargis/trunk/build/swig/AGString.i (from rev 1201, antargis/trunk/build/AGString.i)

Copied: antargis/trunk/build/swig/ag_data.i (from rev 1201, antargis/trunk/build/ag_data.i)

Copied: antargis/trunk/build/swig/ag_filename.i (from rev 1201, antargis/trunk/build/ag_filename.i)

Copied: antargis/trunk/build/swig/ag_string.i (from rev 1201, antargis/trunk/build/ag_string.i)
===================================================================
--- antargis/trunk/build/ag_string.i	2007-12-26 09:56:05 UTC (rev 1201)
+++ antargis/trunk/build/swig/ag_string.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -0,0 +1,113 @@
+//
+// SWIG typemaps for std::string
+// Luigi Ballabio
+// Apr 8, 2002
+//
+// Ruby implementation
+
+
+// ------------------------------------------------------------------------
+// std::string is typemapped by value
+// This can prevent exporting methods which return a string
+// in order for the user to modify it.
+// However, I think I'll wait until someone asks for it...
+// ------------------------------------------------------------------------
+
+%include exception.i
+
+%{
+#include <ag_string.h>
+%}
+
+
+// Ruby wants class names to start with a capital letter
+%rename(String) AGString;
+class AGString;
+
+    //
+    %typemap(typecheck) AGString = char *;
+    %typemap(typecheck) const AGString & = char *;
+
+    %typemap(in) AGString {
+        if (TYPE($input) == T_STRING) {
+            $1 = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
+        } else {
+            SWIG_exception(SWIG_TypeError, "not a string");
+        }
+    }
+
+    %typemap(in) const AGString & (AGString res) {
+        if (TYPE($input) == T_STRING) {
+            res = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
+            $1 = &res;
+        } else {
+            SWIG_exception(SWIG_TypeError, "not a string");
+        }
+    }
+
+    %typemap(out) AGString {
+        $result = rb_str_new($1.c_str(),$1.length());
+    }
+
+    %typemap(out) const AGString & {
+        $result = rb_str_new($1->c_str(),$1->length());
+    }
+
+    %typemap(directorin) AGString, const AGString &, AGString & "$input=rb_str_new($1_name.c_str(),$1_name.length());";
+
+    %typemap(directorin) AGString *, const AGString * "$1_name->c_str()";
+    
+    %typemap(directorout) AGString {
+        if (TYPE($input) == T_STRING)
+            $result = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
+        else
+            throw Swig::DirectorTypeMismatchException("string expected");
+    }
+    
+    %typemap(directorout) const AGString & (AGString res) {
+        if (TYPE($input) == T_STRING) {
+            res = AGString(RSTRING($input)->ptr,RSTRING($input)->len);
+            $result = &res;
+        } else {
+            throw Swig::DirectorTypeMismatchException("string expected");
+        }
+    }
+
+
+%{
+AGString SWIG_RB2AGSTR(VALUE x) {
+    return AGString(RSTRING_PTR(x), RSTRING_LEN(x));
+}
+VALUE SWIG_AGSTR2RB(const AGString& s) {
+    return rb_str_new(s.data(), s.size());
+}
+%}
+namespace std
+{
+	specialize_std_vector(AGString,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
+	specialize_std_vector(AGFilename,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
+	specialize_std_vector(AGData,SWIG_STRING_P,SWIG_RB2AGSTR,SWIG_AGSTR2RB);
+}
+
+
+
+/*
+%apply std::string { AGString };  
+%apply const std::string { const AGString }; 
+
+%apply std::string* { AGString* };  
+// Not defined yet 
+//%apply const std::string* { const AGString* }; 
+ 
+%apply std::string& { AGString& }; 
+%apply const std::string& { const AGString& };  
+*/
+/*
+
+%include <typemaps/std_string.swg>
+
+%naturalvar AGString;
+//typedef std::string AGString;
+class AGString:public std::string {
+};
+*/
\ No newline at end of file

Copied: antargis/trunk/build/swig/common.i (from rev 1201, antargis/trunk/build/common.i)
===================================================================
--- antargis/trunk/build/common.i	2007-12-26 09:56:05 UTC (rev 1201)
+++ antargis/trunk/build/swig/common.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -0,0 +1,37 @@
+%feature("director");
+%include "typemaps.i"
+%include "std_string.i"
+%include "std_vector.i"
+%include "std_pair.i"
+%include "std_map.i"
+%include "std_list.i"
+%include "ag_string_new.i"
+%include "ag_string.i"
+%include "ag_filename.i"
+%include "ag_data.i"
+
+%{
+#include <ag_rubyobj.h>
+
+SWIGRUNTIME VALUE
+AG_NewPointerObj(void *ptr, swig_type_info *type, int flags)
+{
+	AGRubyObject *o=(AGRubyObject*)ptr;
+#ifdef GCDEBUG
+	printf("AG_NewPointerObj o:0x%lx , ruby:0x%lx vl:0x%lx\n",o,o->mRubyObject,o->mRUBY);
+#endif
+	if(o->mRubyObject)
+		return o->mRUBY;
+
+	swig_type_info *t=SWIG_TypeDynamicCast(type,(void**)&o);
+
+	o->mRubyObject=true;
+	o->mRUBY=SWIG_NewPointerObj((void *) o, t,flags);
+#ifdef GCDEBUG
+	printf("NEW AG_NewPointerObj o:0x%lx , ruby:0x%lx vl:0x%lx\n",o,o->mRubyObject,o->mRUBY);
+#endif
+	return o->mRUBY;
+}
+
+%}
+

Copied: antargis/trunk/build/swig/std_list.i (from rev 1201, antargis/trunk/build/std_list.i)

Copied: antargis/trunk/build/swig/std_string.i (from rev 1201, antargis/trunk/build/std_string.i)

Modified: antargis/trunk/ext/Rakefile
===================================================================
--- antargis/trunk/ext/Rakefile	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/Rakefile	2008-01-06 16:08:38 UTC (rev 1211)
@@ -70,7 +70,7 @@
 	input=dir+"/interface.i"
 	cflags=$CONFIG["INCLUDEPATH"]+" "+$CONFIG["DEFINES"]+" -DAGEXPORT"
 	puts ""
-	cmd=$CONFIG["SWIG"]+" #{cflags} -ruby -c++ -M #{input} >#{output}"
+	cmd=$CONFIG["SWIG"]+" #{cflags} -ruby -c++ -Ibuild/swig -M #{input} >#{output}"
 	sh cmd
 	$?
 end
@@ -79,7 +79,7 @@
 	output=dir+"/swig.cc"
 	input=dir+"/interface.i"
 	cflags=$CONFIG["INCLUDEPATH"]+" "+$CONFIG["DEFINES"]+" -DAGEXPORT"
-	cmd=$CONFIG["SWIG"]+" #{cflags} -v -Wall -ruby -c++ -o #{output} #{input}"
+	cmd=$CONFIG["SWIG"]+" #{cflags} -v -Wall -ruby -c++ -Ibuild/swig -o #{output} #{input}"
 	puts ""
 	pp cmd
 	sh cmd
@@ -263,8 +263,22 @@
 task :library=>"ext/antargis.so" do
 end
 
-if SWIG_ENABLED
+if SWIG_ENABLED and false
+	mSwigDeps=Dir["ext/*/*.h"].select{|file|not file=~/swig/}
+	
+	# this can be used with a later version of rake - 0.7.1 makes problems with rules and more than one dependency
+	mSwigDepLambda=lambda{|t|
+		mSwigDeps
+	}
+	
+	task "ext/swig.cc" => mSwigDeps do
+		# FIXME
+		system($CONFIG["RUBY"]+" "+File.join("ext","create_interface_test.rb"))
+	end
 
+
+elsif SWIG_ENABLED
+
 	
 	def importsForInterface(name)
 		mdeps=[]
@@ -311,7 +325,7 @@
 		input.each{|filename|file.puts "%include \"#{filename}\""}
 		file.close
 		cflags=$CONFIG["INCLUDEPATH"]+" "+$CONFIG["DEFINES"]+" -DAGEXPORT"
-		cmd=$CONFIG["SWIG"]+" #{cflags} -v -Wall -ruby -c++ -o #{output} ext/interface.i"
+		cmd=$CONFIG["SWIG"]+" #{cflags} -v -Wall -ruby -c++ -Ibuild/swig -o #{output} ext/interface.i"
 		puts ""
 		sh cmd
 		$?

Modified: antargis/trunk/ext/basic/ag_fs.cc
===================================================================
--- antargis/trunk/ext/basic/ag_fs.cc	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/basic/ag_fs.cc	2008-01-06 16:08:38 UTC (rev 1211)
@@ -457,19 +457,19 @@
 {
 #ifdef WIN32
   if(GetFileAttributes(pName.c_str()) == INVALID_FILE_ATTRIBUTES)
-	return false;
+    return false;
   return true;
 #endif
 
   FILE *f=fopen(pName.c_str(),"r");
-	bool found=false;
+  bool found=false;
 	
   if(f)
     {
 			found=true;
       fclose(f);
     }
-	cdebug("file exists:"<<pName<<":"<<found);
+  //	cdebug("file exists:"<<pName<<":"<<found);
 
   return found;
 #ifdef USE_PHYSFS

Modified: antargis/trunk/ext/basic/templates.i
===================================================================
--- antargis/trunk/ext/basic/templates.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/basic/templates.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -8,6 +8,7 @@
 
 %template(StringVector) std::vector<std::string>;
 %template(AGStringVector) std::vector<AGString>;
+%template(AGStringUtf8Vector) std::vector<AGStringUtf8>;
 %template(AGFilenameVector) std::vector<AGFilename>;
 %template(AGVector2List) std::list<AGVector2>;
 

Modified: antargis/trunk/ext/game/entity.cc
===================================================================
--- antargis/trunk/ext/game/entity.cc	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/game/entity.cc	2008-01-06 16:08:38 UTC (rev 1211)
@@ -449,6 +449,15 @@
 {
   return "antEntity";
 }
+std::string AntEntity::xmlName2() const
+{
+  return "antEntity";
+}
+AGString AntEntity::xmlName3() const
+{
+  return "antEntity";
+}
+
 float AntEntity::getDirection() const
 {
   return mDir;

Modified: antargis/trunk/ext/game/entity.h
===================================================================
--- antargis/trunk/ext/game/entity.h	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/game/entity.h	2008-01-06 16:08:38 UTC (rev 1211)
@@ -151,6 +151,8 @@
 
     // saving and loading
     virtual AGString xmlName() const;
+    virtual std::string xmlName2() const;
+    virtual AGString xmlName3() const;
 
     virtual void saveXML(Node &node) const;
     virtual void loadXML(const Node &node);

Modified: antargis/trunk/ext/game/height_map.cc
===================================================================
--- antargis/trunk/ext/game/height_map.cc	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/game/height_map.cc	2008-01-06 16:08:38 UTC (rev 1211)
@@ -376,14 +376,19 @@
       std::string name=mName.replace(".antlvl",".hmap");
       BinaryFileOut os(name);
       saveBinary(os);
+      cdebug("try setting filename:");
       node.set("filename",AGString(name));
+      cdebug("done");
     }
   else
     {
       BinaryStringOut os;
       saveBinary(os);
+      cdebug("try setting data:");
       Node &n=node.addChild("data");
+      cdebug("done1");
       n.setContent(AGString(binaryToHex(os.getString())));
+      cdebug("done2");
     }
 }
 

Modified: antargis/trunk/ext/game/map.cc
===================================================================
--- antargis/trunk/ext/game/map.cc	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/game/map.cc	2008-01-06 16:08:38 UTC (rev 1211)
@@ -91,13 +91,18 @@
 void AntMap::saveXML(Node &node) const
 {
   HeightMap::saveXML(node);
-  
+  cdebug("height map saving ready");
   // entities
   std::list<AntEntity*>::const_iterator i=mEntities.begin();
   for(;i!=mEntities.end();i++)
     {
-      Node &child=node.addChild((*i)->xmlName());
+      cdebug("try saving child1 "<<*i);
+			AGString s=(*i)->xmlName();
+			cdebug("xmlName:"<<s);
+      Node &child=node.addChild(s);
+      cdebug("try saving child2 "<<*i);
       (*i)->saveXML(child);
+      cdebug("try saving child3 "<<*i);
     }
   
 }
@@ -364,11 +369,12 @@
 }
 void AntMap::saveMap(const AGFilename &pFilename)
 {
+	CTRACE;
   mName=AGString(pFilename);
   Document d;
   Node &root=d.root();
   root.setName("antargisLevel");
-  //  cdebug("root:"<<root);
+  cdebug("root:"<<&root);
   saveXML(root);
 
   AGData c=d.toString();

Modified: antargis/trunk/ext/video/ag_surface.cc
===================================================================
--- antargis/trunk/ext/video/ag_surface.cc	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/video/ag_surface.cc	2008-01-06 16:08:38 UTC (rev 1211)
@@ -328,8 +328,8 @@
 
 AGSurface AGSurface::load(const std::string &pFilename)
 {
-  cdebug("load:"<<pFilename);
-	assertGL;
+  //  cdebug("load:"<<pFilename);
+  assertGL;
   assert(&getScreen());
 
   assertGL;

Modified: antargis/trunk/ext/video/templates.i
===================================================================
--- antargis/trunk/ext/video/templates.i	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ext/video/templates.i	2008-01-06 16:08:38 UTC (rev 1211)
@@ -0,0 +1,6 @@
+typedef struct SDL_Color {
+	Uint8 r;
+	Uint8 g;
+	Uint8 b;
+	Uint8 unused;
+} SDL_Color;

Modified: antargis/trunk/ruby/campaign.rb
===================================================================
--- antargis/trunk/ruby/campaign.rb	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ruby/campaign.rb	2008-01-06 16:08:38 UTC (rev 1211)
@@ -36,7 +36,7 @@
 			raise 'Problem - $campaign not net' if $campaign==nil
 			sname=$campaign.savename.gsub("antcmp","antlvl")
 			n.set("current",sname)
-			getMap.saveMap(sname)
+			@app.getMap.saveMap(sname)
 		end
 	end
 

Modified: antargis/trunk/ruby/dialogs.rb
===================================================================
--- antargis/trunk/ruby/dialogs.rb	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ruby/dialogs.rb	2008-01-06 16:08:38 UTC (rev 1211)
@@ -259,7 +259,9 @@
 			filename=filename.to_s+".antlvl"
 		end
 		hide
-		getApp.getMap.saveMap(getSavePath+"/"+filename)
+		map=getApp.getMap
+		path=getSavePath+"/"+filename
+		map.saveMap(path)
 		takeSmallScreenshot.save(getSavePath+"/#{filename.gsub("antlvl","png")}")
 		getApp.getMap.pause=false
 		AntSound.setNormalVolumeWave

Modified: antargis/trunk/ruby/editview.rb
===================================================================
--- antargis/trunk/ruby/editview.rb	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ruby/editview.rb	2008-01-06 16:08:38 UTC (rev 1211)
@@ -31,6 +31,8 @@
 		$scene=getScene
 	
 		@layout=AGLayout.new(nil)
+
+		@layout.setApp(self)
 		@layout.loadXML(loadFile("data/gui/layout/edit_layout.xml"))
 		
 		setMainWidget(@layout)

Modified: antargis/trunk/ruby/map.rb
===================================================================
--- antargis/trunk/ruby/map.rb	2008-01-01 17:07:05 UTC (rev 1210)
+++ antargis/trunk/ruby/map.rb	2008-01-06 16:08:38 UTC (rev 1211)
@@ -326,7 +326,9 @@
 		super
 	end
 
-	def saveXML(n)
+	def saveXMLTRest(n)
+		puts self
+		pp n
 		super(n)
 		@players.each{|player|
 			c=n.addChild(player.xmlName)



From davidkamphausen at mail.berlios.de  Sun Jan  6 17:09:29 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 6 Jan 2008 17:09:29 +0100
Subject: [Antargis-svn] r1212 - antargis/trunk/build/swig/tests
Message-ID: <200801061609.m06G9TWc003413@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-06 17:09:29 +0100 (Sun, 06 Jan 2008)
New Revision: 1212

Added:
   antargis/trunk/build/swig/tests/Rakefile
   antargis/trunk/build/swig/tests/entity_interface.i
   antargis/trunk/build/swig/tests/interface.i
   antargis/trunk/build/swig/tests/test.cc
   antargis/trunk/build/swig/tests/test.hh
   antargis/trunk/build/swig/tests/test.rb
Log:
* added new test-files


Added: antargis/trunk/build/swig/tests/Rakefile
===================================================================
--- antargis/trunk/build/swig/tests/Rakefile	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/Rakefile	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,35 @@
+require 'rake/clean.rb'
+require 'rake/testtask.rb'
+
+
+load '../../../antconfig.rb'
+
+
+CFLAGS="-I../../../ext/basic "+$CONFIG["CFLAGS"]+" "+$CONFIG["INCLUDEPATH"]
+#`sdl-config --cflags`.chomp
+
+task :default=>['test.so'] do
+end
+
+task 'test.so' => ["test.oo","swig.oo","../../../ext/basic/ag_string.oo"] do |t|
+	sh "g++ -shared -o #{t.name} #{t.prerequisites}"
+end
+
+rule '.oo'=>'.cc' do |t|
+	sh "g++ -o #{t.name} -c #{t.prerequisites} #{CFLAGS}"
+end
+
+rule 'swig.cc' => lambda{[]} do |t|
+	sh "swig -Wall -c++ -ruby -DAGEXPORT -I.. -I../../../ext/game -I../../../ext/basic -o #{t.name} #{t.name.gsub("swig.cc","interface.i")}"
+end
+
+task 'entity.so' => 'entity_swig.cc' do
+end
+
+Rake::TestTask.new do |t|
+	t.libs << "test.so"
+	t.test_files = FileList['test*.rb']
+	t.verbose = true
+end
+
+CLEAN << Dir["*swig.cc"]+Dir["*.oo"]
\ No newline at end of file

Added: antargis/trunk/build/swig/tests/entity_interface.i
===================================================================
--- antargis/trunk/build/swig/tests/entity_interface.i	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/entity_interface.i	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,14 @@
+%module(directors="1") "entity"
+
+//%include "common.i"
+%include "ag_string.i"
+%{
+#include "ag_rubyobj.h"
+#include "height_map.h"
+#include "map.h"
+#include "entity.h"
+%}
+%include "ag_rubyobj.h"
+%include "height_map.h"
+%include "map.h"
+%include "entity.h"
\ No newline at end of file

Added: antargis/trunk/build/swig/tests/interface.i
===================================================================
--- antargis/trunk/build/swig/tests/interface.i	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/interface.i	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,8 @@
+%module(directors="1") "test"
+
+//%include "common.i"
+%include "ag_string.i"
+%{
+#include "test.hh"
+%}
+%include "test.hh"
\ No newline at end of file

Added: antargis/trunk/build/swig/tests/test.cc
===================================================================
--- antargis/trunk/build/swig/tests/test.cc	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/test.cc	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,55 @@
+#include "test.hh"
+#include <iostream>
+
+A::A(const AGString &a):m(a)
+{
+	std::cout<<"A::A:"<<a<<std::endl;
+}
+void A::callTest(const AGString &a)
+{
+	std::cout<<"A::callTest:"<<a<<std::endl;
+}
+
+AGString A::returnTest() const
+{
+	return "returnTest";
+}
+
+AGString A::virtReturnTest()
+{
+	return "virtReturnTest";
+}
+
+const AGString &A::virtReturnTest2() const
+{
+	return m;
+}
+
+void A::callVirt()
+{
+	std::cout<<virtReturnTest()<<std::endl;
+}
+
+void A::callTest2(AGString &a)
+{
+	a="ksjklkjdslkj";
+}
+
+void A::ptrTest(A *a)
+{
+	std::cout<<a->m<<std::endl;
+}
+
+
+
+C::C(const AGString &a):A(a)
+{
+	std::cout<<"C::C:"<<a<<std::endl;
+}
+
+
+
+AGString C::virtReturnTest()
+{
+	return "virtReturnTest2";
+}

Added: antargis/trunk/build/swig/tests/test.hh
===================================================================
--- antargis/trunk/build/swig/tests/test.hh	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/test.hh	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,28 @@
+#ifndef TEST_HH
+#define TEST_HH
+
+#include <ag_string.h>
+
+class A
+{
+	AGString m;
+	public:
+  A(const AGString &a);
+	virtual ~A() {}
+  void callTest(const AGString &a);
+  void callTest2(AGString &a);
+	void ptrTest(A *a);
+	AGString returnTest() const;
+  virtual AGString virtReturnTest();
+  virtual const AGString &virtReturnTest2() const;
+	void callVirt();
+};
+
+class C:public A
+{
+	public:
+  C(const AGString &a);
+  virtual AGString virtReturnTest();
+};
+
+#endif

Added: antargis/trunk/build/swig/tests/test.rb
===================================================================
--- antargis/trunk/build/swig/tests/test.rb	2008-01-06 16:08:38 UTC (rev 1211)
+++ antargis/trunk/build/swig/tests/test.rb	2008-01-06 16:09:29 UTC (rev 1212)
@@ -0,0 +1,38 @@
+#!/usr/bin/env ruby
+
+require 'test/unit'
+require 'test.so'
+require 'pp'
+include Test
+
+class B<C
+	def virtReturnTest
+		"muh"
+	end
+end
+
+class MTest<Test::Unit::TestCase
+
+	def test_main
+		a=A.new("Hallo")
+		a.callTest("111")
+		assert(a.returnTest=="returnTest") 
+		assert(a.virtReturnTest=="virtReturnTest")
+		assert(a.virtReturnTest2=="Hallo")
+		pp a.virtReturnTest
+		
+		b=B.new("Hallo")
+		b.callTest("111")
+		assert(b.virtReturnTest=="muh")
+		pp b.returnTest
+		pp b.virtReturnTest
+
+		puts "a.callVirt:"
+		a.callVirt
+		puts "b.callVirt:"
+		b.callVirt
+
+		a.ptrTest(a)
+	
+	end
+end
\ No newline at end of file



From davidkamphausen at mail.berlios.de  Sun Jan  6 17:10:25 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 6 Jan 2008 17:10:25 +0100
Subject: [Antargis-svn] r1213 - antargis/trunk/ext
Message-ID: <200801061610.m06GAPJm003556@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-06 17:10:24 +0100 (Sun, 06 Jan 2008)
New Revision: 1213

Added:
   antargis/trunk/ext/create_interface_test.rb
Log:
* new swig-interface generator (not ready yet)


Added: antargis/trunk/ext/create_interface_test.rb
===================================================================
--- antargis/trunk/ext/create_interface_test.rb	2008-01-06 16:09:29 UTC (rev 1212)
+++ antargis/trunk/ext/create_interface_test.rb	2008-01-06 16:10:24 UTC (rev 1213)
@@ -0,0 +1,101 @@
+#!/usr/bin/env ruby
+
+Dir.chdir(File.split(__FILE__)[0])
+
+require 'pp'
+require 'sort_files.rb'
+
+def vputs(*s)
+end
+
+def grep(pattern,filename)
+	file=File.open(filename)
+	result=(file.read=~pattern)
+	file.close
+	result
+end
+
+def getAllHeadersWithSwig
+	Dir["*/*.h"].select{|file|grep(/INCLUDE_SWIG/,file)}.select{|file|not file=~/swig/}
+end
+
+files=getAllHeadersWithSwig
+
+sorter=ParsedClasses.new(files,files)
+
+files= sorter.getFileList
+
+interfaceI=File.open("interface_new.i","w")
+
+interfaceI.puts '%module(directors="1") antargis'
+interfaceI.puts '%trackobjects;'
+
+interfaceI.puts "%{"
+
+files.each{|file|
+	interfaceI.puts "#include \"#{file}\""
+}
+interfaceI.puts "%}"
+interfaceI.puts '%include "common.i"'
+
+Dir["*/template*.i"].each{|file|
+	interfaceI.puts "%include \"#{file}\""
+}
+
+
+interfaceI.puts "/// markers"
+
+sorter.getAllRubyClasses.each{|c|
+	interfaceI.puts "%markfunc #{c} \"general_markfunc\""
+	interfaceI.puts "%feature(\"director\") #{c};"
+}
+
+allRubyClasses=rubyClasses=sorter.getAllRubyClasses
+
+myDerivations={}
+sorter.deriveList.each{|child,parent|
+	if parent
+		myDerivations[parent]||=[]
+		myDerivations[parent] << child
+	end
+}
+
+#
+# FIXME: return to multi-module - put derivation info into a map - together with casting function
+#
+myDerivations.each{|parent,children|
+	interfaceI.puts "%{"
+	interfaceI.puts "swig_type_info *#{parent}_dynamic_cast(void **p) {"
+	interfaceI.puts "	#{parent} *a=(#{parent}*)(*p);"
+	children.each{|child|
+		interfaceI.puts "	{"
+		interfaceI.puts "		#{child} *b=dynamic_cast<#{child}*>(a);"
+		interfaceI.puts "		if(b) {"
+		interfaceI.puts "			*p=(void*)b;"
+		interfaceI.puts "			return SWIGTYPE_p_#{child};"
+		interfaceI.puts "		}"
+		interfaceI.puts "	}"
+	}
+	interfaceI.puts "	return 0;"
+	interfaceI.puts "}"
+	interfaceI.puts "%}"
+	interfaceI.puts "%apply SWIGTYPE *DYNAMIC { #{parent} * };"
+	#interfaceI.puts "%typemap(out) #{parent} * = SWIGTYPE *DYNAMIC;"
+	#interfaceI.puts "%typemap(directorin) #{parent} * = SWIGTYPE *DYNAMIC;"
+	interfaceI.puts "DYNAMIC_CAST(SWIGTYPE_p_#{parent}, #{parent}_dynamic_cast);"
+}
+
+
+
+files.each{|file|
+	interfaceI.puts "%include \"#{file}\""
+}
+
+
+interfaceI.close
+
+# FIXME
+run="swig -Wall -DAGEXPORT -I/usr/include/SDL -ruby -c++ -o swig.cc -I../build/swig interface_new.i"
+
+system(run)
+



From davidkamphausen at mail.berlios.de  Tue Jan 22 20:57:07 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 22 Jan 2008 20:57:07 +0100
Subject: [Antargis-svn] r1214 - in antargis/trunk: . build data/gui/layout
	ext/3dengine ext/basic ext/game ruby ruby/editor
	ruby/entities ruby/gui ruby/jobs
Message-ID: <200801221957.m0MJv74r005043@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-22 20:57:06 +0100 (Tue, 22 Jan 2008)
New Revision: 1214

Added:
   antargis/trunk/ruby/editor/test/
Modified:
   antargis/trunk/Rakefile
   antargis/trunk/build/create_interface.rb
   antargis/trunk/data/gui/layout/savedialog.xml
   antargis/trunk/ext/3dengine/anim_mesh.cc
   antargis/trunk/ext/3dengine/anim_mesh.h
   antargis/trunk/ext/3dengine/headers.hh
   antargis/trunk/ext/3dengine/mesh.cc
   antargis/trunk/ext/3dengine/mesh.h
   antargis/trunk/ext/3dengine/mesh_2d.cc
   antargis/trunk/ext/3dengine/mesh_2d.h
   antargis/trunk/ext/basic/ag_messageobject.cc
   antargis/trunk/ext/game/ant_app.cc
   antargis/trunk/ruby/ant_models.rb
   antargis/trunk/ruby/ant_path.rb
   antargis/trunk/ruby/ant_player.rb
   antargis/trunk/ruby/ant_tools.rb
   antargis/trunk/ruby/antargislib.rb
   antargis/trunk/ruby/editor/dialogs.rb
   antargis/trunk/ruby/editor/ent_list.rb
   antargis/trunk/ruby/editview.rb
   antargis/trunk/ruby/entities/ant_manbase.rb
   antargis/trunk/ruby/gui/ag_tools.rb
   antargis/trunk/ruby/jobs/ant_hljob_base.rb
   antargis/trunk/ruby/map_generator.rb
Log:
* some bugfixes/improvements


Modified: antargis/trunk/Rakefile
===================================================================
--- antargis/trunk/Rakefile	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/Rakefile	2008-01-22 19:57:06 UTC (rev 1214)
@@ -13,6 +13,7 @@
 require 'rubygems'
 require 'rake/gempackagetask.rb'
 require 'rake/packagetask.rb'
+require 'spec/rake/spectask'
 
 DATA_FILES=Dir["data/**/*"].select{|file|not (file=~/svn/ or file=~/xcf/ or file=~/\.svg/)}
 RUBY_FILES=Dir["ruby/**/*.rb"]+Dir["*.rb"]+Dir["antargis"]
@@ -97,4 +98,14 @@
 	p.package_files += PKG_FILES+BINARY_FILES
 end
 
-end
\ No newline at end of file
+end
+
+
+
+# rspec
+Spec::Rake::SpecTask.new do |t|
+	t.spec_files = FileList['ruby/**/spec_*.rb']
+	t.warning = true
+	#t.rcov = true
+	t.spec_opts=["--format html:spec_output.html"]
+end

Modified: antargis/trunk/build/create_interface.rb
===================================================================
--- antargis/trunk/build/create_interface.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/build/create_interface.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -400,14 +400,20 @@
 
 classList=parsedClasses.getAllClasses
 # normal typemaps
-classList.each{|c|
-	file.puts "%typemap(directorout) #{c} {"
-	file.puts " #{c} *b;"
-	file.puts " Data_Get_Struct($input,#{c},b);"
-	file.puts " $result=*b;"
-	file.puts "}"
-}
 
+
+# FIXME
+# 
+
+# 
+# classList.each{|c|
+# 	file.puts "%typemap(directorout) #{c} {"
+# 	file.puts " #{c} *b;"
+# 	file.puts " Data_Get_Struct($input,#{c},b);"
+# 	file.puts " $result=*b;"
+# 	file.puts "}"
+# }
+
 file.puts "%typemap(directorout) Uint8 {"
 file.puts " $result=NUM2INT($input);"
 file.puts "}"

Modified: antargis/trunk/data/gui/layout/savedialog.xml
===================================================================
--- antargis/trunk/data/gui/layout/savedialog.xml	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/data/gui/layout/savedialog.xml	2008-01-22 19:57:06 UTC (rev 1214)
@@ -1,5 +1,5 @@
 <?xml version="1.0"?>
-<layout name="OptionsMenu">
+<layout name="SaveDialog">
 	<table cols="3" rows="3"><!-- center window -->
 		<colsize col="1" fixed="400"/>
 		<rowsize row="1" fixed="90"/>

Modified: antargis/trunk/ext/3dengine/anim_mesh.cc
===================================================================
--- antargis/trunk/ext/3dengine/anim_mesh.cc	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/anim_mesh.cc	2008-01-22 19:57:06 UTC (rev 1214)
@@ -73,7 +73,7 @@
 
 
 AnimMesh::AnimMesh(Scene *pScene,AnimMeshData *data):
-  SceneNode(pScene,AGVector4(),data->bbox()),
+  MeshBase(pScene,AGVector4(),data->bbox()),
   mData(data),mMatrices(data->bones.size()+1),mShaderMatrices(20)
 {
   curKey=0;

Modified: antargis/trunk/ext/3dengine/anim_mesh.h
===================================================================
--- antargis/trunk/ext/3dengine/anim_mesh.h	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/anim_mesh.h	2008-01-22 19:57:06 UTC (rev 1214)
@@ -4,6 +4,7 @@
 // INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
 
 #include "scene.h"
+#include "mesh_base.h"
 #include "ag_surface.h"
 #include "ag_geometry.h"
 #include "scenenode.h"
@@ -19,7 +20,7 @@
    AnimMesh is a skeleton animated mesh.
    It support either shader-based and cpu-based animation.
 */
-class AGEXPORT AnimMesh:public SceneNode
+class AGEXPORT AnimMesh:public MeshBase
 {
   AnimMeshData *mData;
   size_t curKey;

Modified: antargis/trunk/ext/3dengine/headers.hh
===================================================================
--- antargis/trunk/ext/3dengine/headers.hh	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/headers.hh	2008-01-22 19:57:06 UTC (rev 1214)
@@ -62,12 +62,13 @@
 #include "ext/3dengine/scenenode.h"
 #include "ext/3dengine/mesh_2d_data.h"
 #include "ext/3dengine/anim_mesh_data.h"
+#include "ext/3dengine/mesh_base.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/boa_3d_wireframe.h"
 #include "ext/3dengine/mesh.h"
 #include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/scene.h"
 #include "ext/3dengine/anim_mesh.h"
-#include "ext/3dengine/boa_3d_wireframe.h"
 #include "ext/3dengine/ag_glwidget.h"
 #include "ext/3dengine/ant_camera.h"
 #include "ext/3dengine/mesh_optimizer.h"
@@ -78,12 +79,13 @@
 %include "ext/3dengine/scenenode.h"
 %include "ext/3dengine/mesh_2d_data.h"
 %include "ext/3dengine/anim_mesh_data.h"
+%include "ext/3dengine/mesh_base.h"
+%include "ext/3dengine/ant_particle.h"
+%include "ext/3dengine/scene.h"
+%include "ext/3dengine/boa_3d_wireframe.h"
 %include "ext/3dengine/mesh.h"
 %include "ext/3dengine/mesh_2d.h"
-%include "ext/3dengine/ant_particle.h"
-%include "ext/3dengine/scene.h"
 %include "ext/3dengine/anim_mesh.h"
-%include "ext/3dengine/boa_3d_wireframe.h"
 %include "ext/3dengine/ag_glwidget.h"
 %include "ext/3dengine/ant_camera.h"
 %include "ext/3dengine/mesh_optimizer.h"

Modified: antargis/trunk/ext/3dengine/mesh.cc
===================================================================
--- antargis/trunk/ext/3dengine/mesh.cc	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/mesh.cc	2008-01-22 19:57:06 UTC (rev 1214)
@@ -15,7 +15,7 @@
 //////////////////////////////////////////////////////////////////////
 
 Mesh::Mesh(Scene *pScene):
-  SceneNode(pScene,AGVector4(),AGBox3())
+  MeshBase(pScene,AGVector4(),AGBox3())
 {
   mData=0;
   mRotation=0;
@@ -25,7 +25,7 @@
 }
 
 Mesh::Mesh(Scene *pScene,MeshData &data,const AGVector4 &pPos,float pRot):
-  SceneNode(pScene,pPos,data.bbox())
+  MeshBase(pScene,pPos,data.bbox())
 {
   mData=&data;
   mRotation=pRot;

Modified: antargis/trunk/ext/3dengine/mesh.h
===================================================================
--- antargis/trunk/ext/3dengine/mesh.h	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/mesh.h	2008-01-22 19:57:06 UTC (rev 1214)
@@ -4,6 +4,7 @@
 // INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
 
 #include "scene.h"
+#include "mesh_base.h"
 #include "vertex_array.h"
 
 #include <map>
@@ -16,7 +17,7 @@
     Actual drawing is done by MeshData.
 
 */
-class AGEXPORT Mesh:public SceneNode
+class AGEXPORT Mesh:public MeshBase
 {
   MeshData *mData;
   float mRotation;

Modified: antargis/trunk/ext/3dengine/mesh_2d.cc
===================================================================
--- antargis/trunk/ext/3dengine/mesh_2d.cc	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/mesh_2d.cc	2008-01-22 19:57:06 UTC (rev 1214)
@@ -3,11 +3,11 @@
 #include <ag_painter.h>
 
 Mesh2D::Mesh2D(Scene2D *pScene):
-  SceneNode(pScene,AGVector4(),AGBox3())
+  MeshBase(pScene,AGVector4(),AGBox3())
 {
 }
 Mesh2D::Mesh2D(Scene2D *pScene,Mesh2DData &data,const AGVector4 &pPos,float pRot):
-  SceneNode(pScene,pPos,data.bbox()),
+  MeshBase(pScene,pPos,data.bbox()),
   mData(&data)
 {
 }

Modified: antargis/trunk/ext/3dengine/mesh_2d.h
===================================================================
--- antargis/trunk/ext/3dengine/mesh_2d.h	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/3dengine/mesh_2d.h	2008-01-22 19:57:06 UTC (rev 1214)
@@ -5,9 +5,10 @@
 
 #include "scenenode.h"
 #include "scene_2d.h"
+#include "mesh_base.h"
 #include "mesh_2d_data.h"
 
-class AGEXPORT Mesh2D:public SceneNode
+class AGEXPORT Mesh2D:public MeshBase
 {
  public:
   Mesh2D(Scene2D *pScene);

Modified: antargis/trunk/ext/basic/ag_messageobject.cc
===================================================================
--- antargis/trunk/ext/basic/ag_messageobject.cc	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/basic/ag_messageobject.cc	2008-01-22 19:57:06 UTC (rev 1214)
@@ -255,6 +255,10 @@
 
 bool AGSignal::signal(AGEvent *m)
 {
+  CTRACE;
+  //cdebug("event:"<<*m);
+  //  cdebug("listeners:"<<mListeners.size());
+  // cdebug("simplelist:"<<mSimpleListeners.size());
   m->setName(mName);
   std::set<AGListener*>::iterator i=mListeners.begin();
   bool value=false;
@@ -270,6 +274,7 @@
       if((*j)->signal(m))
 	value=true;
     }
+  // cdebug("value:"<<value);
 
   return value;
 }

Modified: antargis/trunk/ext/game/ant_app.cc
===================================================================
--- antargis/trunk/ext/game/ant_app.cc	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ext/game/ant_app.cc	2008-01-22 19:57:06 UTC (rev 1214)
@@ -92,6 +92,7 @@
 	    {
 	      STACKTRACE;
 	      AGVector2 p=e->getMousePosition();
+        cdebug("p:"<<p);
 	      PickResult nodes=scene.pick(p[0],p[1],1,1);
 
 	      eventClick(nodes,e->getButton());

Modified: antargis/trunk/ruby/ant_models.rb
===================================================================
--- antargis/trunk/ruby/ant_models.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/ant_models.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -163,9 +163,9 @@
 			:deco=>{
 				[:floor_deco]=>["data/models/floor.ant2",0.5,"data/textures/splats/stones1a.png"],
 			},
-			:twig=>{	
-				[]=>"twig"
-			},
+ 			:twig=>{	
+ 				[]=>"twig"
+ 			},
 			:decomesh=>{ # FIXME: remove this and the class, too ??
 				[]=>"ant_coach"
 			},
@@ -231,6 +231,7 @@
 		scenenode=nil
 		if mesh
 			if mesh.is_a?(Array)
+				pp mesh
 				ant2name=mesh[0]
 				scale=mesh[1]
 				pngname=mesh[2]
@@ -250,6 +251,7 @@
 			else
 				ant2name="data/models/"+mesh+".ant2"
 				pngname="data/textures/models/"+mesh+".png"
+				pngname="" unless fileExists(pngname)
 				name=mesh
 				angle||=getStaticModelRotation(name)
 

Modified: antargis/trunk/ruby/ant_path.rb
===================================================================
--- antargis/trunk/ruby/ant_path.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/ant_path.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -61,21 +61,21 @@
 
 	def displayPathfindingGraph(map,scene)
 		return
-		colors={:normal=>AGVector4.new(1,0,0,1),:overWater=>AGVector4.new(1,1,0,1)}
-		width=2
-		MODES.each{|mode|
-			wireframe=Boa3dWireframe.new(scene,colors[mode],width)
-			(0..(@graph[mode].edges-1)).each{|i|
-				edge=@graph[mode].getEdgePosition(i)
-				a=edge[0]
-				b=edge[1]
-				a=AGVector3.new(a.x,a.y,map.getHeight(a.x,a.y)+0.15)
-				b=AGVector3.new(b.x,b.y,map.getHeight(b.x,b.y)+0.15)
-				wireframe.addLine(a,b)
-			}
-			scene.addNode(wireframe)
-			width+=2
-		}
+		# 		colors={:normal=>AGVector4.new(1,0,0,1),:overWater=>AGVector4.new(1,1,0,1)}
+		# 		width=2
+		# 		MODES.each{|mode|
+		# 			wireframe=Boa3dWireframe.new(scene,colors[mode],width)
+		# 			(0..(@graph[mode].edges-1)).each{|i|
+		# 				edge=@graph[mode].getEdgePosition(i)
+		# 				a=edge[0]
+		# 				b=edge[1]
+		# 				a=AGVector3.new(a.x,a.y,map.getHeight(a.x,a.y)+0.15)
+		# 				b=AGVector3.new(b.x,b.y,map.getHeight(b.x,b.y)+0.15)
+		# 				wireframe.addLine(a,b)
+		# 			}
+		# 			scene.addNode(wireframe)
+		# 			width+=2
+		# 		}
 	end
 
 	def displayPath(path,color=AGVector4.new(1,1,0,1))

Modified: antargis/trunk/ruby/ant_player.rb
===================================================================
--- antargis/trunk/ruby/ant_player.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/ant_player.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -229,7 +229,7 @@
 end
 
 class AntOldConqueringPlayer<AntComputerPlayer
-	def initialize(name)
+	def initialize(map,name)
 		super
 		@mode=:rest
 	end
@@ -246,7 +246,7 @@
 end
 
 class AntConqueringPlayer<AntComputerPlayer
-	def initialize(name)
+	def initialize(map,name)
 		super
 		@mode=:rest
 	end

Modified: antargis/trunk/ruby/ant_tools.rb
===================================================================
--- antargis/trunk/ruby/ant_tools.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/ant_tools.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -6,6 +6,8 @@
 		$meshes={}
 	end
 	if not $meshes[id]
+		pp file,zoom,texture,shadow
+		raise "Texture-file not found!" unless (fileExists(texture) or texture=="")
 		$meshes[id]=MeshData.new(file,zoom,texture,shadow)
 	end
 	return $meshes[id]

Modified: antargis/trunk/ruby/antargislib.rb
===================================================================
--- antargis/trunk/ruby/antargislib.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/antargislib.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -255,6 +255,7 @@
 end
 
 class AGStringUtf8
+	alias  :oldIndex :[]
 	def [](range)
 		if range.is_a?(Range)
 			ma=range.max

Modified: antargis/trunk/ruby/editor/dialogs.rb
===================================================================
--- antargis/trunk/ruby/editor/dialogs.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/editor/dialogs.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -18,8 +18,9 @@
 # License along with this program.
 #
 class AntEditPropDialog<AntDialog
-	def initialize(parent,ent)
+	def initialize(parent,ent,map)
 		super(parent,"data/gui/layout/editpropdialog.xml")
+		@map=map
 		@ent=ent
 		menCountW=getChild("MenCount")
 		nameW=getChild("AntName")
@@ -34,7 +35,7 @@
 
 		# init player-list
 		plist=getChild("Player")
-		players=getMap.players
+		players=@map.players
 		playernames=["NONE"]
 		playernames+=players.collect{|p|p.getName} if ent.is_a?(AntBoss)
 		playernames.each{|n|
@@ -113,8 +114,9 @@
 
 class AntPlayerEditDialog<AGLayout
 	include AGHandler
-	def initialize(parent)
-		super
+	def initialize(parent,map)
+		super(parent)
+		@map=map
 		loadXML(loadFile("data/gui/layout/editor_players_dialog.xml"))
 		@players={}
 		@list=getChild("playerList")
@@ -145,8 +147,8 @@
 			messageBox("Error","Please enter a new player-name. This already exists!",MB_OK)
 		else
 			type=eval(getChild("playerType").getSelectedID)
-			player=type.new(name)
-			getMap.players.push(player)
+			player=type.new(@map,name)
+			@map.players.push(player)
 			initPlayerNames
 		end
 		return true
@@ -184,7 +186,7 @@
 	def initPlayerNames
 		@list.clearList
 		@players={}
-		getMap.players.each{|p|
+		@map.players.each{|p|
 			@list.insertItem(p.name,p.name)
 			@players[p.name]=p
 		}

Modified: antargis/trunk/ruby/editor/ent_list.rb
===================================================================
--- antargis/trunk/ruby/editor/ent_list.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/editor/ent_list.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -25,12 +25,6 @@
 		@entType=nil
 		@classes=getDescendantsOfClass(AntRubyEntity)
 		@wptrs={}
-		if false		
-			@classes=@classes.select{|n|
-				fn="data/gui/editor/entities/#{n}.png"
-				File.exists?(fn)
-			}
-		end
 
 		group=AGRadioGroup.new(self,getRect.origin)
 		group.setName("EntListGroup")
@@ -73,8 +67,6 @@
 	end
 	def eventSelected(e)
 		c=eval(e.getCaller.getName)
-		puts c
-		c
 		@entType=c
 		@selWidget=e.getCaller
 		sigSelected(e)
@@ -92,19 +84,13 @@
 end
 
 class AntEntListCreator<AGLayoutCreator
-# 	def initialize()
-# 		super("antEntList")
-# 	end
 	def create(parent,rect,node)
 		e=AntEntListWidget.new(parent,rect)
 		e.setName(node.get("name"))
 		puts node.get("name")
 		setResult e
-		#raise 1
-		#return e
 	end
 end
 getLayoutFactory.addCreator("antEntList",AntEntListCreator.new)
 
 
-#$antEntListCreator=AntEntListCreator.new

Modified: antargis/trunk/ruby/editview.rb
===================================================================
--- antargis/trunk/ruby/editview.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/editview.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -67,6 +67,7 @@
 		@layout.getChild("editHeight").setChecked(true)
 		@layout.getChild("entitiesTab").entType=AntHero
 		setTab("terrain")
+		puts "EditView inizalizing ready."
 	end
 	
 	def eventNewMap
@@ -277,6 +278,8 @@
 		if not c.nil?
 			@modifier="addEntity"
 			@type=c
+			@layout.getChild("rubber").setChecked(false)
+			@layout.getChild("pointer").setChecked(false)
 		end
 		return true
 	end
@@ -297,22 +300,18 @@
 			return
 		end
 		puts "ADDENTITY"
-		#pos=getMarkerPos
 		dorand=true
 		if @type==AntDeco
-			tree=@type.new(@decoType)
+			tree=@type.new(@map, at decoType)
 			if @decoType=="floor" or @decoType=="block"
 				dorand=false
 			end
 		elsif @type==AntHero
-			tree=@type.new
+			tree=@type.new(@map)
 			tree.setAppearance(@appearance)
 		else
-			puts "TYPE:", at type
-			tree=@type.new
+			tree=@type.new(@map)
 		end
-		puts "type:"
-		puts tree
 		tree.setPos(AGVector2.new(pos.x,pos.y))
 		getMap.insertEntity(tree)
 	end
@@ -325,7 +324,7 @@
 			node=res.node
 			puts "NODE:"
 			puts node
-			if node.class==Mesh
+			if node.is_a?(MeshBase)
 				ent=getMap.getEntity(node)
 				if ent
 					editProperties(ent)
@@ -343,7 +342,7 @@
 	end
 	
 	def editProperties(ent)
-		d=AntEditPropDialog.new($screen,ent)
+		d=AntEditPropDialog.new($screen,ent, at map)
 		$screen.addChild(d)
 	end
 	
@@ -351,7 +350,7 @@
 		puts "DOING RUBBER"
 		list.each{|res|
 			mesh=res.node
-			if mesh.class==Mesh
+			if mesh.is_a?(MeshBase)
 				ent=getMap.getEntity(mesh)
 				if ent
 					getMap.removeEntity(ent)

Modified: antargis/trunk/ruby/entities/ant_manbase.rb
===================================================================
--- antargis/trunk/ruby/entities/ant_manbase.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/entities/ant_manbase.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -257,10 +257,7 @@
 
 private
 	def sendAngel
+		# FIXME: create mesh for angels ??
 		return # do not send angels - they don't have meshes anyway
-		e=AntAngel.new
-		e.setPos(getPos2D)
-		getMap.insertEntity(e)
-		#getMap.endChange
 	end
 end
\ No newline at end of file

Modified: antargis/trunk/ruby/gui/ag_tools.rb
===================================================================
--- antargis/trunk/ruby/gui/ag_tools.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/gui/ag_tools.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -76,8 +76,10 @@
 	end
 	# event dispatcher
 	def signal(e)
+		pp e
 		@handlers||={}
 		mcaller=e.getCaller
+		pp mcaller
 		evName=makeHandlerName(mcaller,e.getName)
 		#callerName=e.getCaller.getName
 		#evName=callerName+":"+e.getName

Modified: antargis/trunk/ruby/jobs/ant_hljob_base.rb
===================================================================
--- antargis/trunk/ruby/jobs/ant_hljob_base.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/jobs/ant_hljob_base.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -67,11 +67,11 @@
 
 	def trace
 		return
-		if @hero.nil?
-			puts "TRACE #{caller[0]} #{self}"
-		else
-			puts "TRACE #{caller[0]} #{self} #{hero} #{getTime}"
-		end
+# 		if @hero.nil?
+# 			puts "TRACE #{caller[0]} #{self}"
+# 		else
+# 			puts "TRACE #{caller[0]} #{self} #{hero} #{getTime}"
+# 		end
 	end
 
 	def kill

Modified: antargis/trunk/ruby/map_generator.rb
===================================================================
--- antargis/trunk/ruby/map_generator.rb	2008-01-06 16:10:24 UTC (rev 1213)
+++ antargis/trunk/ruby/map_generator.rb	2008-01-22 19:57:06 UTC (rev 1214)
@@ -157,7 +157,7 @@
 				map.setTerrain(x,y,tt,r)
 				if r>0.97
 					# add tree
-					t=AntGrass.new
+					t=AntGrass.new(map)
 					t.setPos(AGVector2.new(x,y))
 					map.insertEntity(t)
 				end
@@ -193,7 +193,7 @@
 				map.setTerrain(x,y,tt,r)
 				if r>0.97 and map.getTerrain(x,y,ROCK)<0.3
 					# add tree
-					t=AntTree.new
+					t=AntTree.new(map)
 					t.setPos(AGVector2.new(x,y))
 					map.insertEntity(t)
 				end



From davidkamphausen at mail.berlios.de  Tue Jan 22 20:58:32 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Tue, 22 Jan 2008 20:58:32 +0100
Subject: [Antargis-svn] r1215 - in antargis/trunk/ruby: . editor editor/spec
Message-ID: <200801221958.m0MJwWHK005199@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-22 20:58:32 +0100 (Tue, 22 Jan 2008)
New Revision: 1215

Added:
   antargis/trunk/ruby/editor/spec/
   antargis/trunk/ruby/editor/spec/spec_editor.rb
   antargis/trunk/ruby/editor_app.rb
Log:
* missing files


Added: antargis/trunk/ruby/editor/spec/spec_editor.rb
===================================================================
--- antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-22 19:57:06 UTC (rev 1214)
+++ antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-22 19:58:32 UTC (rev 1215)
@@ -0,0 +1,71 @@
+Dir.chdir(File.split(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])[0])
+puts Dir.pwd
+
+require 'ruby/gui/testing.rb'
+
+require 'ruby/editor_app.rb'
+
+
+describe "MapEditor" do
+	include GuiTest
+	before(:all) do
+		@app=makeTestAppClass(AntEditorApp).new(1024,768)
+		@mainWidget=@app.getMainWidget
+		@app.step
+	end
+	it "should run" do
+		1.should == 1
+	end
+
+	it "should create a clear map when using the new-dialog" do
+		new=widget("new")
+		new.visible.should be_true
+		new.click
+		dialog=widget("NewDialog")
+		dialog.visible.should be_true
+
+		okButton=dialog.child("ok")
+		okButton.visible.should be_true
+		okButton.click
+		@app.step
+		widget("NewDialog").valid.should be_false
+		@app.step
+	end
+
+	it "should add trees to the empty map" do
+		entitiesButton=widget("entities")
+		entitiesButton.should be_a_kind_of(AGRadio)
+		entitiesButton.click
+		entitiesList=widget("entitiesTab")
+		entitiesList.should be_an_instance_of(AntEntListWidget)
+		entitiesList.should be_visible
+		fir=entitiesList.child("AntFir")
+		fir.should be_an_instance_of(AGRadio)
+		fir.isChecked.should be_false
+		fir.click
+		entitiesList.entType.should == AntFir
+		@app.getMap.should have_exactly(0).getAllEntities
+		clickScreen(700,200)
+		@app.getMap.should have_exactly(1).getAllEntities
+		clickScreen(710,210)
+		@app.getMap.should have_exactly(2).getAllEntities
+	end
+	it "should display the player-dialog" do
+		playerButton=widget("playerButton")
+		playerButton.should be_an_instance_of(AGButton)
+		playerButton.click
+		playerDialog=widget("PlayersDialog")
+		playerDialog.should be_visible
+	end
+
+	it "should be ok to save" do
+		widget("saveButton").click
+		widget("SaveDialog").should be_a_kind_of(AGWidget)
+		widget("SaveDialog").should be_visible
+		while true
+			@app.step
+		end
+	end
+
+
+end
\ No newline at end of file

Added: antargis/trunk/ruby/editor_app.rb
===================================================================
--- antargis/trunk/ruby/editor_app.rb	2008-01-22 19:57:06 UTC (rev 1214)
+++ antargis/trunk/ruby/editor_app.rb	2008-01-22 19:58:32 UTC (rev 1215)
@@ -0,0 +1,136 @@
+#!/usr/bin/env ruby
+#
+# Copyright (c) 2005 by David Kamphausen. All rights reserved.
+#
+# game.rb
+# by David Kamphausen (david.kamphausen at web.de)
+#
+# The "Antargis" project, including all files needed to compile it,
+# is free software; you can redistribute it and/or use it and/or modify it
+# under the terms of the GNU General Public License as published
+# by the Free Software Foundation; either version 2 of the License,
+# or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+#
+# You should have received a copy of the GNU General Public
+# License along with this program.
+#
+
+#!/usr/bin/ruby
+
+$programDir=File.split(__FILE__)[0]
+# add programdir to path
+$:.push($programDir)
+["entities","widgets"].each{|subdir|
+	$:.push(File.join($programDir,subdir))
+}
+
+require 'antargislib.rb'
+
+require 'dialogs.rb'
+require 'entities.rb'
+require 'map.rb'
+require 'view.rb'
+require 'editview.rb'
+require 'map_generator.rb'
+require 'editor/dialogs.rb'
+
+
+def getSavePath
+	"data/levels"
+end
+
+class AntEditorApp < AntRubyEditView
+	def initialize(sw,sh)
+		super(sw,sh,nil) #AntRubyMap.new(64,64))
+		$app=self	
+		@map=AntRubyMap.new(self,getScene,128,128)
+		@map.setHeight(-0.5)
+
+		addHandler(@layout.getChild("quit"),:sigClick,:eventQuit)
+		
+		addHandler(@layout.getChild("doGen"),:sigClick,:eventGenerateDialog)
+
+		addHandler(@layout.getChild("loadButton"),:sigClick,:load)
+		addHandler(@layout.getChild("saveButton"),:sigClick,:save)
+
+		addHandler(@layout.getChild("playerButton"),:sigClick,:editPlayers)
+		
+		@miniMap=@layout.getChild("miniMap")
+		@miniMap.setMap(getMap)
+		@miniMap.setScene(getScene)
+		
+		$screen=@layout
+		
+		#eventGenerate
+	end
+
+	def getMap
+		@map
+	end
+
+	def eventGenerateDialog
+		@layout.addChild(dialog=AntEditGeneratorDialog.new(@layout,GeneratorParameters.new))
+		addHandler(dialog,:sigGenerate,:eventGenerate)
+		@generatorDialog=dialog
+	end
+	def eventGenerate
+		map=getMap
+		getMap.setHeight(-0.5)
+		ps=GeneratorParameters.new
+		ps.readFromDialog(@generatorDialog)
+
+		if true
+			generateMap(getMap,ps)
+		end
+		return true
+	end
+	
+	def eventFrame(time)
+		super(time)
+		getScene.advance(time)
+		return true
+	end
+	
+	def eventIdle
+		delay(20)
+		return true
+	end
+	
+	# signals	
+	def eventQuit(e)
+		@layout.addChild(AntQuitDialog.new(@layout))
+		return true
+	end
+	def eventPause(e)
+		if not getMap().paused then
+			@layout.addChild(AntPauseDialog.new(@layout))
+		else
+			getMap().unpause
+		end
+		return true
+	end
+	def eventOptions(e)
+		@layout.addChild(AntOptionsDialog.new(@layout))
+		return true
+	end
+
+	def editPlayers
+		@layout.addChild(AntPlayerEditDialog.new(@layout, at map))
+		return true
+	end
+	
+	def enableEdit
+		toEditIsoView(@layout.getChild("mainView")).toggleEdit
+	end
+	def save
+		@layout.addChild(AntSaveDialog.new(@layout))
+	end
+	def load
+		@layout.addChild(AntLoadDialog.new(@layout))
+	end
+	
+end



From davidkamphausen at mail.berlios.de  Sat Jan 26 19:52:19 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 26 Jan 2008 19:52:19 +0100
Subject: [Antargis-svn] r1216 - in antargis/trunk: . data/gui/layout
	ext/3dengine ext/gui ruby ruby/editor/spec ruby/gui ruby/spec
Message-ID: <200801261852.m0QIqJUb010398@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-26 19:52:15 +0100 (Sat, 26 Jan 2008)
New Revision: 1216

Added:
   antargis/trunk/ext/3dengine/mesh_base.cc
   antargis/trunk/ext/3dengine/mesh_base.h
   antargis/trunk/ruby/spec/spec_basic.rb
   antargis/trunk/ruby/spec/spec_call.rb
   antargis/trunk/ruby/spec/spec_campaign.rb
   antargis/trunk/ruby/spec/spec_menu.rb
Modified:
   antargis/trunk/Rakefile
   antargis/trunk/antargis
   antargis/trunk/data/gui/layout/campaign.xml
   antargis/trunk/data/gui/layout/options.xml
   antargis/trunk/ext/gui/ag_application.cc
   antargis/trunk/ext/gui/ag_application.h
   antargis/trunk/ext/gui/ag_widget.cc
   antargis/trunk/ext/gui/ag_widget.h
   antargis/trunk/ruby/campaign.rb
   antargis/trunk/ruby/editor/spec/spec_editor.rb
   antargis/trunk/ruby/gui/ag_tools.rb
   antargis/trunk/ruby/intro.rb
   antargis/trunk/ruby/mainmenu.rb
Log:
* some fixes
* missing files
* some more specs


Modified: antargis/trunk/Rakefile
===================================================================
--- antargis/trunk/Rakefile	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/Rakefile	2008-01-26 18:52:15 UTC (rev 1216)
@@ -106,6 +106,6 @@
 Spec::Rake::SpecTask.new do |t|
 	t.spec_files = FileList['ruby/**/spec_*.rb']
 	t.warning = true
-	#t.rcov = true
+	t.rcov = true
 	t.spec_opts=["--format html:spec_output.html"]
 end

Modified: antargis/trunk/antargis
===================================================================
--- antargis/trunk/antargis	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/antargis	2008-01-26 18:52:15 UTC (rev 1216)
@@ -5,6 +5,17 @@
 Dir.chdir(File.split(__FILE__)[0])
 
 require 'ruby/intro.rb'
+require 'ruby/mainmenu.rb'
 
 
+if getConfig.get("intro")!="false"
+	app=IntroApp.new
+	app.run
+end
+
+# run menu
+app=AntMenuApp.new
+app.run
+
+
 MyLocalizer.finalize
\ No newline at end of file

Modified: antargis/trunk/data/gui/layout/campaign.xml
===================================================================
--- antargis/trunk/data/gui/layout/campaign.xml	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/data/gui/layout/campaign.xml	2008-01-26 18:52:15 UTC (rev 1216)
@@ -1,5 +1,5 @@
 <?xml version="1.0"?>
-<layout geometry="(0,0,1024,768)" name="MainMenu">
+<layout geometry="(0,0,1024,768)" name="CampaignMenu">
 	<table cols="1" rows="4">
 		<colsize col="0" relative="1"/>
 		<rowsize row="0" fixed="200"/>

Modified: antargis/trunk/data/gui/layout/options.xml
===================================================================
--- antargis/trunk/data/gui/layout/options.xml	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/data/gui/layout/options.xml	2008-01-26 18:52:15 UTC (rev 1216)
@@ -1,5 +1,5 @@
 <?xml version="1.0"?>
-<layout geometry="(0,0,1024,768)" name="MainMenu">
+<layout geometry="(0,0,1024,768)" name="OptionsMenu">
 	<table cols="1" rows="4">
 		<colsize col="0" relative="1"/>
 		<rowsize row="0" fixed="200"/>

Added: antargis/trunk/ext/3dengine/mesh_base.cc
===================================================================
--- antargis/trunk/ext/3dengine/mesh_base.cc	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/3dengine/mesh_base.cc	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,6 @@
+#include "mesh_base.h"
+
+MeshBase::MeshBase(SceneBase *s,const AGVector4 &pPos,const AGBox3 &pBox):
+  SceneNode(s,pPos,pBox)
+{
+}

Added: antargis/trunk/ext/3dengine/mesh_base.h
===================================================================
--- antargis/trunk/ext/3dengine/mesh_base.h	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/3dengine/mesh_base.h	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,21 @@
+#ifndef __MESH_BASE_H
+#define __MESH_BASE_H
+
+// INCLUDE_SWIG - used to filter, which files are included in swig-interfacing
+
+#include "scene.h"
+
+#include <map>
+
+
+/** Meshbase is a common base class for all types of meshes 
+*/
+class AGEXPORT MeshBase:public SceneNode
+{
+ public:
+  MeshBase(SceneBase *s,const AGVector4 &pPos,const AGBox3 &pBox);
+};
+
+#endif
+
+

Modified: antargis/trunk/ext/gui/ag_application.cc
===================================================================
--- antargis/trunk/ext/gui/ag_application.cc	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/gui/ag_application.cc	2008-01-26 18:52:15 UTC (rev 1216)
@@ -577,3 +577,8 @@
 {
   return mCursor==0;
 }
+
+bool AGApplication::isRunning() const
+{
+  return mRunning;
+}

Modified: antargis/trunk/ext/gui/ag_application.h
===================================================================
--- antargis/trunk/ext/gui/ag_application.h	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/gui/ag_application.h	2008-01-26 18:52:15 UTC (rev 1216)
@@ -109,6 +109,7 @@
   void redraw();
 
   virtual void tryQuit();
+  bool isRunning() const;
 
   long getTicks() const;
   void delay(int ms);

Modified: antargis/trunk/ext/gui/ag_widget.cc
===================================================================
--- antargis/trunk/ext/gui/ag_widget.cc	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/gui/ag_widget.cc	2008-01-26 18:52:15 UTC (rev 1216)
@@ -364,13 +364,17 @@
 	      if(canFocus())
 		gainFocus();
 
-	      return (eventMouseClick(e) || sigClick(e));
+	      return doClick(e);
 
 	    }
 	}
     }
   return false;
+}
 
+bool AGWidget::doClick(AGEvent *e)
+{
+  return (eventMouseClick(e) || sigClick(e));
 }
 
 bool AGWidget::eventMouseClick(AGEvent *m)

Modified: antargis/trunk/ext/gui/ag_widget.h
===================================================================
--- antargis/trunk/ext/gui/ag_widget.h	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ext/gui/ag_widget.h	2008-01-26 18:52:15 UTC (rev 1216)
@@ -117,6 +117,8 @@
 
   bool processEvent(AGEvent *event);
 
+	bool doClick(AGEvent *e);
+
   AGSignal sigMouseEnter;
   AGSignal sigMouseLeave;
   AGSignal sigClick;

Modified: antargis/trunk/ruby/campaign.rb
===================================================================
--- antargis/trunk/ruby/campaign.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/campaign.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -1,3 +1,4 @@
+require 'ant_local.rb'
 
 # Campaigning
 #################################

Modified: antargis/trunk/ruby/editor/spec/spec_editor.rb
===================================================================
--- antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -1,3 +1,4 @@
+if false
 Dir.chdir(File.split(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])[0])
 puts Dir.pwd
 
@@ -59,13 +60,26 @@
 	end
 
 	it "should be ok to save" do
+
+
 		widget("saveButton").click
-		widget("SaveDialog").should be_a_kind_of(AGWidget)
-		widget("SaveDialog").should be_visible
-		while true
-			@app.step
-		end
+
+
+		saveDialog=widget("SaveDialog")
+
+
+		saveDialog.should be_a_kind_of(AGWidget)
+		saveDialog.should be_visible
+		filename=saveDialog.child("Filename")
+		filename.should be_a_kind_of(AGEdit)
+		filename.setText(AGStringUtf8.new("mytestfile"))
+		okButton=saveDialog.child("ok")
+		okButton.should be_a_kind_of(AGButton)
+		okButton.click
+		File.should be_exists(getWriteDir+"/data/levels/mytestfile.png")
+		File.should be_exists(getWriteDir+"/data/levels/mytestfile.antlvl")
 	end
 
 
+end
 end
\ No newline at end of file

Modified: antargis/trunk/ruby/gui/ag_tools.rb
===================================================================
--- antargis/trunk/ruby/gui/ag_tools.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/gui/ag_tools.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -22,25 +22,6 @@
 # This file contains some helper functions to provide easier event-Handling in ruby.
 # Have a look at AGHandler for more information.
 
-
-# checks if libantargis is already loaded
-def hasLibantargis
-	begin
-		x=eval("Antargis")
-	rescue
-		return false
-	end
-	return true
-	#puts x
-	#x!=nil
-end
-
-# if libantargis was not yet loaded, try loading libantargisgui alone
-if not hasLibantargis
-	require 'antargisgui'
-	include Antargisgui
-end
-
 # some old abbrevs
 AGPoint=AGVector2
 AGRect=AGRect2

Modified: antargis/trunk/ruby/intro.rb
===================================================================
--- antargis/trunk/ruby/intro.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/intro.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -155,11 +155,11 @@
 	end
 	
 end
-
-app=IntroApp.new
-
-
-if getConfig.get("intro")!="false"
-  app.run
-end
-require 'ruby/mainmenu.rb'
+# 
+# app=IntroApp.new
+# 
+# 
+# if getConfig.get("intro")!="false"
+#   app.run
+# end
+# require 'ruby/mainmenu.rb'

Modified: antargis/trunk/ruby/mainmenu.rb
===================================================================
--- antargis/trunk/ruby/mainmenu.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/mainmenu.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -343,7 +343,7 @@
 
 	def eventFullscreen
 		getMain.getVideo.initVideo(getMain.getVideo.realWidth,getMain.getVideo.realHeight,32,(not getMain.getVideo.fullscreen),true,1024,768)
-		getConfig.set("fullscreen",getMain.fullscreen.to_s)
+		getConfig.set("fullscreen",getMain.getVideo.fullscreen.to_s)
 		return true
 	end
 
@@ -488,7 +488,4 @@
 
 end
 
-app=AntMenuApp.new
 
-app.run
-

Added: antargis/trunk/ruby/spec/spec_basic.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_basic.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/spec/spec_basic.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,14 @@
+require 'ruby/antargislib.rb'
+require 'ruby/gui/ag_tools.rb'
+
+describe "Array.shuffle" do
+	it "should really shuffle an array (in a 100 trials)" do
+		tries=100
+		a=[1,2,3,4,5]
+		while tries>0
+			break if a!=a.shuffle
+			tries-=1
+		end
+		tries.should >0
+	end
+end
\ No newline at end of file

Added: antargis/trunk/ruby/spec/spec_call.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_call.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/spec/spec_call.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,42 @@
+require 'ruby/spec_helper.rb'
+
+def globalTestFunction
+  "myFunc"
+end
+
+describe "Call-predicate in spec-helper" do
+  it "should work with global functions" do
+    globalTestFunction.should == "myFunc"
+    lambda {globalTestFunction.should be_nil}.should call(:globalTestFunction)
+    globalTestFunction.should == "myFunc"
+  end
+  it "should work with methods" do
+    class A
+      def y
+        "hi"
+      end
+    end
+    a=A.new
+		a.y.should == "hi"
+    lambda{a.y.should be_nil}.should call(a,:y)
+		a.y.should == "hi"
+  end
+	it "should work with should_not" do
+		lambda{}.should_not call(:globalTestFunction)
+	end
+
+	it "should work with new method" do
+		class A
+			attr_reader :a
+			def initialize
+				@a=10
+			end
+		end
+		
+		lambda{A.new}.should call(A,:new)
+		lambda{}.should_not call(A,:new)
+		lambda{a=A.new}.should call(A,:new)
+	end
+
+end
+

Added: antargis/trunk/ruby/spec/spec_campaign.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,36 @@
+require 'ruby/spec_helper.rb'
+require 'ruby/campaign.rb'
+
+describe Campaign do
+	before(:all) do
+		@campaigns=getCampaigns
+		@tutorial=@campaigns[0]
+ 		@birth=@campaigns[1]
+	end
+	it "getCampaigns should return at least 2" do
+		@campaigns.length.should >=2
+ 	end
+	it "first campaign is tutorial" do
+		@tutorial.name.should == "Tutorial"
+	end
+
+	it "tutorial starts with level" do
+		@tutorial.getCurrentPart.should be_a_kind_of(CampaignLevel)
+	end
+
+ 	it "birth campaign is second campaign" do
+ 		#pp @birth.name
+ 		@birth.name.should == "A hero is born."
+ 	end
+
+	it "birth campaign starts with cutscene" do
+		@birth.getCurrentPart.should be_a_kind_of(CutScene)
+	end
+	it "should run a story fine" do
+		cutscene=@birth.getCurrentPart
+		lambda {cutscene.play}.should_not cross(CutSceneDisplay,:new)
+		
+	end
+
+
+end

Added: antargis/trunk/ruby/spec/spec_menu.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_menu.rb	2008-01-22 19:58:32 UTC (rev 1215)
+++ antargis/trunk/ruby/spec/spec_menu.rb	2008-01-26 18:52:15 UTC (rev 1216)
@@ -0,0 +1,72 @@
+if false
+Dir.chdir(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])
+puts Dir.pwd
+
+require 'ruby/gui/testing.rb'
+require 'ruby/spec_helper.rb'
+require 'ruby/mainmenu.rb'
+
+describe 'Main-Menu' do
+	include GuiTest
+	before(:each) do
+		@app=makeTestAppClass(AntMenuApp).new
+		@app.step
+	end
+	it "should display credits" do
+ 		widget("ticker").should be_nil
+		credits=widget("credits")
+		credits.should be_a_kind_of(AGButton)
+		credits.click
+		widget("ticker").should be_a_kind_of(AntTicker)
+		widget("exit").click
+		widget("credits").should be_a_kind_of(AGButton)
+ 		widget("ticker").should be_nil
+	end
+	it "should end when clicking on quit" do
+		quit=widget("quit")
+		quit.should be_an_instance_of(AGButton)
+		@app.step
+		lambda {quit.click}.should change(@app,:quitCounter).by(1)
+	end
+	it "should be possible to select tutorial and this will start this one" do
+		tutorialButton=widget("tutorial")
+		tutorialButton.should be_an_instance_of(AGButton)
+		lambda {tutorialButton.click}.should call(:startCampaign)
+	end
+	it "should be possible to select the tutorial in the campaign section and start it" do
+		playCampaign(0)
+	end
+	it "should be possible to select the birth-campaign and start it" do
+		playCampaign(1)
+	end
+	it "should be possible to flip fullscreen" do
+		optionsButton=widget("options")
+		optionsButton.should be_an_instance_of(AGButton)
+		optionsButton.click
+		optionsMenu=widget("OptionsMenu")
+		optionsMenu.should be_a_kind_of(AGWidget)
+		optionsMenu.should be_visible
+		fullscreenButton=optionsMenu.child("fullscreen")
+		fullscreenButton.should be_an_instance_of(AGButton)
+		lambda {fullscreenButton.click}.should change(getVideo,:fullscreen).from(false).to(true)
+		lambda {fullscreenButton.click}.should change(getVideo,:fullscreen).from(true).to(false)
+	end
+	private
+	def playCampaign(number)
+		campaignButton=widget("campaign")
+		campaignButton.should_not be_nil
+		campaignButton.click
+		menu=widget("CampaignMenu")
+		menu.should be_a_kind_of(AGLayout)
+		campaignRadio=menu.child("campaign#{number}")
+		campaignRadio.should be_a_kind_of(AGRadio)
+		campaignRadio.should_not be_checked
+		campaignRadio.click
+		campaignRadio.should be_checked
+		startButton=menu.child("start")
+		startButton.should be_a_kind_of(AGButton)
+		lambda {startButton.click}.should call(:startCampaign)
+	end
+end
+
+end
\ No newline at end of file



From davidkamphausen at mail.berlios.de  Sat Jan 26 20:48:26 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sat, 26 Jan 2008 20:48:26 +0100
Subject: [Antargis-svn] r1217 - antargis/trunk/build/swig
Message-ID: <200801261948.m0QJmQHZ016233@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-26 20:48:26 +0100 (Sat, 26 Jan 2008)
New Revision: 1217

Added:
   antargis/trunk/build/swig/ag_string_new.i
Log:
* added missing file


Added: antargis/trunk/build/swig/ag_string_new.i
===================================================================
--- antargis/trunk/build/swig/ag_string_new.i	2008-01-26 18:52:15 UTC (rev 1216)
+++ antargis/trunk/build/swig/ag_string_new.i	2008-01-26 19:48:26 UTC (rev 1217)
@@ -0,0 +1,16 @@
+//
+// String
+//
+
+
+/*
+%include <typemaps/std_strings.swg>
+
+%{
+#include <ag_string.h>
+%}
+  
+class AGString;
+
+%typemaps_std_string(AGString, char, SWIG_AsCharPtrAndSize, SWIG_FromCharPtrAndSize, %checkcode(STDSTRING));
+*/



From davidkamphausen at mail.berlios.de  Sun Jan 27 16:47:27 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Sun, 27 Jan 2008 16:47:27 +0100
Subject: [Antargis-svn] r1218 - in antargis/trunk: . ext ext/3dengine
	ext/basic ext/game ext/gui ext/math ext/sound ext/video
Message-ID: <200801271547.m0RFlRrI012086@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-27 16:47:21 +0100 (Sun, 27 Jan 2008)
New Revision: 1218

Removed:
   antargis/trunk/antargis.rb
Modified:
   antargis/trunk/TODO
   antargis/trunk/configure
   antargis/trunk/ext/3dengine/headers.hh
   antargis/trunk/ext/Rakefile
   antargis/trunk/ext/basic/headers.hh
   antargis/trunk/ext/game/headers.hh
   antargis/trunk/ext/game/path.cc
   antargis/trunk/ext/gui/headers.hh
   antargis/trunk/ext/math/headers.hh
   antargis/trunk/ext/sound/headers.hh
   antargis/trunk/ext/video/GLee.c
   antargis/trunk/ext/video/GLee.h
   antargis/trunk/ext/video/headers.hh
Log:
* many changes for macosx

Modified: antargis/trunk/TODO
===================================================================
--- antargis/trunk/TODO	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/TODO	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,4 +1,6 @@
+* check for ccache in configure and only use it if available!
 
+
 * fix saving - problem occurs only if game is loaded ? (in editor, too)
 * move build/*.rb files to build/unused_tools/* if they're not used
 * google for "/tmp/cciSLVG5.s:932678: Warning: .stabs: description field '1c216' too big, try a different debug format"

Deleted: antargis/trunk/antargis.rb
===================================================================

Modified: antargis/trunk/configure
===================================================================
--- antargis/trunk/configure	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/configure	2008-01-27 15:47:21 UTC (rev 1218)
@@ -119,7 +119,7 @@
 	}
 	# FIXME: add system-switch to cmd-line options
 	system=nil
-	if config["PATH"]=~/^\/usr/
+	unless config["PATH"]=~/^[a-zA-Z]:\\/
 		config["PATH"]=config["PATH"].split(":") # Unix ?
 		system=:unix
 	else
@@ -217,9 +217,11 @@
 		end
 		unless ok
 			pathes=config["PATH"].value
+			pp pathes
 			
 			pathes.each{|path|
 				cpath=File.join(path,v)
+				pp cpath
 				
 				if testProgram(cpath)
 					config[k]=cpath
@@ -231,6 +233,8 @@
 		end
 		if ok
 			puts "#{k.ljust(10)} found at #{config[k].value.ljust(25)} #{info}"
+		else
+			puts "#{k.ljust(10)} not found!"
 		end
 	}
 	config
@@ -310,7 +314,9 @@
 	file.close
 end
 
+$LDFLAGS+=" -L/usr/X11R6/lib -L/opt/local/lib"
 
+
 userInput=getUserInput
 config=generateHardConfiguration(userInput)
 config=searchPrograms(config)

Modified: antargis/trunk/ext/3dengine/headers.hh
===================================================================
--- antargis/trunk/ext/3dengine/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/3dengine/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,62 +1,62 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
 #include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
 #include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
 #include "ext/3dengine/mesh_data.h"
 #include "ext/3dengine/scene_base.h"
 #include "ext/3dengine/scenenode.h"

Modified: antargis/trunk/ext/Rakefile
===================================================================
--- antargis/trunk/ext/Rakefile	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/Rakefile	2008-01-27 15:47:21 UTC (rev 1218)
@@ -29,6 +29,8 @@
 	"ext/game",
 ]
 
+AntargisLibName="antargis."+CONFIG["DLEXT"]
+
 $LIBDEPS={"ext/basic"=>["SDL","RUBY"]}
 
 $BOASOURCES=$SOURCEDIRS.select{|dir|not dir=~/external/}
@@ -93,7 +95,19 @@
 		winadd="-Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker #{name.gsub(/\.so$/,".dll")}.a"
 	end
 
-	cmd=$CONFIG["CXX"]+" -dH -shared -o #{name} -Lext #{winadd} -Wl,-\\( #{$CONFIG["LDFLAGS"]} #{$CONFIG["LIBPATH"]} #{objects.join(" ")}"
+
+	add=""
+	if $CONFIG["target_os"]=~/darwin/
+	    add="-framework OpenGL"
+	else
+		add="-Wl,-\\("
+	end
+
+	cmd=$CONFIG["CXX"]+" -dH -shared -o #{name} -Lext #{winadd} #{add}  #{$CONFIG["LDFLAGS"]} #{$CONFIG["LIBPATH"]} #{objects.join(" ")}"
+	
+	cmd=$CONFIG["LDSHARED"]+" -dH  -o #{name} -Lext #{winadd} #{add}  #{$CONFIG["LDFLAGS"]} #{$CONFIG["LIBPATH"]} #{objects.join(" ")}"
+	pp cmd
+	#exit
 	if $CONFIG["CCACHE"]
 		cmd=$CONFIG["CCACHE"]+" "+cmd
 	end
@@ -255,12 +269,12 @@
 task :libraries=>$BOA_LIBRARIES do
 end
 
-task "ext/antargis.so" => ((Dir["ext/*/*.cc"]+Dir["ext/*/*.c"]).select{|file|not file=~/[a-z]swig/}.map{|file|file.sub(".cc",".oo").sub(".c",".o")}+["ext/swig.oo"]) do |t|
+task AntargisLibName => ((Dir["ext/*/*.cc"]+Dir["ext/*/*.c"]).select{|file|not file=~/[a-z]swig/}.map{|file|file.sub(".cc",".oo").sub(".c",".o")}+["ext/swig.oo"]) do |t|
 	linkLib(t.name,t.prerequisites+$CONFIG["LIBS"].split(" "))
 end
 
 
-task :library=>"ext/antargis.so" do
+task :library=>AntargisLibName do
 end
 
 if SWIG_ENABLED and false

Modified: antargis/trunk/ext/basic/headers.hh
===================================================================
--- antargis/trunk/ext/basic/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/basic/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -13,8 +13,8 @@
 #include "ext/basic/ag_xml.h"
 #include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_fs.h"
 #include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_fs.h"
 #ifdef SWIG
 %include "ext/basic/ag_rubyobj.h"
 %include "ext/basic/ag_messageobject.h"
@@ -28,7 +28,7 @@
 %include "ext/basic/ag_xml.h"
 %include "ext/basic/ag_string_utf8.h"
 %include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_fs.h"
 %include "ext/basic/ag_utf8.h"
-%include "ext/basic/ag_fs.h"
 #endif
 #endif

Modified: antargis/trunk/ext/game/headers.hh
===================================================================
--- antargis/trunk/ext/game/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/game/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,77 +1,78 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
 #include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
 #include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
+#include "ext/3dengine/ag_glwidget.h"
+#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/anim_mesh_data.h"
 #include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/boa_3d_wireframe.h"
 #include "ext/3dengine/mesh.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/mesh_2d.h"
 #include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/ag_glwidget.h"
-#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/mesh_base.h"
 #include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/scene.h"
 #include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/boa_3d_wireframe.h"
-#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/ant_projection.h"
 #include "ext/game/path.h"
 #include "ext/game/terrain.h"
 #include "ext/game/entity.h"

Modified: antargis/trunk/ext/game/path.cc
===================================================================
--- antargis/trunk/ext/game/path.cc	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/game/path.cc	2008-01-27 15:47:21 UTC (rev 1218)
@@ -277,10 +277,10 @@
   std::vector<AGVector2> vecs;
   std::vector<Node*> nodes;
   AGVector2 p;
-  size_t a,b;
+  Uint32 a,b;
   float w0,w1;
 
-  size_t count,i;
+  Uint32 count,i;
   pIn>>count;
   for(i=0;i<count;i++)
     {
@@ -301,15 +301,15 @@
 
 void SimpleGraph::printTo(BinaryOut &pOut) const
 {
-  std::map<AGVector2,size_t> saveMap;
+  std::map<AGVector2,Uint32> saveMap;
   size_t j=0;
-  pOut<<mNodes.size();
+  pOut<<(Uint32)mNodes.size();
   for(NodeSet::const_iterator i=mNodes.begin();i!=mNodes.end();i++,j++)
     {
       pOut<<(*i)->p;
       saveMap[(*i)->p]=j;
     }
-  pOut<<mEdges.size();
+  pOut<<(Uint32)mEdges.size();
   for(EdgeSet::const_iterator i=mEdges.begin();i!=mEdges.end();i++)
     {
       pOut<<saveMap[(*i)->a->p]<<saveMap[(*i)->b->p]<<(*i)->w0<<(*i)->w1;

Modified: antargis/trunk/ext/gui/headers.hh
===================================================================
--- antargis/trunk/ext/gui/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/gui/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,35 +1,35 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
 #include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_application.h"

Modified: antargis/trunk/ext/math/headers.hh
===================================================================
--- antargis/trunk/ext/math/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/math/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"

Modified: antargis/trunk/ext/sound/headers.hh
===================================================================
--- antargis/trunk/ext/sound/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/sound/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #ifdef SWIG
 %include "ext/sound/ag_mixer.h"

Modified: antargis/trunk/ext/video/GLee.c
===================================================================
--- antargis/trunk/ext/video/GLee.c	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/video/GLee.c	2008-01-27 15:47:21 UTC (rev 1218)
@@ -2,7 +2,7 @@
 *
 * GLee.c
 * GLee (OpenGL Easy Extension library)        
-* Version : 5.1
+* Version : 5.21
 *
 * Copyright (c)2006  Ben Woodhouse  All rights reserved.
 *
@@ -29,12 +29,12 @@
 
 * Web: http://elf-stone.com/glee.php
 *
-* [This file was automatically generated by GLeeGen 5.1
+* [This file was automatically generated by GLeeGen 5.21
 *
 ***************************************************************************/
 
 #ifdef _MSC_VER
-#pragma optimize( "g", off )
+	#pragma optimize( "g", off )
 #endif
 
 #include <stdio.h>
@@ -42,18 +42,40 @@
 #include <string.h>
 #include "GLee.h"
 
+#if defined(__APPLE__) || defined(__APPLE_CC__)
+	#include <Carbon/Carbon.h>
+#endif
+
 typedef GLuint(*GLEE_LINK_FUNCTION)(void);
 
 GLboolean __GLeeInited=GL_FALSE;
 
 #ifndef _WIN32
-#define __stdcall  /* nothing */
+	#define __stdcall  /* nothing */
 #endif 
 
 void * __GLeeGetProcAddress(const char *extname)
 {
 #ifdef WIN32
 	return (void*)wglGetProcAddress(extname);
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+    CFBundleRef bundle;
+    CFURLRef bundleURL = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, CFSTR("/System/Library/Frameworks/OpenGL.framework"), kCFURLPOSIXPathStyle, true);
+
+    CFStringRef functionName = CFStringCreateWithCString(kCFAllocatorDefault, extname, kCFStringEncodingASCII);
+
+    void *function;
+
+    bundle = CFBundleCreate(kCFAllocatorDefault, bundleURL);
+    assert(bundle != NULL);
+
+    function = CFBundleGetFunctionPointerForName(bundle, functionName);
+
+    CFRelease(bundleURL);
+    CFRelease(functionName);
+    CFRelease(bundle);
+
+    return function;
 #else
 	return (void*)glXGetProcAddressARB((const GLubyte *)extname);
 #endif
@@ -70,6 +92,7 @@
 GLboolean _GLEE_VERSION_1_4 = GL_FALSE;
 GLboolean _GLEE_VERSION_1_5 = GL_FALSE;
 GLboolean _GLEE_VERSION_2_0 = GL_FALSE;
+GLboolean _GLEE_VERSION_2_1 = GL_FALSE;
 GLboolean _GLEE_ARB_multitexture = GL_FALSE;
 GLboolean _GLEE_ARB_transpose_matrix = GL_FALSE;
 GLboolean _GLEE_ARB_multisample = GL_FALSE;
@@ -321,14 +344,35 @@
 GLboolean _GLEE_NV_vertex_program3 = GL_FALSE;
 GLboolean _GLEE_EXT_framebuffer_object = GL_FALSE;
 GLboolean _GLEE_GREMEDY_string_marker = GL_FALSE;
+GLboolean _GLEE_EXT_Cg_shader = GL_FALSE;
+GLboolean _GLEE_EXT_timer_query = GL_FALSE;
+GLboolean _GLEE_EXT_texture_buffer_object = GL_FALSE;
+GLboolean _GLEE_EXT_gpu_shader4 = GL_FALSE;
+GLboolean _GLEE_EXT_geometry_shader4 = GL_FALSE;
+GLboolean _GLEE_EXT_bindable_uniform = GL_FALSE;
+GLboolean _GLEE_EXT_framebuffer_sRGB = GL_FALSE;
+GLboolean _GLEE_EXT_texture_shared_exponent = GL_FALSE;
+GLboolean _GLEE_EXT_packed_float = GL_FALSE;
+GLboolean _GLEE_EXT_texture_array = GL_FALSE;
+GLboolean _GLEE_EXT_texture_integer = GL_FALSE;
+GLboolean _GLEE_NV_depth_buffer_float = GL_FALSE;
+GLboolean _GLEE_EXT_texture_compression_latc = GL_FALSE;
+GLboolean _GLEE_NV_transform_feedback = GL_FALSE;
+GLboolean _GLEE_NV_geometry_program4 = GL_FALSE;
+GLboolean _GLEE_NV_gpu_program4 = GL_FALSE;
+GLboolean _GLEE_NV_framebuffer_multisample_coverage = GL_FALSE;
+GLboolean _GLEE_EXT_framebuffer_multisample = GL_FALSE;
+GLboolean _GLEE_EXT_framebuffer_blit = GL_FALSE;
+GLboolean _GLEE_EXT_texture_compression_rgtc = GL_FALSE;
 GLboolean _GLEE_EXT_color_matrix = GL_FALSE;
 GLboolean _GLEE_SGIX_texture_select = GL_FALSE;
 GLboolean _GLEE_INGR_blend_func_separate = GL_FALSE;
 GLboolean _GLEE_SGIX_depth_pass_instrument = GL_FALSE;
 GLboolean _GLEE_SGIX_igloo_interface = GL_FALSE;
+GLboolean _GLEE_EXT_draw_buffers2 = GL_FALSE;
+GLboolean _GLEE_NV_parameter_buffer_object = GL_FALSE;
+GLboolean _GLEE_EXT_draw_instanced = GL_FALSE;
 GLboolean _GLEE_EXT_fragment_lighting = GL_FALSE;
-GLboolean _GLEE_EXT_framebuffer_blit = GL_FALSE;
-GLboolean _GLEE_EXT_framebuffer_multisample = GL_FALSE;
 GLboolean _GLEE_EXT_packed_depth_stencil = GL_FALSE;
 GLboolean _GLEE_EXT_scene_marker = GL_FALSE;
 GLboolean _GLEE_EXT_stencil_clear_tag = GL_FALSE;
@@ -345,13 +389,14 @@
 
 /*  GL Extension names */
 
-char __GLeeGLExtensionNames[278][35]={
+char __GLeeGLExtensionNames[300][39]={
     "GL_VERSION_1_2",
     "GL_ARB_imaging",
     "GL_VERSION_1_3",
     "GL_VERSION_1_4",
     "GL_VERSION_1_5",
     "GL_VERSION_2_0",
+    "GL_VERSION_2_1",
     "GL_ARB_multitexture",
     "GL_ARB_transpose_matrix",
     "GL_ARB_multisample",
@@ -603,14 +648,35 @@
     "GL_NV_vertex_program3",
     "GL_EXT_framebuffer_object",
     "GL_GREMEDY_string_marker",
+    "GL_EXT_Cg_shader",
+    "GL_EXT_timer_query",
+    "GL_EXT_texture_buffer_object",
+    "GL_EXT_gpu_shader4",
+    "GL_EXT_geometry_shader4",
+    "GL_EXT_bindable_uniform",
+    "GL_EXT_framebuffer_sRGB",
+    "GL_EXT_texture_shared_exponent",
+    "GL_EXT_packed_float",
+    "GL_EXT_texture_array",
+    "GL_EXT_texture_integer",
+    "GL_NV_depth_buffer_float",
+    "GL_EXT_texture_compression_latc",
+    "GL_NV_transform_feedback",
+    "GL_NV_geometry_program4",
+    "GL_NV_gpu_program4",
+    "GL_NV_framebuffer_multisample_coverage",
+    "GL_EXT_framebuffer_multisample",
+    "GL_EXT_framebuffer_blit",
+    "GL_EXT_texture_compression_rgtc",
     "GL_EXT_color_matrix",
     "GL_SGIX_texture_select",
     "GL_INGR_blend_func_separate",
     "GL_SGIX_depth_pass_instrument",
     "GL_SGIX_igloo_interface",
+    "GL_EXT_draw_buffers2",
+    "GL_NV_parameter_buffer_object",
+    "GL_EXT_draw_instanced",
     "GL_EXT_fragment_lighting",
-    "GL_EXT_framebuffer_blit",
-    "GL_EXT_framebuffer_multisample",
     "GL_EXT_packed_depth_stencil",
     "GL_EXT_scene_marker",
     "GL_EXT_stencil_clear_tag",
@@ -625,7 +691,7 @@
     "GL_SGIX_pixel_texture_bits",
     "GL_SGIX_texture_range"
 };
-int __GLeeGLNumExtensions=278;
+int __GLeeGLNumExtensions=300;
 
 /* GL_VERSION_1_2 */
 
@@ -1139,6 +1205,23 @@
 PFNGLVERTEXATTRIBPOINTERPROC pglVertexAttribPointer=_Lazy_glVertexAttribPointer;
 #endif 
 
+/* GL_VERSION_2_1 */
+
+#ifdef __GLEE_GL_VERSION_2_1
+void __stdcall _Lazy_glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2x3fv(location, count, transpose, value);}
+void __stdcall _Lazy_glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3x2fv(location, count, transpose, value);}
+void __stdcall _Lazy_glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2x4fv(location, count, transpose, value);}
+void __stdcall _Lazy_glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4x2fv(location, count, transpose, value);}
+void __stdcall _Lazy_glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3x4fv(location, count, transpose, value);}
+void __stdcall _Lazy_glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4x3fv(location, count, transpose, value);}
+PFNGLUNIFORMMATRIX2X3FVPROC pglUniformMatrix2x3fv=_Lazy_glUniformMatrix2x3fv;
+PFNGLUNIFORMMATRIX3X2FVPROC pglUniformMatrix3x2fv=_Lazy_glUniformMatrix3x2fv;
+PFNGLUNIFORMMATRIX2X4FVPROC pglUniformMatrix2x4fv=_Lazy_glUniformMatrix2x4fv;
+PFNGLUNIFORMMATRIX4X2FVPROC pglUniformMatrix4x2fv=_Lazy_glUniformMatrix4x2fv;
+PFNGLUNIFORMMATRIX3X4FVPROC pglUniformMatrix3x4fv=_Lazy_glUniformMatrix3x4fv;
+PFNGLUNIFORMMATRIX4X3FVPROC pglUniformMatrix4x3fv=_Lazy_glUniformMatrix4x3fv;
+#endif 
+
 /* GL_ARB_multitexture */
 
 #ifdef __GLEE_GL_ARB_multitexture
@@ -4080,6 +4163,274 @@
 PFNGLSTRINGMARKERGREMEDYPROC pglStringMarkerGREMEDY=_Lazy_glStringMarkerGREMEDY;
 #endif 
 
+/* GL_EXT_Cg_shader */
+
+#ifdef __GLEE_GL_EXT_Cg_shader
+#endif 
+
+/* GL_EXT_timer_query */
+
+#ifdef __GLEE_GL_EXT_timer_query
+void __stdcall _Lazy_glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64EXT * params)  {if (GLeeInit()) glGetQueryObjecti64vEXT(id, pname, params);}
+void __stdcall _Lazy_glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64EXT * params)  {if (GLeeInit()) glGetQueryObjectui64vEXT(id, pname, params);}
+PFNGLGETQUERYOBJECTI64VEXTPROC pglGetQueryObjecti64vEXT=_Lazy_glGetQueryObjecti64vEXT;
+PFNGLGETQUERYOBJECTUI64VEXTPROC pglGetQueryObjectui64vEXT=_Lazy_glGetQueryObjectui64vEXT;
+#endif 
+
+/* GL_EXT_texture_buffer_object */
+
+#ifdef __GLEE_GL_EXT_texture_buffer_object
+void __stdcall _Lazy_glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer)  {if (GLeeInit()) glTexBufferEXT(target, internalformat, buffer);}
+PFNGLTEXBUFFEREXTPROC pglTexBufferEXT=_Lazy_glTexBufferEXT;
+#endif 
+
+/* GL_EXT_gpu_shader4 */
+
+#ifdef __GLEE_GL_EXT_gpu_shader4
+void __stdcall _Lazy_glGetUniformuivEXT(GLuint program, GLint location, GLuint * params)  {if (GLeeInit()) glGetUniformuivEXT(program, location, params);}
+void __stdcall _Lazy_glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name)  {if (GLeeInit()) glBindFragDataLocationEXT(program, color, name);}
+GLint __stdcall _Lazy_glGetFragDataLocationEXT(GLuint program, const GLchar * name)       {if (GLeeInit()) return glGetFragDataLocationEXT(program, name); return (GLint)0;}
+void __stdcall _Lazy_glUniform1uiEXT(GLint location, GLuint v0)                           {if (GLeeInit()) glUniform1uiEXT(location, v0);}
+void __stdcall _Lazy_glUniform2uiEXT(GLint location, GLuint v0, GLuint v1)                {if (GLeeInit()) glUniform2uiEXT(location, v0, v1);}
+void __stdcall _Lazy_glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2)     {if (GLeeInit()) glUniform3uiEXT(location, v0, v1, v2);}
+void __stdcall _Lazy_glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)  {if (GLeeInit()) glUniform4uiEXT(location, v0, v1, v2, v3);}
+void __stdcall _Lazy_glUniform1uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform1uivEXT(location, count, value);}
+void __stdcall _Lazy_glUniform2uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform2uivEXT(location, count, value);}
+void __stdcall _Lazy_glUniform3uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform3uivEXT(location, count, value);}
+void __stdcall _Lazy_glUniform4uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform4uivEXT(location, count, value);}
+void __stdcall _Lazy_glVertexAttribI1iEXT(GLuint index, GLint x)                          {if (GLeeInit()) glVertexAttribI1iEXT(index, x);}
+void __stdcall _Lazy_glVertexAttribI2iEXT(GLuint index, GLint x, GLint y)                 {if (GLeeInit()) glVertexAttribI2iEXT(index, x, y);}
+void __stdcall _Lazy_glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z)        {if (GLeeInit()) glVertexAttribI3iEXT(index, x, y, z);}
+void __stdcall _Lazy_glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glVertexAttribI4iEXT(index, x, y, z, w);}
+void __stdcall _Lazy_glVertexAttribI1uiEXT(GLuint index, GLuint x)                        {if (GLeeInit()) glVertexAttribI1uiEXT(index, x);}
+void __stdcall _Lazy_glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y)              {if (GLeeInit()) glVertexAttribI2uiEXT(index, x, y);}
+void __stdcall _Lazy_glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z)    {if (GLeeInit()) glVertexAttribI3uiEXT(index, x, y, z);}
+void __stdcall _Lazy_glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glVertexAttribI4uiEXT(index, x, y, z, w);}
+void __stdcall _Lazy_glVertexAttribI1ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI1ivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI2ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI2ivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI3ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI3ivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI4ivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI1uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI1uivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI2uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI2uivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI3uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI3uivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI4uivEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4bvEXT(GLuint index, const GLbyte * v)                {if (GLeeInit()) glVertexAttribI4bvEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4svEXT(GLuint index, const GLshort * v)               {if (GLeeInit()) glVertexAttribI4svEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4ubvEXT(GLuint index, const GLubyte * v)              {if (GLeeInit()) glVertexAttribI4ubvEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribI4usvEXT(GLuint index, const GLushort * v)             {if (GLeeInit()) glVertexAttribI4usvEXT(index, v);}
+void __stdcall _Lazy_glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexAttribIPointerEXT(index, size, type, stride, pointer);}
+void __stdcall _Lazy_glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params)  {if (GLeeInit()) glGetVertexAttribIivEXT(index, pname, params);}
+void __stdcall _Lazy_glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params)  {if (GLeeInit()) glGetVertexAttribIuivEXT(index, pname, params);}
+PFNGLGETUNIFORMUIVEXTPROC pglGetUniformuivEXT=_Lazy_glGetUniformuivEXT;
+PFNGLBINDFRAGDATALOCATIONEXTPROC pglBindFragDataLocationEXT=_Lazy_glBindFragDataLocationEXT;
+PFNGLGETFRAGDATALOCATIONEXTPROC pglGetFragDataLocationEXT=_Lazy_glGetFragDataLocationEXT;
+PFNGLUNIFORM1UIEXTPROC pglUniform1uiEXT=_Lazy_glUniform1uiEXT;
+PFNGLUNIFORM2UIEXTPROC pglUniform2uiEXT=_Lazy_glUniform2uiEXT;
+PFNGLUNIFORM3UIEXTPROC pglUniform3uiEXT=_Lazy_glUniform3uiEXT;
+PFNGLUNIFORM4UIEXTPROC pglUniform4uiEXT=_Lazy_glUniform4uiEXT;
+PFNGLUNIFORM1UIVEXTPROC pglUniform1uivEXT=_Lazy_glUniform1uivEXT;
+PFNGLUNIFORM2UIVEXTPROC pglUniform2uivEXT=_Lazy_glUniform2uivEXT;
+PFNGLUNIFORM3UIVEXTPROC pglUniform3uivEXT=_Lazy_glUniform3uivEXT;
+PFNGLUNIFORM4UIVEXTPROC pglUniform4uivEXT=_Lazy_glUniform4uivEXT;
+PFNGLVERTEXATTRIBI1IEXTPROC pglVertexAttribI1iEXT=_Lazy_glVertexAttribI1iEXT;
+PFNGLVERTEXATTRIBI2IEXTPROC pglVertexAttribI2iEXT=_Lazy_glVertexAttribI2iEXT;
+PFNGLVERTEXATTRIBI3IEXTPROC pglVertexAttribI3iEXT=_Lazy_glVertexAttribI3iEXT;
+PFNGLVERTEXATTRIBI4IEXTPROC pglVertexAttribI4iEXT=_Lazy_glVertexAttribI4iEXT;
+PFNGLVERTEXATTRIBI1UIEXTPROC pglVertexAttribI1uiEXT=_Lazy_glVertexAttribI1uiEXT;
+PFNGLVERTEXATTRIBI2UIEXTPROC pglVertexAttribI2uiEXT=_Lazy_glVertexAttribI2uiEXT;
+PFNGLVERTEXATTRIBI3UIEXTPROC pglVertexAttribI3uiEXT=_Lazy_glVertexAttribI3uiEXT;
+PFNGLVERTEXATTRIBI4UIEXTPROC pglVertexAttribI4uiEXT=_Lazy_glVertexAttribI4uiEXT;
+PFNGLVERTEXATTRIBI1IVEXTPROC pglVertexAttribI1ivEXT=_Lazy_glVertexAttribI1ivEXT;
+PFNGLVERTEXATTRIBI2IVEXTPROC pglVertexAttribI2ivEXT=_Lazy_glVertexAttribI2ivEXT;
+PFNGLVERTEXATTRIBI3IVEXTPROC pglVertexAttribI3ivEXT=_Lazy_glVertexAttribI3ivEXT;
+PFNGLVERTEXATTRIBI4IVEXTPROC pglVertexAttribI4ivEXT=_Lazy_glVertexAttribI4ivEXT;
+PFNGLVERTEXATTRIBI1UIVEXTPROC pglVertexAttribI1uivEXT=_Lazy_glVertexAttribI1uivEXT;
+PFNGLVERTEXATTRIBI2UIVEXTPROC pglVertexAttribI2uivEXT=_Lazy_glVertexAttribI2uivEXT;
+PFNGLVERTEXATTRIBI3UIVEXTPROC pglVertexAttribI3uivEXT=_Lazy_glVertexAttribI3uivEXT;
+PFNGLVERTEXATTRIBI4UIVEXTPROC pglVertexAttribI4uivEXT=_Lazy_glVertexAttribI4uivEXT;
+PFNGLVERTEXATTRIBI4BVEXTPROC pglVertexAttribI4bvEXT=_Lazy_glVertexAttribI4bvEXT;
+PFNGLVERTEXATTRIBI4SVEXTPROC pglVertexAttribI4svEXT=_Lazy_glVertexAttribI4svEXT;
+PFNGLVERTEXATTRIBI4UBVEXTPROC pglVertexAttribI4ubvEXT=_Lazy_glVertexAttribI4ubvEXT;
+PFNGLVERTEXATTRIBI4USVEXTPROC pglVertexAttribI4usvEXT=_Lazy_glVertexAttribI4usvEXT;
+PFNGLVERTEXATTRIBIPOINTEREXTPROC pglVertexAttribIPointerEXT=_Lazy_glVertexAttribIPointerEXT;
+PFNGLGETVERTEXATTRIBIIVEXTPROC pglGetVertexAttribIivEXT=_Lazy_glGetVertexAttribIivEXT;
+PFNGLGETVERTEXATTRIBIUIVEXTPROC pglGetVertexAttribIuivEXT=_Lazy_glGetVertexAttribIuivEXT;
+#endif 
+
+/* GL_EXT_geometry_shader4 */
+
+#ifdef __GLEE_GL_EXT_geometry_shader4
+void __stdcall _Lazy_glProgramParameteriEXT(GLuint program, GLenum pname, GLint value)    {if (GLeeInit()) glProgramParameteriEXT(program, pname, value);}
+void __stdcall _Lazy_glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level)  {if (GLeeInit()) glFramebufferTextureEXT(target, attachment, texture, level);}
+void __stdcall _Lazy_glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)  {if (GLeeInit()) glFramebufferTextureLayerEXT(target, attachment, texture, level, layer);}
+void __stdcall _Lazy_glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)  {if (GLeeInit()) glFramebufferTextureFaceEXT(target, attachment, texture, level, face);}
+PFNGLPROGRAMPARAMETERIEXTPROC pglProgramParameteriEXT=_Lazy_glProgramParameteriEXT;
+PFNGLFRAMEBUFFERTEXTUREEXTPROC pglFramebufferTextureEXT=_Lazy_glFramebufferTextureEXT;
+PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC pglFramebufferTextureLayerEXT=_Lazy_glFramebufferTextureLayerEXT;
+PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC pglFramebufferTextureFaceEXT=_Lazy_glFramebufferTextureFaceEXT;
+#endif 
+
+/* GL_EXT_bindable_uniform */
+
+#ifdef __GLEE_GL_EXT_bindable_uniform
+void __stdcall _Lazy_glUniformBufferEXT(GLuint program, GLint location, GLuint buffer)    {if (GLeeInit()) glUniformBufferEXT(program, location, buffer);}
+GLint __stdcall _Lazy_glGetUniformBufferSizeEXT(GLuint program, GLint location)           {if (GLeeInit()) return glGetUniformBufferSizeEXT(program, location); return (GLint)0;}
+GLintptr __stdcall _Lazy_glGetUniformOffsetEXT(GLuint program, GLint location)            {if (GLeeInit()) return glGetUniformOffsetEXT(program, location); return (GLintptr)0;}
+PFNGLUNIFORMBUFFEREXTPROC pglUniformBufferEXT=_Lazy_glUniformBufferEXT;
+PFNGLGETUNIFORMBUFFERSIZEEXTPROC pglGetUniformBufferSizeEXT=_Lazy_glGetUniformBufferSizeEXT;
+PFNGLGETUNIFORMOFFSETEXTPROC pglGetUniformOffsetEXT=_Lazy_glGetUniformOffsetEXT;
+#endif 
+
+/* GL_EXT_framebuffer_sRGB */
+
+#ifdef __GLEE_GL_EXT_framebuffer_sRGB
+#endif 
+
+/* GL_EXT_texture_shared_exponent */
+
+#ifdef __GLEE_GL_EXT_texture_shared_exponent
+#endif 
+
+/* GL_EXT_packed_float */
+
+#ifdef __GLEE_GL_EXT_packed_float
+#endif 
+
+/* GL_EXT_texture_array */
+
+#ifdef __GLEE_GL_EXT_texture_array
+#endif 
+
+/* GL_EXT_texture_integer */
+
+#ifdef __GLEE_GL_EXT_texture_integer
+void __stdcall _Lazy_glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glTexParameterIivEXT(target, pname, params);}
+void __stdcall _Lazy_glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params)  {if (GLeeInit()) glTexParameterIuivEXT(target, pname, params);}
+void __stdcall _Lazy_glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetTexParameterIivEXT(target, pname, params);}
+void __stdcall _Lazy_glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params)  {if (GLeeInit()) glGetTexParameterIuivEXT(target, pname, params);}
+void __stdcall _Lazy_glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha)   {if (GLeeInit()) glClearColorIiEXT(red, green, blue, alpha);}
+void __stdcall _Lazy_glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha)  {if (GLeeInit()) glClearColorIuiEXT(red, green, blue, alpha);}
+PFNGLTEXPARAMETERIIVEXTPROC pglTexParameterIivEXT=_Lazy_glTexParameterIivEXT;
+PFNGLTEXPARAMETERIUIVEXTPROC pglTexParameterIuivEXT=_Lazy_glTexParameterIuivEXT;
+PFNGLGETTEXPARAMETERIIVEXTPROC pglGetTexParameterIivEXT=_Lazy_glGetTexParameterIivEXT;
+PFNGLGETTEXPARAMETERIUIVEXTPROC pglGetTexParameterIuivEXT=_Lazy_glGetTexParameterIuivEXT;
+PFNGLCLEARCOLORIIEXTPROC pglClearColorIiEXT=_Lazy_glClearColorIiEXT;
+PFNGLCLEARCOLORIUIEXTPROC pglClearColorIuiEXT=_Lazy_glClearColorIuiEXT;
+#endif 
+
+/* GL_NV_depth_buffer_float */
+
+#ifdef __GLEE_GL_NV_depth_buffer_float
+void __stdcall _Lazy_glDepthRangedNV(GLdouble zNear, GLdouble zFar)                       {if (GLeeInit()) glDepthRangedNV(zNear, zFar);}
+void __stdcall _Lazy_glClearDepthdNV(GLdouble depth)                                      {if (GLeeInit()) glClearDepthdNV(depth);}
+void __stdcall _Lazy_glDepthBoundsdNV(GLdouble zmin, GLdouble zmax)                       {if (GLeeInit()) glDepthBoundsdNV(zmin, zmax);}
+PFNGLDEPTHRANGEDNVPROC pglDepthRangedNV=_Lazy_glDepthRangedNV;
+PFNGLCLEARDEPTHDNVPROC pglClearDepthdNV=_Lazy_glClearDepthdNV;
+PFNGLDEPTHBOUNDSDNVPROC pglDepthBoundsdNV=_Lazy_glDepthBoundsdNV;
+#endif 
+
+/* GL_EXT_texture_compression_latc */
+
+#ifdef __GLEE_GL_EXT_texture_compression_latc
+#endif 
+
+/* GL_NV_transform_feedback */
+
+#ifdef __GLEE_GL_NV_transform_feedback
+void __stdcall _Lazy_glBeginTransformFeedbackNV(GLenum primitiveMode)                     {if (GLeeInit()) glBeginTransformFeedbackNV(primitiveMode);}
+void __stdcall _Lazy_glEndTransformFeedbackNV(void)                                       {if (GLeeInit()) glEndTransformFeedbackNV();}
+void __stdcall _Lazy_glTransformFeedbackAttribsNV(GLuint count, const GLint * attribs, GLenum bufferMode)  {if (GLeeInit()) glTransformFeedbackAttribsNV(count, attribs, bufferMode);}
+void __stdcall _Lazy_glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)  {if (GLeeInit()) glBindBufferRangeNV(target, index, buffer, offset, size);}
+void __stdcall _Lazy_glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset)  {if (GLeeInit()) glBindBufferOffsetNV(target, index, buffer, offset);}
+void __stdcall _Lazy_glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer)       {if (GLeeInit()) glBindBufferBaseNV(target, index, buffer);}
+void __stdcall _Lazy_glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode)  {if (GLeeInit()) glTransformFeedbackVaryingsNV(program, count, locations, bufferMode);}
+void __stdcall _Lazy_glActiveVaryingNV(GLuint program, const GLchar * name)               {if (GLeeInit()) glActiveVaryingNV(program, name);}
+GLint __stdcall _Lazy_glGetVaryingLocationNV(GLuint program, const GLchar * name)         {if (GLeeInit()) return glGetVaryingLocationNV(program, name); return (GLint)0;}
+void __stdcall _Lazy_glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name)  {if (GLeeInit()) glGetActiveVaryingNV(program, index, bufSize, length, size, type, name);}
+void __stdcall _Lazy_glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint * location)  {if (GLeeInit()) glGetTransformFeedbackVaryingNV(program, index, location);}
+PFNGLBEGINTRANSFORMFEEDBACKNVPROC pglBeginTransformFeedbackNV=_Lazy_glBeginTransformFeedbackNV;
+PFNGLENDTRANSFORMFEEDBACKNVPROC pglEndTransformFeedbackNV=_Lazy_glEndTransformFeedbackNV;
+PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC pglTransformFeedbackAttribsNV=_Lazy_glTransformFeedbackAttribsNV;
+PFNGLBINDBUFFERRANGENVPROC pglBindBufferRangeNV=_Lazy_glBindBufferRangeNV;
+PFNGLBINDBUFFEROFFSETNVPROC pglBindBufferOffsetNV=_Lazy_glBindBufferOffsetNV;
+PFNGLBINDBUFFERBASENVPROC pglBindBufferBaseNV=_Lazy_glBindBufferBaseNV;
+PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC pglTransformFeedbackVaryingsNV=_Lazy_glTransformFeedbackVaryingsNV;
+PFNGLACTIVEVARYINGNVPROC pglActiveVaryingNV=_Lazy_glActiveVaryingNV;
+PFNGLGETVARYINGLOCATIONNVPROC pglGetVaryingLocationNV=_Lazy_glGetVaryingLocationNV;
+PFNGLGETACTIVEVARYINGNVPROC pglGetActiveVaryingNV=_Lazy_glGetActiveVaryingNV;
+PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC pglGetTransformFeedbackVaryingNV=_Lazy_glGetTransformFeedbackVaryingNV;
+#endif 
+
+/* GL_NV_geometry_program4 */
+
+#ifdef __GLEE_GL_NV_geometry_program4
+void __stdcall _Lazy_glProgramVertexLimitNV(GLenum target, GLint limit)                   {if (GLeeInit()) glProgramVertexLimitNV(target, limit);}
+PFNGLPROGRAMVERTEXLIMITNVPROC pglProgramVertexLimitNV=_Lazy_glProgramVertexLimitNV;
+#endif 
+
+/* GL_NV_gpu_program4 */
+
+#ifdef __GLEE_GL_NV_gpu_program4
+void __stdcall _Lazy_glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glProgramLocalParameterI4iNV(target, index, x, y, z, w);}
+void __stdcall _Lazy_glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint * params)  {if (GLeeInit()) glProgramLocalParameterI4ivNV(target, index, params);}
+void __stdcall _Lazy_glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramLocalParametersI4ivNV(target, index, count, params);}
+void __stdcall _Lazy_glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glProgramLocalParameterI4uiNV(target, index, x, y, z, w);}
+void __stdcall _Lazy_glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint * params)  {if (GLeeInit()) glProgramLocalParameterI4uivNV(target, index, params);}
+void __stdcall _Lazy_glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramLocalParametersI4uivNV(target, index, count, params);}
+void __stdcall _Lazy_glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glProgramEnvParameterI4iNV(target, index, x, y, z, w);}
+void __stdcall _Lazy_glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint * params)  {if (GLeeInit()) glProgramEnvParameterI4ivNV(target, index, params);}
+void __stdcall _Lazy_glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramEnvParametersI4ivNV(target, index, count, params);}
+void __stdcall _Lazy_glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glProgramEnvParameterI4uiNV(target, index, x, y, z, w);}
+void __stdcall _Lazy_glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint * params)  {if (GLeeInit()) glProgramEnvParameterI4uivNV(target, index, params);}
+void __stdcall _Lazy_glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramEnvParametersI4uivNV(target, index, count, params);}
+void __stdcall _Lazy_glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint * params)  {if (GLeeInit()) glGetProgramLocalParameterIivNV(target, index, params);}
+void __stdcall _Lazy_glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint * params)  {if (GLeeInit()) glGetProgramLocalParameterIuivNV(target, index, params);}
+void __stdcall _Lazy_glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint * params)  {if (GLeeInit()) glGetProgramEnvParameterIivNV(target, index, params);}
+void __stdcall _Lazy_glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint * params)  {if (GLeeInit()) glGetProgramEnvParameterIuivNV(target, index, params);}
+PFNGLPROGRAMLOCALPARAMETERI4INVPROC pglProgramLocalParameterI4iNV=_Lazy_glProgramLocalParameterI4iNV;
+PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC pglProgramLocalParameterI4ivNV=_Lazy_glProgramLocalParameterI4ivNV;
+PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC pglProgramLocalParametersI4ivNV=_Lazy_glProgramLocalParametersI4ivNV;
+PFNGLPROGRAMLOCALPARAMETERI4UINVPROC pglProgramLocalParameterI4uiNV=_Lazy_glProgramLocalParameterI4uiNV;
+PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC pglProgramLocalParameterI4uivNV=_Lazy_glProgramLocalParameterI4uivNV;
+PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC pglProgramLocalParametersI4uivNV=_Lazy_glProgramLocalParametersI4uivNV;
+PFNGLPROGRAMENVPARAMETERI4INVPROC pglProgramEnvParameterI4iNV=_Lazy_glProgramEnvParameterI4iNV;
+PFNGLPROGRAMENVPARAMETERI4IVNVPROC pglProgramEnvParameterI4ivNV=_Lazy_glProgramEnvParameterI4ivNV;
+PFNGLPROGRAMENVPARAMETERSI4IVNVPROC pglProgramEnvParametersI4ivNV=_Lazy_glProgramEnvParametersI4ivNV;
+PFNGLPROGRAMENVPARAMETERI4UINVPROC pglProgramEnvParameterI4uiNV=_Lazy_glProgramEnvParameterI4uiNV;
+PFNGLPROGRAMENVPARAMETERI4UIVNVPROC pglProgramEnvParameterI4uivNV=_Lazy_glProgramEnvParameterI4uivNV;
+PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC pglProgramEnvParametersI4uivNV=_Lazy_glProgramEnvParametersI4uivNV;
+PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC pglGetProgramLocalParameterIivNV=_Lazy_glGetProgramLocalParameterIivNV;
+PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC pglGetProgramLocalParameterIuivNV=_Lazy_glGetProgramLocalParameterIuivNV;
+PFNGLGETPROGRAMENVPARAMETERIIVNVPROC pglGetProgramEnvParameterIivNV=_Lazy_glGetProgramEnvParameterIivNV;
+PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC pglGetProgramEnvParameterIuivNV=_Lazy_glGetProgramEnvParameterIuivNV;
+#endif 
+
+/* GL_NV_framebuffer_multisample_coverage */
+
+#ifdef __GLEE_GL_NV_framebuffer_multisample_coverage
+void __stdcall _Lazy_glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height);}
+PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC pglRenderbufferStorageMultisampleCoverageNV=_Lazy_glRenderbufferStorageMultisampleCoverageNV;
+#endif 
+
+/* GL_EXT_framebuffer_multisample */
+
+#ifdef __GLEE_GL_EXT_framebuffer_multisample
+void __stdcall _Lazy_glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height);}
+PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT=_Lazy_glRenderbufferStorageMultisampleEXT;
+#endif 
+
+/* GL_EXT_framebuffer_blit */
+
+#ifdef __GLEE_GL_EXT_framebuffer_blit
+void __stdcall _Lazy_glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)  {if (GLeeInit()) glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);}
+PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT=_Lazy_glBlitFramebufferEXT;
+#endif 
+
+/* GL_EXT_texture_compression_rgtc */
+
+#ifdef __GLEE_GL_EXT_texture_compression_rgtc
+#endif 
+
 /* GL_EXT_color_matrix */
 
 #ifdef __GLEE_GL_EXT_color_matrix
@@ -4109,6 +4460,43 @@
 PFNGLIGLOOINTERFACESGIXPROC pglIglooInterfaceSGIX=_Lazy_glIglooInterfaceSGIX;
 #endif 
 
+/* GL_EXT_draw_buffers2 */
+
+#ifdef __GLEE_GL_EXT_draw_buffers2
+void __stdcall _Lazy_glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)  {if (GLeeInit()) glColorMaskIndexedEXT(index, r, g, b, a);}
+void __stdcall _Lazy_glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data)  {if (GLeeInit()) glGetBooleanIndexedvEXT(target, index, data);}
+void __stdcall _Lazy_glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data)   {if (GLeeInit()) glGetIntegerIndexedvEXT(target, index, data);}
+void __stdcall _Lazy_glEnableIndexedEXT(GLenum target, GLuint index)                      {if (GLeeInit()) glEnableIndexedEXT(target, index);}
+void __stdcall _Lazy_glDisableIndexedEXT(GLenum target, GLuint index)                     {if (GLeeInit()) glDisableIndexedEXT(target, index);}
+GLboolean __stdcall _Lazy_glIsEnabledIndexedEXT(GLenum target, GLuint index)              {if (GLeeInit()) return glIsEnabledIndexedEXT(target, index); return (GLboolean)0;}
+PFNGLCOLORMASKINDEXEDEXTPROC pglColorMaskIndexedEXT=_Lazy_glColorMaskIndexedEXT;
+PFNGLGETBOOLEANINDEXEDVEXTPROC pglGetBooleanIndexedvEXT=_Lazy_glGetBooleanIndexedvEXT;
+PFNGLGETINTEGERINDEXEDVEXTPROC pglGetIntegerIndexedvEXT=_Lazy_glGetIntegerIndexedvEXT;
+PFNGLENABLEINDEXEDEXTPROC pglEnableIndexedEXT=_Lazy_glEnableIndexedEXT;
+PFNGLDISABLEINDEXEDEXTPROC pglDisableIndexedEXT=_Lazy_glDisableIndexedEXT;
+PFNGLISENABLEDINDEXEDEXTPROC pglIsEnabledIndexedEXT=_Lazy_glIsEnabledIndexedEXT;
+#endif 
+
+/* GL_NV_parameter_buffer_object */
+
+#ifdef __GLEE_GL_NV_parameter_buffer_object
+void __stdcall _Lazy_glProgramBufferParametersfvNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat * params)  {if (GLeeInit()) glProgramBufferParametersfvNV(target, buffer, index, count, params);}
+void __stdcall _Lazy_glProgramBufferParametersIivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramBufferParametersIivNV(target, buffer, index, count, params);}
+void __stdcall _Lazy_glProgramBufferParametersIuivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramBufferParametersIuivNV(target, buffer, index, count, params);}
+PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC pglProgramBufferParametersfvNV=_Lazy_glProgramBufferParametersfvNV;
+PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC pglProgramBufferParametersIivNV=_Lazy_glProgramBufferParametersIivNV;
+PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC pglProgramBufferParametersIuivNV=_Lazy_glProgramBufferParametersIuivNV;
+#endif 
+
+/* GL_EXT_draw_instanced */
+
+#ifdef __GLEE_GL_EXT_draw_instanced
+void __stdcall _Lazy_glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount)  {if (GLeeInit()) glDrawArraysInstancedEXT(mode, start, count, primcount);}
+void __stdcall _Lazy_glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount)  {if (GLeeInit()) glDrawElementsInstancedEXT(mode, count, type, indices, primcount);}
+PFNGLDRAWARRAYSINSTANCEDEXTPROC pglDrawArraysInstancedEXT=_Lazy_glDrawArraysInstancedEXT;
+PFNGLDRAWELEMENTSINSTANCEDEXTPROC pglDrawElementsInstancedEXT=_Lazy_glDrawElementsInstancedEXT;
+#endif 
+
 /* GL_EXT_fragment_lighting */
 
 #ifdef __GLEE_GL_EXT_fragment_lighting
@@ -4150,20 +4538,6 @@
 PFNGLLIGHTENVIEXTPROC pglLightEnviEXT=_Lazy_glLightEnviEXT;
 #endif 
 
-/* GL_EXT_framebuffer_blit */
-
-#ifdef __GLEE_GL_EXT_framebuffer_blit
-GLvoid __stdcall _Lazy_glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)  {if (GLeeInit()) glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);}
-PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT=_Lazy_glBlitFramebufferEXT;
-#endif 
-
-/* GL_EXT_framebuffer_multisample */
-
-#ifdef __GLEE_GL_EXT_framebuffer_multisample
-GLvoid __stdcall _Lazy_glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height);}
-PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT=_Lazy_glRenderbufferStorageMultisampleEXT;
-#endif 
-
 /* GL_EXT_packed_depth_stencil */
 
 #ifdef __GLEE_GL_EXT_packed_depth_stencil
@@ -4245,7 +4619,7 @@
 #ifdef __GLEE_GL_SGIX_texture_range
 #endif 
 
-/* WIN32 SPECIFIC */
+/* WGL */
 
 #ifdef WIN32
 
@@ -4615,7 +4989,8 @@
 BOOL __stdcall _Lazy_wglSetStereoEmitterState3DL(HDC hDC, UINT uState)                    {if (GLeeInit()) return wglSetStereoEmitterState3DL(hDC, uState); return (BOOL)0;}
 PFNWGLSETSTEREOEMITTERSTATE3DLPROC pwglSetStereoEmitterState3DL=_Lazy_wglSetStereoEmitterState3DL;
 #endif 
-#else /* WIN32 defined */
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+#else /* GLX */
 
 /* Extension querying variables */
 
@@ -4985,7 +5360,7 @@
 
 #ifdef __GLEE_GLX_EXT_scene_marker
 #endif 
-#endif /* end linux */
+#endif /* end GLX */
 /*****************************************************************
 * Extension link functions
 *****************************************************************/
@@ -5283,6 +5658,22 @@
     return GLEE_LINK_PARTIAL;
 }
 
+GLuint __GLeeLink_GL_VERSION_2_1(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_VERSION_2_1
+    if ((pglUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC) __GLeeGetProcAddress("glUniformMatrix2x3fv"))!=0) nLinked++;
+    if ((pglUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC) __GLeeGetProcAddress("glUniformMatrix3x2fv"))!=0) nLinked++;
+    if ((pglUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC) __GLeeGetProcAddress("glUniformMatrix2x4fv"))!=0) nLinked++;
+    if ((pglUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC) __GLeeGetProcAddress("glUniformMatrix4x2fv"))!=0) nLinked++;
+    if ((pglUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC) __GLeeGetProcAddress("glUniformMatrix3x4fv"))!=0) nLinked++;
+    if ((pglUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC) __GLeeGetProcAddress("glUniformMatrix4x3fv"))!=0) nLinked++;
+#endif
+    if (nLinked==6) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
 GLuint __GLeeLink_GL_ARB_multitexture(void)
 {
     GLint nLinked=0;
@@ -7500,6 +7891,234 @@
     return GLEE_LINK_PARTIAL;
 }
 
+GLuint __GLeeLink_GL_EXT_Cg_shader(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_EXT_timer_query(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_timer_query
+    if ((pglGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC) __GLeeGetProcAddress("glGetQueryObjecti64vEXT"))!=0) nLinked++;
+    if ((pglGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC) __GLeeGetProcAddress("glGetQueryObjectui64vEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==2) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_texture_buffer_object(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_texture_buffer_object
+    if ((pglTexBufferEXT = (PFNGLTEXBUFFEREXTPROC) __GLeeGetProcAddress("glTexBufferEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==1) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_gpu_shader4(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_gpu_shader4
+    if ((pglGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC) __GLeeGetProcAddress("glGetUniformuivEXT"))!=0) nLinked++;
+    if ((pglBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC) __GLeeGetProcAddress("glBindFragDataLocationEXT"))!=0) nLinked++;
+    if ((pglGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC) __GLeeGetProcAddress("glGetFragDataLocationEXT"))!=0) nLinked++;
+    if ((pglUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC) __GLeeGetProcAddress("glUniform1uiEXT"))!=0) nLinked++;
+    if ((pglUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC) __GLeeGetProcAddress("glUniform2uiEXT"))!=0) nLinked++;
+    if ((pglUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC) __GLeeGetProcAddress("glUniform3uiEXT"))!=0) nLinked++;
+    if ((pglUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC) __GLeeGetProcAddress("glUniform4uiEXT"))!=0) nLinked++;
+    if ((pglUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC) __GLeeGetProcAddress("glUniform1uivEXT"))!=0) nLinked++;
+    if ((pglUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC) __GLeeGetProcAddress("glUniform2uivEXT"))!=0) nLinked++;
+    if ((pglUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC) __GLeeGetProcAddress("glUniform3uivEXT"))!=0) nLinked++;
+    if ((pglUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC) __GLeeGetProcAddress("glUniform4uivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC) __GLeeGetProcAddress("glVertexAttribI1iEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC) __GLeeGetProcAddress("glVertexAttribI2iEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC) __GLeeGetProcAddress("glVertexAttribI3iEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC) __GLeeGetProcAddress("glVertexAttribI4iEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC) __GLeeGetProcAddress("glVertexAttribI1uiEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC) __GLeeGetProcAddress("glVertexAttribI2uiEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC) __GLeeGetProcAddress("glVertexAttribI3uiEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC) __GLeeGetProcAddress("glVertexAttribI4uiEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC) __GLeeGetProcAddress("glVertexAttribI1ivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC) __GLeeGetProcAddress("glVertexAttribI2ivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC) __GLeeGetProcAddress("glVertexAttribI3ivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4ivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC) __GLeeGetProcAddress("glVertexAttribI1uivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC) __GLeeGetProcAddress("glVertexAttribI2uivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC) __GLeeGetProcAddress("glVertexAttribI3uivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4uivEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4bvEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4svEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4ubvEXT"))!=0) nLinked++;
+    if ((pglVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC) __GLeeGetProcAddress("glVertexAttribI4usvEXT"))!=0) nLinked++;
+    if ((pglVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC) __GLeeGetProcAddress("glVertexAttribIPointerEXT"))!=0) nLinked++;
+    if ((pglGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC) __GLeeGetProcAddress("glGetVertexAttribIivEXT"))!=0) nLinked++;
+    if ((pglGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC) __GLeeGetProcAddress("glGetVertexAttribIuivEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==34) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_geometry_shader4(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_geometry_shader4
+    if ((pglProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC) __GLeeGetProcAddress("glProgramParameteriEXT"))!=0) nLinked++;
+    if ((pglFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC) __GLeeGetProcAddress("glFramebufferTextureEXT"))!=0) nLinked++;
+    if ((pglFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) __GLeeGetProcAddress("glFramebufferTextureLayerEXT"))!=0) nLinked++;
+    if ((pglFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) __GLeeGetProcAddress("glFramebufferTextureFaceEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==4) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_bindable_uniform(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_bindable_uniform
+    if ((pglUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC) __GLeeGetProcAddress("glUniformBufferEXT"))!=0) nLinked++;
+    if ((pglGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC) __GLeeGetProcAddress("glGetUniformBufferSizeEXT"))!=0) nLinked++;
+    if ((pglGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC) __GLeeGetProcAddress("glGetUniformOffsetEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==3) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_framebuffer_sRGB(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_EXT_texture_shared_exponent(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_EXT_packed_float(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_EXT_texture_array(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_EXT_texture_integer(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_texture_integer
+    if ((pglTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC) __GLeeGetProcAddress("glTexParameterIivEXT"))!=0) nLinked++;
+    if ((pglTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC) __GLeeGetProcAddress("glTexParameterIuivEXT"))!=0) nLinked++;
+    if ((pglGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC) __GLeeGetProcAddress("glGetTexParameterIivEXT"))!=0) nLinked++;
+    if ((pglGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC) __GLeeGetProcAddress("glGetTexParameterIuivEXT"))!=0) nLinked++;
+    if ((pglClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC) __GLeeGetProcAddress("glClearColorIiEXT"))!=0) nLinked++;
+    if ((pglClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC) __GLeeGetProcAddress("glClearColorIuiEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==6) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_NV_depth_buffer_float(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_depth_buffer_float
+    if ((pglDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC) __GLeeGetProcAddress("glDepthRangedNV"))!=0) nLinked++;
+    if ((pglClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC) __GLeeGetProcAddress("glClearDepthdNV"))!=0) nLinked++;
+    if ((pglDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC) __GLeeGetProcAddress("glDepthBoundsdNV"))!=0) nLinked++;
+#endif
+    if (nLinked==3) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_texture_compression_latc(void) {return GLEE_LINK_COMPLETE;}
+
+GLuint __GLeeLink_GL_NV_transform_feedback(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_transform_feedback
+    if ((pglBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC) __GLeeGetProcAddress("glBeginTransformFeedbackNV"))!=0) nLinked++;
+    if ((pglEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC) __GLeeGetProcAddress("glEndTransformFeedbackNV"))!=0) nLinked++;
+    if ((pglTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) __GLeeGetProcAddress("glTransformFeedbackAttribsNV"))!=0) nLinked++;
+    if ((pglBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC) __GLeeGetProcAddress("glBindBufferRangeNV"))!=0) nLinked++;
+    if ((pglBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC) __GLeeGetProcAddress("glBindBufferOffsetNV"))!=0) nLinked++;
+    if ((pglBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC) __GLeeGetProcAddress("glBindBufferBaseNV"))!=0) nLinked++;
+    if ((pglTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) __GLeeGetProcAddress("glTransformFeedbackVaryingsNV"))!=0) nLinked++;
+    if ((pglActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC) __GLeeGetProcAddress("glActiveVaryingNV"))!=0) nLinked++;
+    if ((pglGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC) __GLeeGetProcAddress("glGetVaryingLocationNV"))!=0) nLinked++;
+    if ((pglGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC) __GLeeGetProcAddress("glGetActiveVaryingNV"))!=0) nLinked++;
+    if ((pglGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) __GLeeGetProcAddress("glGetTransformFeedbackVaryingNV"))!=0) nLinked++;
+#endif
+    if (nLinked==11) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_NV_geometry_program4(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_geometry_program4
+    if ((pglProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC) __GLeeGetProcAddress("glProgramVertexLimitNV"))!=0) nLinked++;
+#endif
+    if (nLinked==1) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_NV_gpu_program4(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_gpu_program4
+    if ((pglProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC) __GLeeGetProcAddress("glProgramLocalParameterI4iNV"))!=0) nLinked++;
+    if ((pglProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) __GLeeGetProcAddress("glProgramLocalParameterI4ivNV"))!=0) nLinked++;
+    if ((pglProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) __GLeeGetProcAddress("glProgramLocalParametersI4ivNV"))!=0) nLinked++;
+    if ((pglProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) __GLeeGetProcAddress("glProgramLocalParameterI4uiNV"))!=0) nLinked++;
+    if ((pglProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) __GLeeGetProcAddress("glProgramLocalParameterI4uivNV"))!=0) nLinked++;
+    if ((pglProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) __GLeeGetProcAddress("glProgramLocalParametersI4uivNV"))!=0) nLinked++;
+    if ((pglProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC) __GLeeGetProcAddress("glProgramEnvParameterI4iNV"))!=0) nLinked++;
+    if ((pglProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC) __GLeeGetProcAddress("glProgramEnvParameterI4ivNV"))!=0) nLinked++;
+    if ((pglProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) __GLeeGetProcAddress("glProgramEnvParametersI4ivNV"))!=0) nLinked++;
+    if ((pglProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC) __GLeeGetProcAddress("glProgramEnvParameterI4uiNV"))!=0) nLinked++;
+    if ((pglProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) __GLeeGetProcAddress("glProgramEnvParameterI4uivNV"))!=0) nLinked++;
+    if ((pglProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) __GLeeGetProcAddress("glProgramEnvParametersI4uivNV"))!=0) nLinked++;
+    if ((pglGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) __GLeeGetProcAddress("glGetProgramLocalParameterIivNV"))!=0) nLinked++;
+    if ((pglGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) __GLeeGetProcAddress("glGetProgramLocalParameterIuivNV"))!=0) nLinked++;
+    if ((pglGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) __GLeeGetProcAddress("glGetProgramEnvParameterIivNV"))!=0) nLinked++;
+    if ((pglGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) __GLeeGetProcAddress("glGetProgramEnvParameterIuivNV"))!=0) nLinked++;
+#endif
+    if (nLinked==16) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_NV_framebuffer_multisample_coverage(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_framebuffer_multisample_coverage
+    if ((pglRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) __GLeeGetProcAddress("glRenderbufferStorageMultisampleCoverageNV"))!=0) nLinked++;
+#endif
+    if (nLinked==1) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_framebuffer_multisample(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_framebuffer_multisample
+    if ((pglRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) __GLeeGetProcAddress("glRenderbufferStorageMultisampleEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==1) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_framebuffer_blit(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_framebuffer_blit
+    if ((pglBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC) __GLeeGetProcAddress("glBlitFramebufferEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==1) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_texture_compression_rgtc(void) {return GLEE_LINK_COMPLETE;}
+
 GLuint __GLeeLink_GL_EXT_color_matrix(void) {return GLEE_LINK_COMPLETE;}
 
 GLuint __GLeeLink_GL_SGIX_texture_select(void) {return GLEE_LINK_COMPLETE;}
@@ -7528,6 +8147,47 @@
     return GLEE_LINK_PARTIAL;
 }
 
+GLuint __GLeeLink_GL_EXT_draw_buffers2(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_draw_buffers2
+    if ((pglColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC) __GLeeGetProcAddress("glColorMaskIndexedEXT"))!=0) nLinked++;
+    if ((pglGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC) __GLeeGetProcAddress("glGetBooleanIndexedvEXT"))!=0) nLinked++;
+    if ((pglGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC) __GLeeGetProcAddress("glGetIntegerIndexedvEXT"))!=0) nLinked++;
+    if ((pglEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC) __GLeeGetProcAddress("glEnableIndexedEXT"))!=0) nLinked++;
+    if ((pglDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC) __GLeeGetProcAddress("glDisableIndexedEXT"))!=0) nLinked++;
+    if ((pglIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC) __GLeeGetProcAddress("glIsEnabledIndexedEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==6) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_NV_parameter_buffer_object(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_NV_parameter_buffer_object
+    if ((pglProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) __GLeeGetProcAddress("glProgramBufferParametersfvNV"))!=0) nLinked++;
+    if ((pglProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) __GLeeGetProcAddress("glProgramBufferParametersIivNV"))!=0) nLinked++;
+    if ((pglProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) __GLeeGetProcAddress("glProgramBufferParametersIuivNV"))!=0) nLinked++;
+#endif
+    if (nLinked==3) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
+GLuint __GLeeLink_GL_EXT_draw_instanced(void)
+{
+    GLint nLinked=0;
+#ifdef __GLEE_GL_EXT_draw_instanced
+    if ((pglDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC) __GLeeGetProcAddress("glDrawArraysInstancedEXT"))!=0) nLinked++;
+    if ((pglDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC) __GLeeGetProcAddress("glDrawElementsInstancedEXT"))!=0) nLinked++;
+#endif
+    if (nLinked==2) return GLEE_LINK_COMPLETE;
+    if (nLinked==0) return GLEE_LINK_FAIL;
+    return GLEE_LINK_PARTIAL;
+}
+
 GLuint __GLeeLink_GL_EXT_fragment_lighting(void)
 {
     GLint nLinked=0;
@@ -7556,28 +8216,6 @@
     return GLEE_LINK_PARTIAL;
 }
 
-GLuint __GLeeLink_GL_EXT_framebuffer_blit(void)
-{
-    GLint nLinked=0;
-#ifdef __GLEE_GL_EXT_framebuffer_blit
-    if ((pglBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC) __GLeeGetProcAddress("glBlitFramebufferEXT"))!=0) nLinked++;
-#endif
-    if (nLinked==1) return GLEE_LINK_COMPLETE;
-    if (nLinked==0) return GLEE_LINK_FAIL;
-    return GLEE_LINK_PARTIAL;
-}
-
-GLuint __GLeeLink_GL_EXT_framebuffer_multisample(void)
-{
-    GLint nLinked=0;
-#ifdef __GLEE_GL_EXT_framebuffer_multisample
-    if ((pglRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) __GLeeGetProcAddress("glRenderbufferStorageMultisampleEXT"))!=0) nLinked++;
-#endif
-    if (nLinked==1) return GLEE_LINK_COMPLETE;
-    if (nLinked==0) return GLEE_LINK_FAIL;
-    return GLEE_LINK_PARTIAL;
-}
-
 GLuint __GLeeLink_GL_EXT_packed_depth_stencil(void) {return GLEE_LINK_COMPLETE;}
 
 GLuint __GLeeLink_GL_EXT_scene_marker(void)
@@ -7628,7 +8266,7 @@
 
 GLuint __GLeeLink_GL_SGIX_texture_range(void) {return GLEE_LINK_COMPLETE;}
 
-GLEE_LINK_FUNCTION __GLeeGLLoadFunction[278];
+GLEE_LINK_FUNCTION __GLeeGLLoadFunction[300];
 
 void initGLLoadFunctions(void)
 {
@@ -7638,278 +8276,300 @@
     __GLeeGLLoadFunction[3]=__GLeeLink_GL_VERSION_1_4;
     __GLeeGLLoadFunction[4]=__GLeeLink_GL_VERSION_1_5;
     __GLeeGLLoadFunction[5]=__GLeeLink_GL_VERSION_2_0;
-    __GLeeGLLoadFunction[6]=__GLeeLink_GL_ARB_multitexture;
-    __GLeeGLLoadFunction[7]=__GLeeLink_GL_ARB_transpose_matrix;
-    __GLeeGLLoadFunction[8]=__GLeeLink_GL_ARB_multisample;
-    __GLeeGLLoadFunction[9]=__GLeeLink_GL_ARB_texture_env_add;
-    __GLeeGLLoadFunction[10]=__GLeeLink_GL_ARB_texture_cube_map;
-    __GLeeGLLoadFunction[11]=__GLeeLink_GL_ARB_texture_compression;
-    __GLeeGLLoadFunction[12]=__GLeeLink_GL_ARB_texture_border_clamp;
-    __GLeeGLLoadFunction[13]=__GLeeLink_GL_ARB_point_parameters;
-    __GLeeGLLoadFunction[14]=__GLeeLink_GL_ARB_vertex_blend;
-    __GLeeGLLoadFunction[15]=__GLeeLink_GL_ARB_matrix_palette;
-    __GLeeGLLoadFunction[16]=__GLeeLink_GL_ARB_texture_env_combine;
-    __GLeeGLLoadFunction[17]=__GLeeLink_GL_ARB_texture_env_crossbar;
-    __GLeeGLLoadFunction[18]=__GLeeLink_GL_ARB_texture_env_dot3;
-    __GLeeGLLoadFunction[19]=__GLeeLink_GL_ARB_texture_mirrored_repeat;
-    __GLeeGLLoadFunction[20]=__GLeeLink_GL_ARB_depth_texture;
-    __GLeeGLLoadFunction[21]=__GLeeLink_GL_ARB_shadow;
-    __GLeeGLLoadFunction[22]=__GLeeLink_GL_ARB_shadow_ambient;
-    __GLeeGLLoadFunction[23]=__GLeeLink_GL_ARB_window_pos;
-    __GLeeGLLoadFunction[24]=__GLeeLink_GL_ARB_vertex_program;
-    __GLeeGLLoadFunction[25]=__GLeeLink_GL_ARB_fragment_program;
-    __GLeeGLLoadFunction[26]=__GLeeLink_GL_ARB_vertex_buffer_object;
-    __GLeeGLLoadFunction[27]=__GLeeLink_GL_ARB_occlusion_query;
-    __GLeeGLLoadFunction[28]=__GLeeLink_GL_ARB_shader_objects;
-    __GLeeGLLoadFunction[29]=__GLeeLink_GL_ARB_vertex_shader;
-    __GLeeGLLoadFunction[30]=__GLeeLink_GL_ARB_fragment_shader;
-    __GLeeGLLoadFunction[31]=__GLeeLink_GL_ARB_shading_language_100;
-    __GLeeGLLoadFunction[32]=__GLeeLink_GL_ARB_texture_non_power_of_two;
-    __GLeeGLLoadFunction[33]=__GLeeLink_GL_ARB_point_sprite;
-    __GLeeGLLoadFunction[34]=__GLeeLink_GL_ARB_fragment_program_shadow;
-    __GLeeGLLoadFunction[35]=__GLeeLink_GL_ARB_draw_buffers;
-    __GLeeGLLoadFunction[36]=__GLeeLink_GL_ARB_texture_rectangle;
-    __GLeeGLLoadFunction[37]=__GLeeLink_GL_ARB_color_buffer_float;
-    __GLeeGLLoadFunction[38]=__GLeeLink_GL_ARB_half_float_pixel;
-    __GLeeGLLoadFunction[39]=__GLeeLink_GL_ARB_texture_float;
-    __GLeeGLLoadFunction[40]=__GLeeLink_GL_ARB_pixel_buffer_object;
-    __GLeeGLLoadFunction[41]=__GLeeLink_GL_EXT_abgr;
-    __GLeeGLLoadFunction[42]=__GLeeLink_GL_EXT_blend_color;
-    __GLeeGLLoadFunction[43]=__GLeeLink_GL_EXT_polygon_offset;
-    __GLeeGLLoadFunction[44]=__GLeeLink_GL_EXT_texture;
-    __GLeeGLLoadFunction[45]=__GLeeLink_GL_EXT_texture3D;
-    __GLeeGLLoadFunction[46]=__GLeeLink_GL_SGIS_texture_filter4;
-    __GLeeGLLoadFunction[47]=__GLeeLink_GL_EXT_subtexture;
-    __GLeeGLLoadFunction[48]=__GLeeLink_GL_EXT_copy_texture;
-    __GLeeGLLoadFunction[49]=__GLeeLink_GL_EXT_histogram;
-    __GLeeGLLoadFunction[50]=__GLeeLink_GL_EXT_convolution;
-    __GLeeGLLoadFunction[51]=__GLeeLink_GL_SGI_color_matrix;
-    __GLeeGLLoadFunction[52]=__GLeeLink_GL_SGI_color_table;
-    __GLeeGLLoadFunction[53]=__GLeeLink_GL_SGIS_pixel_texture;
-    __GLeeGLLoadFunction[54]=__GLeeLink_GL_SGIX_pixel_texture;
-    __GLeeGLLoadFunction[55]=__GLeeLink_GL_SGIS_texture4D;
-    __GLeeGLLoadFunction[56]=__GLeeLink_GL_SGI_texture_color_table;
-    __GLeeGLLoadFunction[57]=__GLeeLink_GL_EXT_cmyka;
-    __GLeeGLLoadFunction[58]=__GLeeLink_GL_EXT_texture_object;
-    __GLeeGLLoadFunction[59]=__GLeeLink_GL_SGIS_detail_texture;
-    __GLeeGLLoadFunction[60]=__GLeeLink_GL_SGIS_sharpen_texture;
-    __GLeeGLLoadFunction[61]=__GLeeLink_GL_EXT_packed_pixels;
-    __GLeeGLLoadFunction[62]=__GLeeLink_GL_SGIS_texture_lod;
-    __GLeeGLLoadFunction[63]=__GLeeLink_GL_SGIS_multisample;
-    __GLeeGLLoadFunction[64]=__GLeeLink_GL_EXT_rescale_normal;
-    __GLeeGLLoadFunction[65]=__GLeeLink_GL_EXT_vertex_array;
-    __GLeeGLLoadFunction[66]=__GLeeLink_GL_EXT_misc_attribute;
-    __GLeeGLLoadFunction[67]=__GLeeLink_GL_SGIS_generate_mipmap;
-    __GLeeGLLoadFunction[68]=__GLeeLink_GL_SGIX_clipmap;
-    __GLeeGLLoadFunction[69]=__GLeeLink_GL_SGIX_shadow;
-    __GLeeGLLoadFunction[70]=__GLeeLink_GL_SGIS_texture_edge_clamp;
-    __GLeeGLLoadFunction[71]=__GLeeLink_GL_SGIS_texture_border_clamp;
-    __GLeeGLLoadFunction[72]=__GLeeLink_GL_EXT_blend_minmax;
-    __GLeeGLLoadFunction[73]=__GLeeLink_GL_EXT_blend_subtract;
-    __GLeeGLLoadFunction[74]=__GLeeLink_GL_EXT_blend_logic_op;
-    __GLeeGLLoadFunction[75]=__GLeeLink_GL_SGIX_interlace;
-    __GLeeGLLoadFunction[76]=__GLeeLink_GL_SGIX_pixel_tiles;
-    __GLeeGLLoadFunction[77]=__GLeeLink_GL_SGIS_texture_select;
-    __GLeeGLLoadFunction[78]=__GLeeLink_GL_SGIX_sprite;
-    __GLeeGLLoadFunction[79]=__GLeeLink_GL_SGIX_texture_multi_buffer;
-    __GLeeGLLoadFunction[80]=__GLeeLink_GL_EXT_point_parameters;
-    __GLeeGLLoadFunction[81]=__GLeeLink_GL_SGIS_point_parameters;
-    __GLeeGLLoadFunction[82]=__GLeeLink_GL_SGIX_instruments;
-    __GLeeGLLoadFunction[83]=__GLeeLink_GL_SGIX_texture_scale_bias;
-    __GLeeGLLoadFunction[84]=__GLeeLink_GL_SGIX_framezoom;
-    __GLeeGLLoadFunction[85]=__GLeeLink_GL_SGIX_tag_sample_buffer;
-    __GLeeGLLoadFunction[86]=__GLeeLink_GL_FfdMaskSGIX;
-    __GLeeGLLoadFunction[87]=__GLeeLink_GL_SGIX_polynomial_ffd;
-    __GLeeGLLoadFunction[88]=__GLeeLink_GL_SGIX_reference_plane;
-    __GLeeGLLoadFunction[89]=__GLeeLink_GL_SGIX_flush_raster;
-    __GLeeGLLoadFunction[90]=__GLeeLink_GL_SGIX_depth_texture;
-    __GLeeGLLoadFunction[91]=__GLeeLink_GL_SGIS_fog_function;
-    __GLeeGLLoadFunction[92]=__GLeeLink_GL_SGIX_fog_offset;
-    __GLeeGLLoadFunction[93]=__GLeeLink_GL_HP_image_transform;
-    __GLeeGLLoadFunction[94]=__GLeeLink_GL_HP_convolution_border_modes;
-    __GLeeGLLoadFunction[95]=__GLeeLink_GL_INGR_palette_buffer;
-    __GLeeGLLoadFunction[96]=__GLeeLink_GL_SGIX_texture_add_env;
-    __GLeeGLLoadFunction[97]=__GLeeLink_GL_EXT_color_subtable;
-    __GLeeGLLoadFunction[98]=__GLeeLink_GL_PGI_vertex_hints;
-    __GLeeGLLoadFunction[99]=__GLeeLink_GL_PGI_misc_hints;
-    __GLeeGLLoadFunction[100]=__GLeeLink_GL_EXT_paletted_texture;
-    __GLeeGLLoadFunction[101]=__GLeeLink_GL_EXT_clip_volume_hint;
-    __GLeeGLLoadFunction[102]=__GLeeLink_GL_SGIX_list_priority;
-    __GLeeGLLoadFunction[103]=__GLeeLink_GL_SGIX_ir_instrument1;
-    __GLeeGLLoadFunction[104]=__GLeeLink_GL_SGIX_calligraphic_fragment;
-    __GLeeGLLoadFunction[105]=__GLeeLink_GL_SGIX_texture_lod_bias;
-    __GLeeGLLoadFunction[106]=__GLeeLink_GL_SGIX_shadow_ambient;
-    __GLeeGLLoadFunction[107]=__GLeeLink_GL_EXT_index_texture;
-    __GLeeGLLoadFunction[108]=__GLeeLink_GL_EXT_index_material;
-    __GLeeGLLoadFunction[109]=__GLeeLink_GL_EXT_index_func;
-    __GLeeGLLoadFunction[110]=__GLeeLink_GL_EXT_index_array_formats;
-    __GLeeGLLoadFunction[111]=__GLeeLink_GL_EXT_compiled_vertex_array;
-    __GLeeGLLoadFunction[112]=__GLeeLink_GL_EXT_cull_vertex;
-    __GLeeGLLoadFunction[113]=__GLeeLink_GL_SGIX_ycrcb;
-    __GLeeGLLoadFunction[114]=__GLeeLink_GL_SGIX_fragment_lighting;
-    __GLeeGLLoadFunction[115]=__GLeeLink_GL_IBM_rasterpos_clip;
-    __GLeeGLLoadFunction[116]=__GLeeLink_GL_HP_texture_lighting;
-    __GLeeGLLoadFunction[117]=__GLeeLink_GL_EXT_draw_range_elements;
-    __GLeeGLLoadFunction[118]=__GLeeLink_GL_WIN_phong_shading;
-    __GLeeGLLoadFunction[119]=__GLeeLink_GL_WIN_specular_fog;
-    __GLeeGLLoadFunction[120]=__GLeeLink_GL_EXT_light_texture;
-    __GLeeGLLoadFunction[121]=__GLeeLink_GL_SGIX_blend_alpha_minmax;
-    __GLeeGLLoadFunction[122]=__GLeeLink_GL_SGIX_impact_pixel_texture;
-    __GLeeGLLoadFunction[123]=__GLeeLink_GL_EXT_bgra;
-    __GLeeGLLoadFunction[124]=__GLeeLink_GL_SGIX_async;
-    __GLeeGLLoadFunction[125]=__GLeeLink_GL_SGIX_async_pixel;
-    __GLeeGLLoadFunction[126]=__GLeeLink_GL_SGIX_async_histogram;
-    __GLeeGLLoadFunction[127]=__GLeeLink_GL_INTEL_texture_scissor;
-    __GLeeGLLoadFunction[128]=__GLeeLink_GL_INTEL_parallel_arrays;
-    __GLeeGLLoadFunction[129]=__GLeeLink_GL_HP_occlusion_test;
-    __GLeeGLLoadFunction[130]=__GLeeLink_GL_EXT_pixel_transform;
-    __GLeeGLLoadFunction[131]=__GLeeLink_GL_EXT_pixel_transform_color_table;
-    __GLeeGLLoadFunction[132]=__GLeeLink_GL_EXT_shared_texture_palette;
-    __GLeeGLLoadFunction[133]=__GLeeLink_GL_EXT_separate_specular_color;
-    __GLeeGLLoadFunction[134]=__GLeeLink_GL_EXT_secondary_color;
-    __GLeeGLLoadFunction[135]=__GLeeLink_GL_EXT_texture_perturb_normal;
-    __GLeeGLLoadFunction[136]=__GLeeLink_GL_EXT_multi_draw_arrays;
-    __GLeeGLLoadFunction[137]=__GLeeLink_GL_EXT_fog_coord;
-    __GLeeGLLoadFunction[138]=__GLeeLink_GL_REND_screen_coordinates;
-    __GLeeGLLoadFunction[139]=__GLeeLink_GL_EXT_coordinate_frame;
-    __GLeeGLLoadFunction[140]=__GLeeLink_GL_EXT_texture_env_combine;
-    __GLeeGLLoadFunction[141]=__GLeeLink_GL_APPLE_specular_vector;
-    __GLeeGLLoadFunction[142]=__GLeeLink_GL_APPLE_transform_hint;
-    __GLeeGLLoadFunction[143]=__GLeeLink_GL_SGIX_fog_scale;
-    __GLeeGLLoadFunction[144]=__GLeeLink_GL_SUNX_constant_data;
-    __GLeeGLLoadFunction[145]=__GLeeLink_GL_SUN_global_alpha;
-    __GLeeGLLoadFunction[146]=__GLeeLink_GL_SUN_triangle_list;
-    __GLeeGLLoadFunction[147]=__GLeeLink_GL_SUN_vertex;
-    __GLeeGLLoadFunction[148]=__GLeeLink_GL_EXT_blend_func_separate;
-    __GLeeGLLoadFunction[149]=__GLeeLink_GL_INGR_color_clamp;
-    __GLeeGLLoadFunction[150]=__GLeeLink_GL_INGR_interlace_read;
-    __GLeeGLLoadFunction[151]=__GLeeLink_GL_EXT_stencil_wrap;
-    __GLeeGLLoadFunction[152]=__GLeeLink_GL_EXT_422_pixels;
-    __GLeeGLLoadFunction[153]=__GLeeLink_GL_NV_texgen_reflection;
-    __GLeeGLLoadFunction[154]=__GLeeLink_GL_EXT_texture_cube_map;
-    __GLeeGLLoadFunction[155]=__GLeeLink_GL_SUN_convolution_border_modes;
-    __GLeeGLLoadFunction[156]=__GLeeLink_GL_EXT_texture_env_add;
-    __GLeeGLLoadFunction[157]=__GLeeLink_GL_EXT_texture_lod_bias;
-    __GLeeGLLoadFunction[158]=__GLeeLink_GL_EXT_texture_filter_anisotropic;
-    __GLeeGLLoadFunction[159]=__GLeeLink_GL_EXT_vertex_weighting;
-    __GLeeGLLoadFunction[160]=__GLeeLink_GL_NV_light_max_exponent;
-    __GLeeGLLoadFunction[161]=__GLeeLink_GL_NV_vertex_array_range;
-    __GLeeGLLoadFunction[162]=__GLeeLink_GL_NV_register_combiners;
-    __GLeeGLLoadFunction[163]=__GLeeLink_GL_NV_fog_distance;
-    __GLeeGLLoadFunction[164]=__GLeeLink_GL_NV_texgen_emboss;
-    __GLeeGLLoadFunction[165]=__GLeeLink_GL_NV_blend_square;
-    __GLeeGLLoadFunction[166]=__GLeeLink_GL_NV_texture_env_combine4;
-    __GLeeGLLoadFunction[167]=__GLeeLink_GL_MESA_resize_buffers;
-    __GLeeGLLoadFunction[168]=__GLeeLink_GL_MESA_window_pos;
-    __GLeeGLLoadFunction[169]=__GLeeLink_GL_EXT_texture_compression_s3tc;
-    __GLeeGLLoadFunction[170]=__GLeeLink_GL_IBM_cull_vertex;
-    __GLeeGLLoadFunction[171]=__GLeeLink_GL_IBM_multimode_draw_arrays;
-    __GLeeGLLoadFunction[172]=__GLeeLink_GL_IBM_vertex_array_lists;
-    __GLeeGLLoadFunction[173]=__GLeeLink_GL_SGIX_subsample;
-    __GLeeGLLoadFunction[174]=__GLeeLink_GL_SGIX_ycrcb_subsample;
-    __GLeeGLLoadFunction[175]=__GLeeLink_GL_SGIX_ycrcba;
-    __GLeeGLLoadFunction[176]=__GLeeLink_GL_SGI_depth_pass_instrument;
-    __GLeeGLLoadFunction[177]=__GLeeLink_GL_3DFX_texture_compression_FXT1;
-    __GLeeGLLoadFunction[178]=__GLeeLink_GL_3DFX_multisample;
-    __GLeeGLLoadFunction[179]=__GLeeLink_GL_3DFX_tbuffer;
-    __GLeeGLLoadFunction[180]=__GLeeLink_GL_EXT_multisample;
-    __GLeeGLLoadFunction[181]=__GLeeLink_GL_SGIX_vertex_preclip;
-    __GLeeGLLoadFunction[182]=__GLeeLink_GL_SGIX_convolution_accuracy;
-    __GLeeGLLoadFunction[183]=__GLeeLink_GL_SGIX_resample;
-    __GLeeGLLoadFunction[184]=__GLeeLink_GL_SGIS_point_line_texgen;
-    __GLeeGLLoadFunction[185]=__GLeeLink_GL_SGIS_texture_color_mask;
-    __GLeeGLLoadFunction[186]=__GLeeLink_GL_EXT_texture_env_dot3;
-    __GLeeGLLoadFunction[187]=__GLeeLink_GL_ATI_texture_mirror_once;
-    __GLeeGLLoadFunction[188]=__GLeeLink_GL_NV_fence;
-    __GLeeGLLoadFunction[189]=__GLeeLink_GL_IBM_texture_mirrored_repeat;
-    __GLeeGLLoadFunction[190]=__GLeeLink_GL_NV_evaluators;
-    __GLeeGLLoadFunction[191]=__GLeeLink_GL_NV_packed_depth_stencil;
-    __GLeeGLLoadFunction[192]=__GLeeLink_GL_NV_register_combiners2;
-    __GLeeGLLoadFunction[193]=__GLeeLink_GL_NV_texture_compression_vtc;
-    __GLeeGLLoadFunction[194]=__GLeeLink_GL_NV_texture_rectangle;
-    __GLeeGLLoadFunction[195]=__GLeeLink_GL_NV_texture_shader;
-    __GLeeGLLoadFunction[196]=__GLeeLink_GL_NV_texture_shader2;
-    __GLeeGLLoadFunction[197]=__GLeeLink_GL_NV_vertex_array_range2;
-    __GLeeGLLoadFunction[198]=__GLeeLink_GL_NV_vertex_program;
-    __GLeeGLLoadFunction[199]=__GLeeLink_GL_SGIX_texture_coordinate_clamp;
-    __GLeeGLLoadFunction[200]=__GLeeLink_GL_SGIX_scalebias_hint;
-    __GLeeGLLoadFunction[201]=__GLeeLink_GL_OML_interlace;
-    __GLeeGLLoadFunction[202]=__GLeeLink_GL_OML_subsample;
-    __GLeeGLLoadFunction[203]=__GLeeLink_GL_OML_resample;
-    __GLeeGLLoadFunction[204]=__GLeeLink_GL_NV_copy_depth_to_color;
-    __GLeeGLLoadFunction[205]=__GLeeLink_GL_ATI_envmap_bumpmap;
-    __GLeeGLLoadFunction[206]=__GLeeLink_GL_ATI_fragment_shader;
-    __GLeeGLLoadFunction[207]=__GLeeLink_GL_ATI_pn_triangles;
-    __GLeeGLLoadFunction[208]=__GLeeLink_GL_ATI_vertex_array_object;
-    __GLeeGLLoadFunction[209]=__GLeeLink_GL_EXT_vertex_shader;
-    __GLeeGLLoadFunction[210]=__GLeeLink_GL_ATI_vertex_streams;
-    __GLeeGLLoadFunction[211]=__GLeeLink_GL_ATI_element_array;
-    __GLeeGLLoadFunction[212]=__GLeeLink_GL_SUN_mesh_array;
-    __GLeeGLLoadFunction[213]=__GLeeLink_GL_SUN_slice_accum;
-    __GLeeGLLoadFunction[214]=__GLeeLink_GL_NV_multisample_filter_hint;
-    __GLeeGLLoadFunction[215]=__GLeeLink_GL_NV_depth_clamp;
-    __GLeeGLLoadFunction[216]=__GLeeLink_GL_NV_occlusion_query;
-    __GLeeGLLoadFunction[217]=__GLeeLink_GL_NV_point_sprite;
-    __GLeeGLLoadFunction[218]=__GLeeLink_GL_NV_texture_shader3;
-    __GLeeGLLoadFunction[219]=__GLeeLink_GL_NV_vertex_program1_1;
-    __GLeeGLLoadFunction[220]=__GLeeLink_GL_EXT_shadow_funcs;
-    __GLeeGLLoadFunction[221]=__GLeeLink_GL_EXT_stencil_two_side;
-    __GLeeGLLoadFunction[222]=__GLeeLink_GL_ATI_text_fragment_shader;
-    __GLeeGLLoadFunction[223]=__GLeeLink_GL_APPLE_client_storage;
-    __GLeeGLLoadFunction[224]=__GLeeLink_GL_APPLE_element_array;
-    __GLeeGLLoadFunction[225]=__GLeeLink_GL_APPLE_fence;
-    __GLeeGLLoadFunction[226]=__GLeeLink_GL_APPLE_vertex_array_object;
-    __GLeeGLLoadFunction[227]=__GLeeLink_GL_APPLE_vertex_array_range;
-    __GLeeGLLoadFunction[228]=__GLeeLink_GL_APPLE_ycbcr_422;
-    __GLeeGLLoadFunction[229]=__GLeeLink_GL_S3_s3tc;
-    __GLeeGLLoadFunction[230]=__GLeeLink_GL_ATI_draw_buffers;
-    __GLeeGLLoadFunction[231]=__GLeeLink_GL_ATI_pixel_format_float;
-    __GLeeGLLoadFunction[232]=__GLeeLink_GL_ATI_texture_env_combine3;
-    __GLeeGLLoadFunction[233]=__GLeeLink_GL_ATI_texture_float;
-    __GLeeGLLoadFunction[234]=__GLeeLink_GL_NV_float_buffer;
-    __GLeeGLLoadFunction[235]=__GLeeLink_GL_NV_fragment_program;
-    __GLeeGLLoadFunction[236]=__GLeeLink_GL_NV_half_float;
-    __GLeeGLLoadFunction[237]=__GLeeLink_GL_NV_pixel_data_range;
-    __GLeeGLLoadFunction[238]=__GLeeLink_GL_NV_primitive_restart;
-    __GLeeGLLoadFunction[239]=__GLeeLink_GL_NV_texture_expand_normal;
-    __GLeeGLLoadFunction[240]=__GLeeLink_GL_NV_vertex_program2;
-    __GLeeGLLoadFunction[241]=__GLeeLink_GL_ATI_map_object_buffer;
-    __GLeeGLLoadFunction[242]=__GLeeLink_GL_ATI_separate_stencil;
-    __GLeeGLLoadFunction[243]=__GLeeLink_GL_ATI_vertex_attrib_array_object;
-    __GLeeGLLoadFunction[244]=__GLeeLink_GL_OES_read_format;
-    __GLeeGLLoadFunction[245]=__GLeeLink_GL_EXT_depth_bounds_test;
-    __GLeeGLLoadFunction[246]=__GLeeLink_GL_EXT_texture_mirror_clamp;
-    __GLeeGLLoadFunction[247]=__GLeeLink_GL_EXT_blend_equation_separate;
-    __GLeeGLLoadFunction[248]=__GLeeLink_GL_MESA_pack_invert;
-    __GLeeGLLoadFunction[249]=__GLeeLink_GL_MESA_ycbcr_texture;
-    __GLeeGLLoadFunction[250]=__GLeeLink_GL_EXT_pixel_buffer_object;
-    __GLeeGLLoadFunction[251]=__GLeeLink_GL_NV_fragment_program_option;
-    __GLeeGLLoadFunction[252]=__GLeeLink_GL_NV_fragment_program2;
-    __GLeeGLLoadFunction[253]=__GLeeLink_GL_NV_vertex_program2_option;
-    __GLeeGLLoadFunction[254]=__GLeeLink_GL_NV_vertex_program3;
-    __GLeeGLLoadFunction[255]=__GLeeLink_GL_EXT_framebuffer_object;
-    __GLeeGLLoadFunction[256]=__GLeeLink_GL_GREMEDY_string_marker;
-    __GLeeGLLoadFunction[257]=__GLeeLink_GL_EXT_color_matrix;
-    __GLeeGLLoadFunction[258]=__GLeeLink_GL_SGIX_texture_select;
-    __GLeeGLLoadFunction[259]=__GLeeLink_GL_INGR_blend_func_separate;
-    __GLeeGLLoadFunction[260]=__GLeeLink_GL_SGIX_depth_pass_instrument;
-    __GLeeGLLoadFunction[261]=__GLeeLink_GL_SGIX_igloo_interface;
-    __GLeeGLLoadFunction[262]=__GLeeLink_GL_EXT_fragment_lighting;
-    __GLeeGLLoadFunction[263]=__GLeeLink_GL_EXT_framebuffer_blit;
-    __GLeeGLLoadFunction[264]=__GLeeLink_GL_EXT_framebuffer_multisample;
-    __GLeeGLLoadFunction[265]=__GLeeLink_GL_EXT_packed_depth_stencil;
-    __GLeeGLLoadFunction[266]=__GLeeLink_GL_EXT_scene_marker;
-    __GLeeGLLoadFunction[267]=__GLeeLink_GL_EXT_stencil_clear_tag;
-    __GLeeGLLoadFunction[268]=__GLeeLink_GL_EXT_texture_compression_dxt1;
-    __GLeeGLLoadFunction[269]=__GLeeLink_GL_EXT_texture_env;
-    __GLeeGLLoadFunction[270]=__GLeeLink_GL_EXT_texture_sRGB;
-    __GLeeGLLoadFunction[271]=__GLeeLink_GL_IBM_static_data;
-    __GLeeGLLoadFunction[272]=__GLeeLink_GL_MESAX_texture_stack;
-    __GLeeGLLoadFunction[273]=__GLeeLink_GL_OES_byte_coordinates;
-    __GLeeGLLoadFunction[274]=__GLeeLink_GL_OES_compressed_paletted_texture;
-    __GLeeGLLoadFunction[275]=__GLeeLink_GL_OES_single_precision;
-    __GLeeGLLoadFunction[276]=__GLeeLink_GL_SGIX_pixel_texture_bits;
-    __GLeeGLLoadFunction[277]=__GLeeLink_GL_SGIX_texture_range;
+    __GLeeGLLoadFunction[6]=__GLeeLink_GL_VERSION_2_1;
+    __GLeeGLLoadFunction[7]=__GLeeLink_GL_ARB_multitexture;
+    __GLeeGLLoadFunction[8]=__GLeeLink_GL_ARB_transpose_matrix;
+    __GLeeGLLoadFunction[9]=__GLeeLink_GL_ARB_multisample;
+    __GLeeGLLoadFunction[10]=__GLeeLink_GL_ARB_texture_env_add;
+    __GLeeGLLoadFunction[11]=__GLeeLink_GL_ARB_texture_cube_map;
+    __GLeeGLLoadFunction[12]=__GLeeLink_GL_ARB_texture_compression;
+    __GLeeGLLoadFunction[13]=__GLeeLink_GL_ARB_texture_border_clamp;
+    __GLeeGLLoadFunction[14]=__GLeeLink_GL_ARB_point_parameters;
+    __GLeeGLLoadFunction[15]=__GLeeLink_GL_ARB_vertex_blend;
+    __GLeeGLLoadFunction[16]=__GLeeLink_GL_ARB_matrix_palette;
+    __GLeeGLLoadFunction[17]=__GLeeLink_GL_ARB_texture_env_combine;
+    __GLeeGLLoadFunction[18]=__GLeeLink_GL_ARB_texture_env_crossbar;
+    __GLeeGLLoadFunction[19]=__GLeeLink_GL_ARB_texture_env_dot3;
+    __GLeeGLLoadFunction[20]=__GLeeLink_GL_ARB_texture_mirrored_repeat;
+    __GLeeGLLoadFunction[21]=__GLeeLink_GL_ARB_depth_texture;
+    __GLeeGLLoadFunction[22]=__GLeeLink_GL_ARB_shadow;
+    __GLeeGLLoadFunction[23]=__GLeeLink_GL_ARB_shadow_ambient;
+    __GLeeGLLoadFunction[24]=__GLeeLink_GL_ARB_window_pos;
+    __GLeeGLLoadFunction[25]=__GLeeLink_GL_ARB_vertex_program;
+    __GLeeGLLoadFunction[26]=__GLeeLink_GL_ARB_fragment_program;
+    __GLeeGLLoadFunction[27]=__GLeeLink_GL_ARB_vertex_buffer_object;
+    __GLeeGLLoadFunction[28]=__GLeeLink_GL_ARB_occlusion_query;
+    __GLeeGLLoadFunction[29]=__GLeeLink_GL_ARB_shader_objects;
+    __GLeeGLLoadFunction[30]=__GLeeLink_GL_ARB_vertex_shader;
+    __GLeeGLLoadFunction[31]=__GLeeLink_GL_ARB_fragment_shader;
+    __GLeeGLLoadFunction[32]=__GLeeLink_GL_ARB_shading_language_100;
+    __GLeeGLLoadFunction[33]=__GLeeLink_GL_ARB_texture_non_power_of_two;
+    __GLeeGLLoadFunction[34]=__GLeeLink_GL_ARB_point_sprite;
+    __GLeeGLLoadFunction[35]=__GLeeLink_GL_ARB_fragment_program_shadow;
+    __GLeeGLLoadFunction[36]=__GLeeLink_GL_ARB_draw_buffers;
+    __GLeeGLLoadFunction[37]=__GLeeLink_GL_ARB_texture_rectangle;
+    __GLeeGLLoadFunction[38]=__GLeeLink_GL_ARB_color_buffer_float;
+    __GLeeGLLoadFunction[39]=__GLeeLink_GL_ARB_half_float_pixel;
+    __GLeeGLLoadFunction[40]=__GLeeLink_GL_ARB_texture_float;
+    __GLeeGLLoadFunction[41]=__GLeeLink_GL_ARB_pixel_buffer_object;
+    __GLeeGLLoadFunction[42]=__GLeeLink_GL_EXT_abgr;
+    __GLeeGLLoadFunction[43]=__GLeeLink_GL_EXT_blend_color;
+    __GLeeGLLoadFunction[44]=__GLeeLink_GL_EXT_polygon_offset;
+    __GLeeGLLoadFunction[45]=__GLeeLink_GL_EXT_texture;
+    __GLeeGLLoadFunction[46]=__GLeeLink_GL_EXT_texture3D;
+    __GLeeGLLoadFunction[47]=__GLeeLink_GL_SGIS_texture_filter4;
+    __GLeeGLLoadFunction[48]=__GLeeLink_GL_EXT_subtexture;
+    __GLeeGLLoadFunction[49]=__GLeeLink_GL_EXT_copy_texture;
+    __GLeeGLLoadFunction[50]=__GLeeLink_GL_EXT_histogram;
+    __GLeeGLLoadFunction[51]=__GLeeLink_GL_EXT_convolution;
+    __GLeeGLLoadFunction[52]=__GLeeLink_GL_SGI_color_matrix;
+    __GLeeGLLoadFunction[53]=__GLeeLink_GL_SGI_color_table;
+    __GLeeGLLoadFunction[54]=__GLeeLink_GL_SGIS_pixel_texture;
+    __GLeeGLLoadFunction[55]=__GLeeLink_GL_SGIX_pixel_texture;
+    __GLeeGLLoadFunction[56]=__GLeeLink_GL_SGIS_texture4D;
+    __GLeeGLLoadFunction[57]=__GLeeLink_GL_SGI_texture_color_table;
+    __GLeeGLLoadFunction[58]=__GLeeLink_GL_EXT_cmyka;
+    __GLeeGLLoadFunction[59]=__GLeeLink_GL_EXT_texture_object;
+    __GLeeGLLoadFunction[60]=__GLeeLink_GL_SGIS_detail_texture;
+    __GLeeGLLoadFunction[61]=__GLeeLink_GL_SGIS_sharpen_texture;
+    __GLeeGLLoadFunction[62]=__GLeeLink_GL_EXT_packed_pixels;
+    __GLeeGLLoadFunction[63]=__GLeeLink_GL_SGIS_texture_lod;
+    __GLeeGLLoadFunction[64]=__GLeeLink_GL_SGIS_multisample;
+    __GLeeGLLoadFunction[65]=__GLeeLink_GL_EXT_rescale_normal;
+    __GLeeGLLoadFunction[66]=__GLeeLink_GL_EXT_vertex_array;
+    __GLeeGLLoadFunction[67]=__GLeeLink_GL_EXT_misc_attribute;
+    __GLeeGLLoadFunction[68]=__GLeeLink_GL_SGIS_generate_mipmap;
+    __GLeeGLLoadFunction[69]=__GLeeLink_GL_SGIX_clipmap;
+    __GLeeGLLoadFunction[70]=__GLeeLink_GL_SGIX_shadow;
+    __GLeeGLLoadFunction[71]=__GLeeLink_GL_SGIS_texture_edge_clamp;
+    __GLeeGLLoadFunction[72]=__GLeeLink_GL_SGIS_texture_border_clamp;
+    __GLeeGLLoadFunction[73]=__GLeeLink_GL_EXT_blend_minmax;
+    __GLeeGLLoadFunction[74]=__GLeeLink_GL_EXT_blend_subtract;
+    __GLeeGLLoadFunction[75]=__GLeeLink_GL_EXT_blend_logic_op;
+    __GLeeGLLoadFunction[76]=__GLeeLink_GL_SGIX_interlace;
+    __GLeeGLLoadFunction[77]=__GLeeLink_GL_SGIX_pixel_tiles;
+    __GLeeGLLoadFunction[78]=__GLeeLink_GL_SGIS_texture_select;
+    __GLeeGLLoadFunction[79]=__GLeeLink_GL_SGIX_sprite;
+    __GLeeGLLoadFunction[80]=__GLeeLink_GL_SGIX_texture_multi_buffer;
+    __GLeeGLLoadFunction[81]=__GLeeLink_GL_EXT_point_parameters;
+    __GLeeGLLoadFunction[82]=__GLeeLink_GL_SGIS_point_parameters;
+    __GLeeGLLoadFunction[83]=__GLeeLink_GL_SGIX_instruments;
+    __GLeeGLLoadFunction[84]=__GLeeLink_GL_SGIX_texture_scale_bias;
+    __GLeeGLLoadFunction[85]=__GLeeLink_GL_SGIX_framezoom;
+    __GLeeGLLoadFunction[86]=__GLeeLink_GL_SGIX_tag_sample_buffer;
+    __GLeeGLLoadFunction[87]=__GLeeLink_GL_FfdMaskSGIX;
+    __GLeeGLLoadFunction[88]=__GLeeLink_GL_SGIX_polynomial_ffd;
+    __GLeeGLLoadFunction[89]=__GLeeLink_GL_SGIX_reference_plane;
+    __GLeeGLLoadFunction[90]=__GLeeLink_GL_SGIX_flush_raster;
+    __GLeeGLLoadFunction[91]=__GLeeLink_GL_SGIX_depth_texture;
+    __GLeeGLLoadFunction[92]=__GLeeLink_GL_SGIS_fog_function;
+    __GLeeGLLoadFunction[93]=__GLeeLink_GL_SGIX_fog_offset;
+    __GLeeGLLoadFunction[94]=__GLeeLink_GL_HP_image_transform;
+    __GLeeGLLoadFunction[95]=__GLeeLink_GL_HP_convolution_border_modes;
+    __GLeeGLLoadFunction[96]=__GLeeLink_GL_INGR_palette_buffer;
+    __GLeeGLLoadFunction[97]=__GLeeLink_GL_SGIX_texture_add_env;
+    __GLeeGLLoadFunction[98]=__GLeeLink_GL_EXT_color_subtable;
+    __GLeeGLLoadFunction[99]=__GLeeLink_GL_PGI_vertex_hints;
+    __GLeeGLLoadFunction[100]=__GLeeLink_GL_PGI_misc_hints;
+    __GLeeGLLoadFunction[101]=__GLeeLink_GL_EXT_paletted_texture;
+    __GLeeGLLoadFunction[102]=__GLeeLink_GL_EXT_clip_volume_hint;
+    __GLeeGLLoadFunction[103]=__GLeeLink_GL_SGIX_list_priority;
+    __GLeeGLLoadFunction[104]=__GLeeLink_GL_SGIX_ir_instrument1;
+    __GLeeGLLoadFunction[105]=__GLeeLink_GL_SGIX_calligraphic_fragment;
+    __GLeeGLLoadFunction[106]=__GLeeLink_GL_SGIX_texture_lod_bias;
+    __GLeeGLLoadFunction[107]=__GLeeLink_GL_SGIX_shadow_ambient;
+    __GLeeGLLoadFunction[108]=__GLeeLink_GL_EXT_index_texture;
+    __GLeeGLLoadFunction[109]=__GLeeLink_GL_EXT_index_material;
+    __GLeeGLLoadFunction[110]=__GLeeLink_GL_EXT_index_func;
+    __GLeeGLLoadFunction[111]=__GLeeLink_GL_EXT_index_array_formats;
+    __GLeeGLLoadFunction[112]=__GLeeLink_GL_EXT_compiled_vertex_array;
+    __GLeeGLLoadFunction[113]=__GLeeLink_GL_EXT_cull_vertex;
+    __GLeeGLLoadFunction[114]=__GLeeLink_GL_SGIX_ycrcb;
+    __GLeeGLLoadFunction[115]=__GLeeLink_GL_SGIX_fragment_lighting;
+    __GLeeGLLoadFunction[116]=__GLeeLink_GL_IBM_rasterpos_clip;
+    __GLeeGLLoadFunction[117]=__GLeeLink_GL_HP_texture_lighting;
+    __GLeeGLLoadFunction[118]=__GLeeLink_GL_EXT_draw_range_elements;
+    __GLeeGLLoadFunction[119]=__GLeeLink_GL_WIN_phong_shading;
+    __GLeeGLLoadFunction[120]=__GLeeLink_GL_WIN_specular_fog;
+    __GLeeGLLoadFunction[121]=__GLeeLink_GL_EXT_light_texture;
+    __GLeeGLLoadFunction[122]=__GLeeLink_GL_SGIX_blend_alpha_minmax;
+    __GLeeGLLoadFunction[123]=__GLeeLink_GL_SGIX_impact_pixel_texture;
+    __GLeeGLLoadFunction[124]=__GLeeLink_GL_EXT_bgra;
+    __GLeeGLLoadFunction[125]=__GLeeLink_GL_SGIX_async;
+    __GLeeGLLoadFunction[126]=__GLeeLink_GL_SGIX_async_pixel;
+    __GLeeGLLoadFunction[127]=__GLeeLink_GL_SGIX_async_histogram;
+    __GLeeGLLoadFunction[128]=__GLeeLink_GL_INTEL_texture_scissor;
+    __GLeeGLLoadFunction[129]=__GLeeLink_GL_INTEL_parallel_arrays;
+    __GLeeGLLoadFunction[130]=__GLeeLink_GL_HP_occlusion_test;
+    __GLeeGLLoadFunction[131]=__GLeeLink_GL_EXT_pixel_transform;
+    __GLeeGLLoadFunction[132]=__GLeeLink_GL_EXT_pixel_transform_color_table;
+    __GLeeGLLoadFunction[133]=__GLeeLink_GL_EXT_shared_texture_palette;
+    __GLeeGLLoadFunction[134]=__GLeeLink_GL_EXT_separate_specular_color;
+    __GLeeGLLoadFunction[135]=__GLeeLink_GL_EXT_secondary_color;
+    __GLeeGLLoadFunction[136]=__GLeeLink_GL_EXT_texture_perturb_normal;
+    __GLeeGLLoadFunction[137]=__GLeeLink_GL_EXT_multi_draw_arrays;
+    __GLeeGLLoadFunction[138]=__GLeeLink_GL_EXT_fog_coord;
+    __GLeeGLLoadFunction[139]=__GLeeLink_GL_REND_screen_coordinates;
+    __GLeeGLLoadFunction[140]=__GLeeLink_GL_EXT_coordinate_frame;
+    __GLeeGLLoadFunction[141]=__GLeeLink_GL_EXT_texture_env_combine;
+    __GLeeGLLoadFunction[142]=__GLeeLink_GL_APPLE_specular_vector;
+    __GLeeGLLoadFunction[143]=__GLeeLink_GL_APPLE_transform_hint;
+    __GLeeGLLoadFunction[144]=__GLeeLink_GL_SGIX_fog_scale;
+    __GLeeGLLoadFunction[145]=__GLeeLink_GL_SUNX_constant_data;
+    __GLeeGLLoadFunction[146]=__GLeeLink_GL_SUN_global_alpha;
+    __GLeeGLLoadFunction[147]=__GLeeLink_GL_SUN_triangle_list;
+    __GLeeGLLoadFunction[148]=__GLeeLink_GL_SUN_vertex;
+    __GLeeGLLoadFunction[149]=__GLeeLink_GL_EXT_blend_func_separate;
+    __GLeeGLLoadFunction[150]=__GLeeLink_GL_INGR_color_clamp;
+    __GLeeGLLoadFunction[151]=__GLeeLink_GL_INGR_interlace_read;
+    __GLeeGLLoadFunction[152]=__GLeeLink_GL_EXT_stencil_wrap;
+    __GLeeGLLoadFunction[153]=__GLeeLink_GL_EXT_422_pixels;
+    __GLeeGLLoadFunction[154]=__GLeeLink_GL_NV_texgen_reflection;
+    __GLeeGLLoadFunction[155]=__GLeeLink_GL_EXT_texture_cube_map;
+    __GLeeGLLoadFunction[156]=__GLeeLink_GL_SUN_convolution_border_modes;
+    __GLeeGLLoadFunction[157]=__GLeeLink_GL_EXT_texture_env_add;
+    __GLeeGLLoadFunction[158]=__GLeeLink_GL_EXT_texture_lod_bias;
+    __GLeeGLLoadFunction[159]=__GLeeLink_GL_EXT_texture_filter_anisotropic;
+    __GLeeGLLoadFunction[160]=__GLeeLink_GL_EXT_vertex_weighting;
+    __GLeeGLLoadFunction[161]=__GLeeLink_GL_NV_light_max_exponent;
+    __GLeeGLLoadFunction[162]=__GLeeLink_GL_NV_vertex_array_range;
+    __GLeeGLLoadFunction[163]=__GLeeLink_GL_NV_register_combiners;
+    __GLeeGLLoadFunction[164]=__GLeeLink_GL_NV_fog_distance;
+    __GLeeGLLoadFunction[165]=__GLeeLink_GL_NV_texgen_emboss;
+    __GLeeGLLoadFunction[166]=__GLeeLink_GL_NV_blend_square;
+    __GLeeGLLoadFunction[167]=__GLeeLink_GL_NV_texture_env_combine4;
+    __GLeeGLLoadFunction[168]=__GLeeLink_GL_MESA_resize_buffers;
+    __GLeeGLLoadFunction[169]=__GLeeLink_GL_MESA_window_pos;
+    __GLeeGLLoadFunction[170]=__GLeeLink_GL_EXT_texture_compression_s3tc;
+    __GLeeGLLoadFunction[171]=__GLeeLink_GL_IBM_cull_vertex;
+    __GLeeGLLoadFunction[172]=__GLeeLink_GL_IBM_multimode_draw_arrays;
+    __GLeeGLLoadFunction[173]=__GLeeLink_GL_IBM_vertex_array_lists;
+    __GLeeGLLoadFunction[174]=__GLeeLink_GL_SGIX_subsample;
+    __GLeeGLLoadFunction[175]=__GLeeLink_GL_SGIX_ycrcb_subsample;
+    __GLeeGLLoadFunction[176]=__GLeeLink_GL_SGIX_ycrcba;
+    __GLeeGLLoadFunction[177]=__GLeeLink_GL_SGI_depth_pass_instrument;
+    __GLeeGLLoadFunction[178]=__GLeeLink_GL_3DFX_texture_compression_FXT1;
+    __GLeeGLLoadFunction[179]=__GLeeLink_GL_3DFX_multisample;
+    __GLeeGLLoadFunction[180]=__GLeeLink_GL_3DFX_tbuffer;
+    __GLeeGLLoadFunction[181]=__GLeeLink_GL_EXT_multisample;
+    __GLeeGLLoadFunction[182]=__GLeeLink_GL_SGIX_vertex_preclip;
+    __GLeeGLLoadFunction[183]=__GLeeLink_GL_SGIX_convolution_accuracy;
+    __GLeeGLLoadFunction[184]=__GLeeLink_GL_SGIX_resample;
+    __GLeeGLLoadFunction[185]=__GLeeLink_GL_SGIS_point_line_texgen;
+    __GLeeGLLoadFunction[186]=__GLeeLink_GL_SGIS_texture_color_mask;
+    __GLeeGLLoadFunction[187]=__GLeeLink_GL_EXT_texture_env_dot3;
+    __GLeeGLLoadFunction[188]=__GLeeLink_GL_ATI_texture_mirror_once;
+    __GLeeGLLoadFunction[189]=__GLeeLink_GL_NV_fence;
+    __GLeeGLLoadFunction[190]=__GLeeLink_GL_IBM_texture_mirrored_repeat;
+    __GLeeGLLoadFunction[191]=__GLeeLink_GL_NV_evaluators;
+    __GLeeGLLoadFunction[192]=__GLeeLink_GL_NV_packed_depth_stencil;
+    __GLeeGLLoadFunction[193]=__GLeeLink_GL_NV_register_combiners2;
+    __GLeeGLLoadFunction[194]=__GLeeLink_GL_NV_texture_compression_vtc;
+    __GLeeGLLoadFunction[195]=__GLeeLink_GL_NV_texture_rectangle;
+    __GLeeGLLoadFunction[196]=__GLeeLink_GL_NV_texture_shader;
+    __GLeeGLLoadFunction[197]=__GLeeLink_GL_NV_texture_shader2;
+    __GLeeGLLoadFunction[198]=__GLeeLink_GL_NV_vertex_array_range2;
+    __GLeeGLLoadFunction[199]=__GLeeLink_GL_NV_vertex_program;
+    __GLeeGLLoadFunction[200]=__GLeeLink_GL_SGIX_texture_coordinate_clamp;
+    __GLeeGLLoadFunction[201]=__GLeeLink_GL_SGIX_scalebias_hint;
+    __GLeeGLLoadFunction[202]=__GLeeLink_GL_OML_interlace;
+    __GLeeGLLoadFunction[203]=__GLeeLink_GL_OML_subsample;
+    __GLeeGLLoadFunction[204]=__GLeeLink_GL_OML_resample;
+    __GLeeGLLoadFunction[205]=__GLeeLink_GL_NV_copy_depth_to_color;
+    __GLeeGLLoadFunction[206]=__GLeeLink_GL_ATI_envmap_bumpmap;
+    __GLeeGLLoadFunction[207]=__GLeeLink_GL_ATI_fragment_shader;
+    __GLeeGLLoadFunction[208]=__GLeeLink_GL_ATI_pn_triangles;
+    __GLeeGLLoadFunction[209]=__GLeeLink_GL_ATI_vertex_array_object;
+    __GLeeGLLoadFunction[210]=__GLeeLink_GL_EXT_vertex_shader;
+    __GLeeGLLoadFunction[211]=__GLeeLink_GL_ATI_vertex_streams;
+    __GLeeGLLoadFunction[212]=__GLeeLink_GL_ATI_element_array;
+    __GLeeGLLoadFunction[213]=__GLeeLink_GL_SUN_mesh_array;
+    __GLeeGLLoadFunction[214]=__GLeeLink_GL_SUN_slice_accum;
+    __GLeeGLLoadFunction[215]=__GLeeLink_GL_NV_multisample_filter_hint;
+    __GLeeGLLoadFunction[216]=__GLeeLink_GL_NV_depth_clamp;
+    __GLeeGLLoadFunction[217]=__GLeeLink_GL_NV_occlusion_query;
+    __GLeeGLLoadFunction[218]=__GLeeLink_GL_NV_point_sprite;
+    __GLeeGLLoadFunction[219]=__GLeeLink_GL_NV_texture_shader3;
+    __GLeeGLLoadFunction[220]=__GLeeLink_GL_NV_vertex_program1_1;
+    __GLeeGLLoadFunction[221]=__GLeeLink_GL_EXT_shadow_funcs;
+    __GLeeGLLoadFunction[222]=__GLeeLink_GL_EXT_stencil_two_side;
+    __GLeeGLLoadFunction[223]=__GLeeLink_GL_ATI_text_fragment_shader;
+    __GLeeGLLoadFunction[224]=__GLeeLink_GL_APPLE_client_storage;
+    __GLeeGLLoadFunction[225]=__GLeeLink_GL_APPLE_element_array;
+    __GLeeGLLoadFunction[226]=__GLeeLink_GL_APPLE_fence;
+    __GLeeGLLoadFunction[227]=__GLeeLink_GL_APPLE_vertex_array_object;
+    __GLeeGLLoadFunction[228]=__GLeeLink_GL_APPLE_vertex_array_range;
+    __GLeeGLLoadFunction[229]=__GLeeLink_GL_APPLE_ycbcr_422;
+    __GLeeGLLoadFunction[230]=__GLeeLink_GL_S3_s3tc;
+    __GLeeGLLoadFunction[231]=__GLeeLink_GL_ATI_draw_buffers;
+    __GLeeGLLoadFunction[232]=__GLeeLink_GL_ATI_pixel_format_float;
+    __GLeeGLLoadFunction[233]=__GLeeLink_GL_ATI_texture_env_combine3;
+    __GLeeGLLoadFunction[234]=__GLeeLink_GL_ATI_texture_float;
+    __GLeeGLLoadFunction[235]=__GLeeLink_GL_NV_float_buffer;
+    __GLeeGLLoadFunction[236]=__GLeeLink_GL_NV_fragment_program;
+    __GLeeGLLoadFunction[237]=__GLeeLink_GL_NV_half_float;
+    __GLeeGLLoadFunction[238]=__GLeeLink_GL_NV_pixel_data_range;
+    __GLeeGLLoadFunction[239]=__GLeeLink_GL_NV_primitive_restart;
+    __GLeeGLLoadFunction[240]=__GLeeLink_GL_NV_texture_expand_normal;
+    __GLeeGLLoadFunction[241]=__GLeeLink_GL_NV_vertex_program2;
+    __GLeeGLLoadFunction[242]=__GLeeLink_GL_ATI_map_object_buffer;
+    __GLeeGLLoadFunction[243]=__GLeeLink_GL_ATI_separate_stencil;
+    __GLeeGLLoadFunction[244]=__GLeeLink_GL_ATI_vertex_attrib_array_object;
+    __GLeeGLLoadFunction[245]=__GLeeLink_GL_OES_read_format;
+    __GLeeGLLoadFunction[246]=__GLeeLink_GL_EXT_depth_bounds_test;
+    __GLeeGLLoadFunction[247]=__GLeeLink_GL_EXT_texture_mirror_clamp;
+    __GLeeGLLoadFunction[248]=__GLeeLink_GL_EXT_blend_equation_separate;
+    __GLeeGLLoadFunction[249]=__GLeeLink_GL_MESA_pack_invert;
+    __GLeeGLLoadFunction[250]=__GLeeLink_GL_MESA_ycbcr_texture;
+    __GLeeGLLoadFunction[251]=__GLeeLink_GL_EXT_pixel_buffer_object;
+    __GLeeGLLoadFunction[252]=__GLeeLink_GL_NV_fragment_program_option;
+    __GLeeGLLoadFunction[253]=__GLeeLink_GL_NV_fragment_program2;
+    __GLeeGLLoadFunction[254]=__GLeeLink_GL_NV_vertex_program2_option;
+    __GLeeGLLoadFunction[255]=__GLeeLink_GL_NV_vertex_program3;
+    __GLeeGLLoadFunction[256]=__GLeeLink_GL_EXT_framebuffer_object;
+    __GLeeGLLoadFunction[257]=__GLeeLink_GL_GREMEDY_string_marker;
+    __GLeeGLLoadFunction[258]=__GLeeLink_GL_EXT_Cg_shader;
+    __GLeeGLLoadFunction[259]=__GLeeLink_GL_EXT_timer_query;
+    __GLeeGLLoadFunction[260]=__GLeeLink_GL_EXT_texture_buffer_object;
+    __GLeeGLLoadFunction[261]=__GLeeLink_GL_EXT_gpu_shader4;
+    __GLeeGLLoadFunction[262]=__GLeeLink_GL_EXT_geometry_shader4;
+    __GLeeGLLoadFunction[263]=__GLeeLink_GL_EXT_bindable_uniform;
+    __GLeeGLLoadFunction[264]=__GLeeLink_GL_EXT_framebuffer_sRGB;
+    __GLeeGLLoadFunction[265]=__GLeeLink_GL_EXT_texture_shared_exponent;
+    __GLeeGLLoadFunction[266]=__GLeeLink_GL_EXT_packed_float;
+    __GLeeGLLoadFunction[267]=__GLeeLink_GL_EXT_texture_array;
+    __GLeeGLLoadFunction[268]=__GLeeLink_GL_EXT_texture_integer;
+    __GLeeGLLoadFunction[269]=__GLeeLink_GL_NV_depth_buffer_float;
+    __GLeeGLLoadFunction[270]=__GLeeLink_GL_EXT_texture_compression_latc;
+    __GLeeGLLoadFunction[271]=__GLeeLink_GL_NV_transform_feedback;
+    __GLeeGLLoadFunction[272]=__GLeeLink_GL_NV_geometry_program4;
+    __GLeeGLLoadFunction[273]=__GLeeLink_GL_NV_gpu_program4;
+    __GLeeGLLoadFunction[274]=__GLeeLink_GL_NV_framebuffer_multisample_coverage;
+    __GLeeGLLoadFunction[275]=__GLeeLink_GL_EXT_framebuffer_multisample;
+    __GLeeGLLoadFunction[276]=__GLeeLink_GL_EXT_framebuffer_blit;
+    __GLeeGLLoadFunction[277]=__GLeeLink_GL_EXT_texture_compression_rgtc;
+    __GLeeGLLoadFunction[278]=__GLeeLink_GL_EXT_color_matrix;
+    __GLeeGLLoadFunction[279]=__GLeeLink_GL_SGIX_texture_select;
+    __GLeeGLLoadFunction[280]=__GLeeLink_GL_INGR_blend_func_separate;
+    __GLeeGLLoadFunction[281]=__GLeeLink_GL_SGIX_depth_pass_instrument;
+    __GLeeGLLoadFunction[282]=__GLeeLink_GL_SGIX_igloo_interface;
+    __GLeeGLLoadFunction[283]=__GLeeLink_GL_EXT_draw_buffers2;
+    __GLeeGLLoadFunction[284]=__GLeeLink_GL_NV_parameter_buffer_object;
+    __GLeeGLLoadFunction[285]=__GLeeLink_GL_EXT_draw_instanced;
+    __GLeeGLLoadFunction[286]=__GLeeLink_GL_EXT_fragment_lighting;
+    __GLeeGLLoadFunction[287]=__GLeeLink_GL_EXT_packed_depth_stencil;
+    __GLeeGLLoadFunction[288]=__GLeeLink_GL_EXT_scene_marker;
+    __GLeeGLLoadFunction[289]=__GLeeLink_GL_EXT_stencil_clear_tag;
+    __GLeeGLLoadFunction[290]=__GLeeLink_GL_EXT_texture_compression_dxt1;
+    __GLeeGLLoadFunction[291]=__GLeeLink_GL_EXT_texture_env;
+    __GLeeGLLoadFunction[292]=__GLeeLink_GL_EXT_texture_sRGB;
+    __GLeeGLLoadFunction[293]=__GLeeLink_GL_IBM_static_data;
+    __GLeeGLLoadFunction[294]=__GLeeLink_GL_MESAX_texture_stack;
+    __GLeeGLLoadFunction[295]=__GLeeLink_GL_OES_byte_coordinates;
+    __GLeeGLLoadFunction[296]=__GLeeLink_GL_OES_compressed_paletted_texture;
+    __GLeeGLLoadFunction[297]=__GLeeLink_GL_OES_single_precision;
+    __GLeeGLLoadFunction[298]=__GLeeLink_GL_SGIX_pixel_texture_bits;
+    __GLeeGLLoadFunction[299]=__GLeeLink_GL_SGIX_texture_range;
 }
 
 #ifdef WIN32
@@ -8251,7 +8911,8 @@
     __GLeeWGLLoadFunction[29]=__GLeeLink_WGL_3DL_stereo_control;
 }
 
-#else /* end WGL */
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+#else /* Linux */
 GLuint __GLeeLink_GLX_VERSION_1_3(void)
 {
     GLint nLinked=0;
@@ -8582,7 +9243,7 @@
     __GLeeGLXLoadFunction[31]=__GLeeLink_GLX_EXT_scene_marker;
 }
 
-#endif /* end GLX */
+#endif /* end Linux */
 
 
 /*****************************************************************
@@ -8655,6 +9316,7 @@
 
 	if (pwglGetExtensionsStringARB)
 		return (const char *)pwglGetExtensionsStringARB(wglGetCurrentDC());
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
 #else
 	Display *dpy=glXGetCurrentDisplay();
 	if(dpy)
@@ -8773,6 +9435,7 @@
 		for (a=0;a<__GLeeWGLNumExtensions;a++)
 			if (strcmp(extensionName,__GLeeWGLExtensionNames[a])==0) return a;
 		return -1;
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
 #else
 	case 2:
 		for (a=0;a<__GLeeGLXNumExtensions;a++)
@@ -8792,6 +9455,7 @@
 {
 	return __GLeeGetExtStrPlat();
 }
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
 #else
 GLEE_EXTERN const char * GLeeGetExtStrGLX()	
 {
@@ -8823,6 +9487,7 @@
 		initGLLoadFunctions();
 #ifdef WIN32
 		initWGLLoadFunctions();
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
 #else
 		initGLXLoadFunctions();
 #endif
@@ -8835,6 +9500,7 @@
 	if (type==0) return __GLeeGLLoadFunction[extNum]();
 #ifdef WIN32
 	if (type==1) return __GLeeWGLLoadFunction[extNum]();
+#elif defined(__APPLE__) || defined(__APPLE_CC__)	
 #else
 	if (type==2) return __GLeeGLXLoadFunction[extNum]();
 #endif
@@ -8903,6 +9569,11 @@
         _GLEE_VERSION_2_0 = GL_TRUE;
         __GLeeLink_GL_VERSION_2_0();
     }
+    if (version>=513)
+    {
+        _GLEE_VERSION_2_1 = GL_TRUE;
+        __GLeeLink_GL_VERSION_2_1();
+    }
     if (__GLeeCheckExtension("GL_ARB_multitexture", &extensionNames) )
     {
         _GLEE_ARB_multitexture = GL_TRUE;
@@ -10158,6 +10829,106 @@
         _GLEE_GREMEDY_string_marker = GL_TRUE;
         __GLeeLink_GL_GREMEDY_string_marker();
     }
+    if (__GLeeCheckExtension("GL_EXT_Cg_shader", &extensionNames) )
+    {
+        _GLEE_EXT_Cg_shader = GL_TRUE;
+        __GLeeLink_GL_EXT_Cg_shader();
+    }
+    if (__GLeeCheckExtension("GL_EXT_timer_query", &extensionNames) )
+    {
+        _GLEE_EXT_timer_query = GL_TRUE;
+        __GLeeLink_GL_EXT_timer_query();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_buffer_object", &extensionNames) )
+    {
+        _GLEE_EXT_texture_buffer_object = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_buffer_object();
+    }
+    if (__GLeeCheckExtension("GL_EXT_gpu_shader4", &extensionNames) )
+    {
+        _GLEE_EXT_gpu_shader4 = GL_TRUE;
+        __GLeeLink_GL_EXT_gpu_shader4();
+    }
+    if (__GLeeCheckExtension("GL_EXT_geometry_shader4", &extensionNames) )
+    {
+        _GLEE_EXT_geometry_shader4 = GL_TRUE;
+        __GLeeLink_GL_EXT_geometry_shader4();
+    }
+    if (__GLeeCheckExtension("GL_EXT_bindable_uniform", &extensionNames) )
+    {
+        _GLEE_EXT_bindable_uniform = GL_TRUE;
+        __GLeeLink_GL_EXT_bindable_uniform();
+    }
+    if (__GLeeCheckExtension("GL_EXT_framebuffer_sRGB", &extensionNames) )
+    {
+        _GLEE_EXT_framebuffer_sRGB = GL_TRUE;
+        __GLeeLink_GL_EXT_framebuffer_sRGB();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_shared_exponent", &extensionNames) )
+    {
+        _GLEE_EXT_texture_shared_exponent = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_shared_exponent();
+    }
+    if (__GLeeCheckExtension("GL_EXT_packed_float", &extensionNames) )
+    {
+        _GLEE_EXT_packed_float = GL_TRUE;
+        __GLeeLink_GL_EXT_packed_float();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_array", &extensionNames) )
+    {
+        _GLEE_EXT_texture_array = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_array();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_integer", &extensionNames) )
+    {
+        _GLEE_EXT_texture_integer = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_integer();
+    }
+    if (__GLeeCheckExtension("GL_NV_depth_buffer_float", &extensionNames) )
+    {
+        _GLEE_NV_depth_buffer_float = GL_TRUE;
+        __GLeeLink_GL_NV_depth_buffer_float();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_compression_latc", &extensionNames) )
+    {
+        _GLEE_EXT_texture_compression_latc = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_compression_latc();
+    }
+    if (__GLeeCheckExtension("GL_NV_transform_feedback", &extensionNames) )
+    {
+        _GLEE_NV_transform_feedback = GL_TRUE;
+        __GLeeLink_GL_NV_transform_feedback();
+    }
+    if (__GLeeCheckExtension("GL_NV_geometry_program4", &extensionNames) )
+    {
+        _GLEE_NV_geometry_program4 = GL_TRUE;
+        __GLeeLink_GL_NV_geometry_program4();
+    }
+    if (__GLeeCheckExtension("GL_NV_gpu_program4", &extensionNames) )
+    {
+        _GLEE_NV_gpu_program4 = GL_TRUE;
+        __GLeeLink_GL_NV_gpu_program4();
+    }
+    if (__GLeeCheckExtension("GL_NV_framebuffer_multisample_coverage", &extensionNames) )
+    {
+        _GLEE_NV_framebuffer_multisample_coverage = GL_TRUE;
+        __GLeeLink_GL_NV_framebuffer_multisample_coverage();
+    }
+    if (__GLeeCheckExtension("GL_EXT_framebuffer_multisample", &extensionNames) )
+    {
+        _GLEE_EXT_framebuffer_multisample = GL_TRUE;
+        __GLeeLink_GL_EXT_framebuffer_multisample();
+    }
+    if (__GLeeCheckExtension("GL_EXT_framebuffer_blit", &extensionNames) )
+    {
+        _GLEE_EXT_framebuffer_blit = GL_TRUE;
+        __GLeeLink_GL_EXT_framebuffer_blit();
+    }
+    if (__GLeeCheckExtension("GL_EXT_texture_compression_rgtc", &extensionNames) )
+    {
+        _GLEE_EXT_texture_compression_rgtc = GL_TRUE;
+        __GLeeLink_GL_EXT_texture_compression_rgtc();
+    }
     if (__GLeeCheckExtension("GL_EXT_color_matrix", &extensionNames) )
     {
         _GLEE_EXT_color_matrix = GL_TRUE;
@@ -10183,21 +10954,26 @@
         _GLEE_SGIX_igloo_interface = GL_TRUE;
         __GLeeLink_GL_SGIX_igloo_interface();
     }
-    if (__GLeeCheckExtension("GL_EXT_fragment_lighting", &extensionNames) )
+    if (__GLeeCheckExtension("GL_EXT_draw_buffers2", &extensionNames) )
     {
-        _GLEE_EXT_fragment_lighting = GL_TRUE;
-        __GLeeLink_GL_EXT_fragment_lighting();
+        _GLEE_EXT_draw_buffers2 = GL_TRUE;
+        __GLeeLink_GL_EXT_draw_buffers2();
     }
-    if (__GLeeCheckExtension("GL_EXT_framebuffer_blit", &extensionNames) )
+    if (__GLeeCheckExtension("GL_NV_parameter_buffer_object", &extensionNames) )
     {
-        _GLEE_EXT_framebuffer_blit = GL_TRUE;
-        __GLeeLink_GL_EXT_framebuffer_blit();
+        _GLEE_NV_parameter_buffer_object = GL_TRUE;
+        __GLeeLink_GL_NV_parameter_buffer_object();
     }
-    if (__GLeeCheckExtension("GL_EXT_framebuffer_multisample", &extensionNames) )
+    if (__GLeeCheckExtension("GL_EXT_draw_instanced", &extensionNames) )
     {
-        _GLEE_EXT_framebuffer_multisample = GL_TRUE;
-        __GLeeLink_GL_EXT_framebuffer_multisample();
+        _GLEE_EXT_draw_instanced = GL_TRUE;
+        __GLeeLink_GL_EXT_draw_instanced();
     }
+    if (__GLeeCheckExtension("GL_EXT_fragment_lighting", &extensionNames) )
+    {
+        _GLEE_EXT_fragment_lighting = GL_TRUE;
+        __GLeeLink_GL_EXT_fragment_lighting();
+    }
     if (__GLeeCheckExtension("GL_EXT_packed_depth_stencil", &extensionNames) )
     {
         _GLEE_EXT_packed_depth_stencil = GL_TRUE;
@@ -10414,7 +11190,8 @@
         _GLEE_WGL_3DL_stereo_control = GL_TRUE;
         __GLeeLink_WGL_3DL_stereo_control();
     }
-#else /* end WGL */
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+#else /* GLX */
     if (__GLeeCheckExtension("GLX_VERSION_1_3", &extensionNames) )
     {
         _GLEE_GLX_VERSION_1_3 = GL_TRUE;

Modified: antargis/trunk/ext/video/GLee.h
===================================================================
--- antargis/trunk/ext/video/GLee.h	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/video/GLee.h	2008-01-27 15:47:21 UTC (rev 1218)
@@ -2,7 +2,7 @@
 *
 * GLee.h 
 * GLee (OpenGL Easy Extension library)        
-* Version : 5.1
+* Version : 5.21
 *
 * Copyright (c)2006  Ben Woodhouse  All rights reserved.
 *
@@ -29,7 +29,7 @@
 
 * Web: http://elf-stone.com/glee.php
 *
-* [This file was automatically generated by GLeeGen 5.1
+* [This file was automatically generated by GLeeGen 5.21
 *
 ***************************************************************************/
 
@@ -37,55 +37,47 @@
 #define __glee_h_
 
 #ifdef __gl_h_
-#error gl.h included before glee.h
+	#error gl.h included before glee.h
 #endif
 
 #ifdef __glext_h_
-#error glext.h included before glee.h
+	#error glext.h included before glee.h
 #endif
 
 #ifdef __wglext_h_
-#error wglext.h included before glee.h
+	#error wglext.h included before glee.h
 #endif
 
 #ifdef __glxext_h_
-#error glxext.h included before glee.h
+	#error glxext.h included before glee.h
 #endif
 
 #ifdef WIN32
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
-#include <GL/gl.h>
-#else
-#define __glext_h_  /* prevent glext.h from being included  */
-#define __glxext_h_ /* prevent glxext.h from being included */
-#define GLX_GLXEXT_PROTOTYPES
-#include <GL/gl.h>
-#include <GL/glx.h>
+	#define WIN32_LEAN_AND_MEAN
+	#include <windows.h>
+	#include <GL/gl.h>
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+	#include <OpenGL/gl.h>
+#else // GLX
+	#define __glext_h_  /* prevent glext.h from being included  */
+	#define __glxext_h_ /* prevent glxext.h from being included */
+	#define GLX_GLXEXT_PROTOTYPES
+	#include <GL/gl.h>
+	#include <GL/glx.h>
 #endif
 
 #ifndef APIENTRY
-#define APIENTRY
+	#define APIENTRY
 #endif
 
 #ifndef APIENTRYP
-#define APIENTRYP APIENTRY *
+	#define APIENTRYP APIENTRY *
 #endif
 
-#include <ag_base.h>
-
-#ifdef WIN32
-#ifdef __cplusplus
-#define GLEE_EXTERN extern 
-#else
-#define GLEE_EXTERN __declspec(dllexport) extern
-#endif
-#else
 #define GLEE_EXTERN extern
-#endif
 
 #ifdef __cplusplus 
-extern "C" {		/* begin C linkage */
+	extern "C" {		/* begin C linkage */
 #endif
 
 #define GLEE_LINK_FAIL 0
@@ -100,6 +92,7 @@
 GLEE_EXTERN GLboolean _GLEE_VERSION_1_4;
 GLEE_EXTERN GLboolean _GLEE_VERSION_1_5;
 GLEE_EXTERN GLboolean _GLEE_VERSION_2_0;
+GLEE_EXTERN GLboolean _GLEE_VERSION_2_1;
 GLEE_EXTERN GLboolean _GLEE_ARB_multitexture;
 GLEE_EXTERN GLboolean _GLEE_ARB_transpose_matrix;
 GLEE_EXTERN GLboolean _GLEE_ARB_multisample;
@@ -351,14 +344,35 @@
 GLEE_EXTERN GLboolean _GLEE_NV_vertex_program3;
 GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_object;
 GLEE_EXTERN GLboolean _GLEE_GREMEDY_string_marker;
+GLEE_EXTERN GLboolean _GLEE_EXT_Cg_shader;
+GLEE_EXTERN GLboolean _GLEE_EXT_timer_query;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_buffer_object;
+GLEE_EXTERN GLboolean _GLEE_EXT_gpu_shader4;
+GLEE_EXTERN GLboolean _GLEE_EXT_geometry_shader4;
+GLEE_EXTERN GLboolean _GLEE_EXT_bindable_uniform;
+GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_sRGB;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_shared_exponent;
+GLEE_EXTERN GLboolean _GLEE_EXT_packed_float;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_array;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_integer;
+GLEE_EXTERN GLboolean _GLEE_NV_depth_buffer_float;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_latc;
+GLEE_EXTERN GLboolean _GLEE_NV_transform_feedback;
+GLEE_EXTERN GLboolean _GLEE_NV_geometry_program4;
+GLEE_EXTERN GLboolean _GLEE_NV_gpu_program4;
+GLEE_EXTERN GLboolean _GLEE_NV_framebuffer_multisample_coverage;
+GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_multisample;
+GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_blit;
+GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_rgtc;
 GLEE_EXTERN GLboolean _GLEE_EXT_color_matrix;
 GLEE_EXTERN GLboolean _GLEE_SGIX_texture_select;
 GLEE_EXTERN GLboolean _GLEE_INGR_blend_func_separate;
 GLEE_EXTERN GLboolean _GLEE_SGIX_depth_pass_instrument;
 GLEE_EXTERN GLboolean _GLEE_SGIX_igloo_interface;
+GLEE_EXTERN GLboolean _GLEE_EXT_draw_buffers2;
+GLEE_EXTERN GLboolean _GLEE_NV_parameter_buffer_object;
+GLEE_EXTERN GLboolean _GLEE_EXT_draw_instanced;
 GLEE_EXTERN GLboolean _GLEE_EXT_fragment_lighting;
-GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_blit;
-GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_multisample;
 GLEE_EXTERN GLboolean _GLEE_EXT_packed_depth_stencil;
 GLEE_EXTERN GLboolean _GLEE_EXT_scene_marker;
 GLEE_EXTERN GLboolean _GLEE_EXT_stencil_clear_tag;
@@ -381,6 +395,7 @@
 #define GLEE_VERSION_1_4     GLeeEnabled(&_GLEE_VERSION_1_4)
 #define GLEE_VERSION_1_5     GLeeEnabled(&_GLEE_VERSION_1_5)
 #define GLEE_VERSION_2_0     GLeeEnabled(&_GLEE_VERSION_2_0)
+#define GLEE_VERSION_2_1     GLeeEnabled(&_GLEE_VERSION_2_1)
 #define GLEE_ARB_multitexture     GLeeEnabled(&_GLEE_ARB_multitexture)
 #define GLEE_ARB_transpose_matrix     GLeeEnabled(&_GLEE_ARB_transpose_matrix)
 #define GLEE_ARB_multisample     GLeeEnabled(&_GLEE_ARB_multisample)
@@ -632,14 +647,35 @@
 #define GLEE_NV_vertex_program3     GLeeEnabled(&_GLEE_NV_vertex_program3)
 #define GLEE_EXT_framebuffer_object     GLeeEnabled(&_GLEE_EXT_framebuffer_object)
 #define GLEE_GREMEDY_string_marker     GLeeEnabled(&_GLEE_GREMEDY_string_marker)
+#define GLEE_EXT_Cg_shader     GLeeEnabled(&_GLEE_EXT_Cg_shader)
+#define GLEE_EXT_timer_query     GLeeEnabled(&_GLEE_EXT_timer_query)
+#define GLEE_EXT_texture_buffer_object     GLeeEnabled(&_GLEE_EXT_texture_buffer_object)
+#define GLEE_EXT_gpu_shader4     GLeeEnabled(&_GLEE_EXT_gpu_shader4)
+#define GLEE_EXT_geometry_shader4     GLeeEnabled(&_GLEE_EXT_geometry_shader4)
+#define GLEE_EXT_bindable_uniform     GLeeEnabled(&_GLEE_EXT_bindable_uniform)
+#define GLEE_EXT_framebuffer_sRGB     GLeeEnabled(&_GLEE_EXT_framebuffer_sRGB)
+#define GLEE_EXT_texture_shared_exponent     GLeeEnabled(&_GLEE_EXT_texture_shared_exponent)
+#define GLEE_EXT_packed_float     GLeeEnabled(&_GLEE_EXT_packed_float)
+#define GLEE_EXT_texture_array     GLeeEnabled(&_GLEE_EXT_texture_array)
+#define GLEE_EXT_texture_integer     GLeeEnabled(&_GLEE_EXT_texture_integer)
+#define GLEE_NV_depth_buffer_float     GLeeEnabled(&_GLEE_NV_depth_buffer_float)
+#define GLEE_EXT_texture_compression_latc     GLeeEnabled(&_GLEE_EXT_texture_compression_latc)
+#define GLEE_NV_transform_feedback     GLeeEnabled(&_GLEE_NV_transform_feedback)
+#define GLEE_NV_geometry_program4     GLeeEnabled(&_GLEE_NV_geometry_program4)
+#define GLEE_NV_gpu_program4     GLeeEnabled(&_GLEE_NV_gpu_program4)
+#define GLEE_NV_framebuffer_multisample_coverage     GLeeEnabled(&_GLEE_NV_framebuffer_multisample_coverage)
+#define GLEE_EXT_framebuffer_multisample     GLeeEnabled(&_GLEE_EXT_framebuffer_multisample)
+#define GLEE_EXT_framebuffer_blit     GLeeEnabled(&_GLEE_EXT_framebuffer_blit)
+#define GLEE_EXT_texture_compression_rgtc     GLeeEnabled(&_GLEE_EXT_texture_compression_rgtc)
 #define GLEE_EXT_color_matrix     GLeeEnabled(&_GLEE_EXT_color_matrix)
 #define GLEE_SGIX_texture_select     GLeeEnabled(&_GLEE_SGIX_texture_select)
 #define GLEE_INGR_blend_func_separate     GLeeEnabled(&_GLEE_INGR_blend_func_separate)
 #define GLEE_SGIX_depth_pass_instrument     GLeeEnabled(&_GLEE_SGIX_depth_pass_instrument)
 #define GLEE_SGIX_igloo_interface     GLeeEnabled(&_GLEE_SGIX_igloo_interface)
+#define GLEE_EXT_draw_buffers2     GLeeEnabled(&_GLEE_EXT_draw_buffers2)
+#define GLEE_NV_parameter_buffer_object     GLeeEnabled(&_GLEE_NV_parameter_buffer_object)
+#define GLEE_EXT_draw_instanced     GLeeEnabled(&_GLEE_EXT_draw_instanced)
 #define GLEE_EXT_fragment_lighting     GLeeEnabled(&_GLEE_EXT_fragment_lighting)
-#define GLEE_EXT_framebuffer_blit     GLeeEnabled(&_GLEE_EXT_framebuffer_blit)
-#define GLEE_EXT_framebuffer_multisample     GLeeEnabled(&_GLEE_EXT_framebuffer_multisample)
 #define GLEE_EXT_packed_depth_stencil     GLeeEnabled(&_GLEE_EXT_packed_depth_stencil)
 #define GLEE_EXT_scene_marker     GLeeEnabled(&_GLEE_EXT_scene_marker)
 #define GLEE_EXT_stencil_clear_tag     GLeeEnabled(&_GLEE_EXT_stencil_clear_tag)
@@ -661,115 +697,125 @@
 
 /* Used for GLSL shader text */
 #ifndef GL_VERSION_2_0
-typedef char GLchar; 
+	typedef char GLchar; 
 #endif
 
 #include <stddef.h>
+
 #ifndef GL_VERSION_1_5
-typedef ptrdiff_t GLintptr;
-typedef ptrdiff_t GLsizeiptr;
+	typedef ptrdiff_t GLintptr;
+	typedef ptrdiff_t GLsizeiptr;
 #endif
 
 #ifndef GL_NV_half_float
-typedef unsigned short GLhalfNV;
+	typedef unsigned short GLhalfNV;
 #endif
 
 #ifndef GL_ARB_vertex_buffer_object
-typedef ptrdiff_t GLintptrARB;
-typedef ptrdiff_t GLsizeiptrARB;
+	typedef ptrdiff_t GLintptrARB;
+	typedef ptrdiff_t GLsizeiptrARB;
 #endif
 
 #ifndef GL_ARB_shader_objects
-typedef int GLhandleARB;
-typedef char GLcharARB;
+	typedef int GLhandleARB;
+	typedef char GLcharARB;
 #endif
 
+#ifndef GL_EXT_timer_query
+	typedef signed long long GLint64EXT;
+	typedef unsigned long long GLuint64EXT;
+#endif
+
 /* Platform-specific */
 
 #ifdef WIN32    
 
-/* Windows */
+	/* WGL */
 
-#ifndef WGL_ARB_pbuffer
-DECLARE_HANDLE(HPBUFFERARB);
-#endif
-#ifndef WGL_EXT_pbuffer
-DECLARE_HANDLE(HPBUFFEREXT);
-#endif
+	#ifndef WGL_ARB_pbuffer
+	DECLARE_HANDLE(HPBUFFERARB);
+	#endif
+	#ifndef WGL_EXT_pbuffer
+	DECLARE_HANDLE(HPBUFFEREXT);
+	#endif
 
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+
+	/* Mac OS X */
+
 #else          
 
-/* Linux */
+	/* GLX */
 
-typedef void (*__GLXextFuncPtr)(void);
+	typedef void (*__GLXextFuncPtr)(void);
 
-#ifndef GLX_ARB_get_proc_address 
-#define GLX_ARB_get_proc_address 1
-extern __GLXextFuncPtr glXGetProcAddressARB (const GLubyte *);
-extern void ( * glXGetProcAddressARB (const GLubyte *procName))(void);
-typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);
-#endif
+	#ifndef GLX_ARB_get_proc_address 
+	#define GLX_ARB_get_proc_address 1
+	extern __GLXextFuncPtr glXGetProcAddressARB (const GLubyte *);
+	extern void ( * glXGetProcAddressARB (const GLubyte *procName))(void);
+	typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);
+	#endif
 
-#ifndef GLX_SGIX_fbconfig
-typedef XID GLXFBConfigIDSGIX;
-typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;
-#endif
+	#ifndef GLX_SGIX_fbconfig
+	typedef XID GLXFBConfigIDSGIX;
+	typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;
+	#endif
 
-#ifndef GLX_SGIX_pbuffer
-typedef XID GLXPbufferSGIX;
-typedef struct {
-    int type;
-    unsigned long serial;
-    Bool send_event;
-    Display *display;
-    GLXDrawable drawable;
-    int event_type;		  
-    int draw_type;		  
-    unsigned int mask;	  
-    int x, y;
-    int width, height;
-    int count;
-} GLXBufferClobberEventSGIX;
-#endif
+	#ifndef GLX_SGIX_pbuffer
+	typedef XID GLXPbufferSGIX;
+	typedef struct {
+		int type;
+		unsigned long serial;
+		Bool send_event;
+		Display *display;
+		GLXDrawable drawable;
+		int event_type;		  
+		int draw_type;		  
+		unsigned int mask;	  
+		int x, y;
+		int width, height;
+		int count;
+	} GLXBufferClobberEventSGIX;
+	#endif
 
-#ifndef GLX_SGIX_hyperpipe
-	#define _GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX 80
-	typedef struct 
-	{
-		char  pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
-		int  networkId;
-    } GLXHyperpipeNetworkSGIX;
+	#ifndef GLX_SGIX_hyperpipe
+		#define _GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX 80
+		typedef struct 
+		{
+			char  pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
+			int  networkId;
+		} GLXHyperpipeNetworkSGIX;
 
-    typedef struct 
-    {
-		char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
-		int channel;
-		unsigned int participationType;
-		int timeSlice;
-    } GLXHyperpipeConfigSGIX;
+		typedef struct 
+		{
+			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
+			int channel;
+			unsigned int participationType;
+			int timeSlice;
+		} GLXHyperpipeConfigSGIX;
 
-    typedef struct 
-    {
-		char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
-		int srcXOrigin;
-		int srcYOrigin;
-		int srcWidth;
-		int srcHeight;
-		int destXOrigin;
-		int destYOrigin;
-		int destWidth;
-		int destHeight;
-    } GLXPipeRect;
+		typedef struct 
+		{
+			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
+			int srcXOrigin;
+			int srcYOrigin;
+			int srcWidth;
+			int srcHeight;
+			int destXOrigin;
+			int destYOrigin;
+			int destWidth;
+			int destHeight;
+		} GLXPipeRect;
 
-    typedef struct 
-    {
-		char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
-		int XOrigin; 
-		int YOrigin;
-		int maxHeight;
-		int maxWidth;
-    } GLXPipeRectLimits;
-#endif 
+		typedef struct 
+		{
+			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];
+			int XOrigin; 
+			int YOrigin;
+			int maxHeight;
+			int maxWidth;
+		} GLXPipeRectLimits;
+	#endif 
 #endif /* end platform specific */
 
 
@@ -1930,6 +1976,55 @@
 #define glVertexAttribPointer pglVertexAttribPointer
 #endif 
 
+/* GL_VERSION_2_1 */
+
+#ifndef GL_VERSION_2_1
+#define GL_VERSION_2_1 1
+#define __GLEE_GL_VERSION_2_1 1
+/* Constants */
+#define GL_PIXEL_PACK_BUFFER                               0x88EB
+#define GL_PIXEL_UNPACK_BUFFER                             0x88EC
+#define GL_PIXEL_PACK_BUFFER_BINDING                       0x88ED
+#define GL_PIXEL_UNPACK_BUFFER_BINDING                     0x88EF
+#define GL_SRGB                                            0x8C40
+#define GL_SRGB8                                           0x8C41
+#define GL_SRGB_ALPHA                                      0x8C42
+#define GL_SRGB8_ALPHA8                                    0x8C43
+#define GL_SLUMINANCE_ALPHA                                0x8C44
+#define GL_SLUMINANCE8_ALPHA8                              0x8C45
+#define GL_SLUMINANCE                                      0x8C46
+#define GL_SLUMINANCE8                                     0x8C47
+#define GL_COMPRESSED_SRGB                                 0x8C48
+#define GL_COMPRESSED_SRGB_ALPHA                           0x8C49
+#define GL_COMPRESSED_SLUMINANCE                           0x8C4A
+#define GL_COMPRESSED_SLUMINANCE_ALPHA                     0x8C4B
+#define GL_FLOAT_MAT2x3                                    0x8B65
+#define GL_FLOAT_MAT2x4                                    0x8B66
+#define GL_FLOAT_MAT3x2                                    0x8B67
+#define GL_FLOAT_MAT3x4                                    0x8B68
+#define GL_FLOAT_MAT4x2                                    0x8B69
+#define GL_FLOAT_MAT4x3                                    0x8B6A
+#define GL_CURRENT_RASTER_SECONDARY_COLOR                  0x845F
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
+GLEE_EXTERN PFNGLUNIFORMMATRIX2X3FVPROC pglUniformMatrix2x3fv;
+GLEE_EXTERN PFNGLUNIFORMMATRIX3X2FVPROC pglUniformMatrix3x2fv;
+GLEE_EXTERN PFNGLUNIFORMMATRIX2X4FVPROC pglUniformMatrix2x4fv;
+GLEE_EXTERN PFNGLUNIFORMMATRIX4X2FVPROC pglUniformMatrix4x2fv;
+GLEE_EXTERN PFNGLUNIFORMMATRIX3X4FVPROC pglUniformMatrix3x4fv;
+GLEE_EXTERN PFNGLUNIFORMMATRIX4X3FVPROC pglUniformMatrix4x3fv;
+#define glUniformMatrix2x3fv pglUniformMatrix2x3fv
+#define glUniformMatrix3x2fv pglUniformMatrix3x2fv
+#define glUniformMatrix2x4fv pglUniformMatrix2x4fv
+#define glUniformMatrix4x2fv pglUniformMatrix4x2fv
+#define glUniformMatrix3x4fv pglUniformMatrix3x4fv
+#define glUniformMatrix4x3fv pglUniformMatrix4x3fv
+#endif 
+
 /* GL_ARB_multitexture */
 
 #ifndef GL_ARB_multitexture
@@ -8209,6 +8304,7 @@
 #define GL_RENDERBUFFER_WIDTH_EXT                          0x8D42
 #define GL_RENDERBUFFER_HEIGHT_EXT                         0x8D43
 #define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT                0x8D44
+#define GL_STENCIL_INDEX_EXT                               0x8D45
 #define GL_STENCIL_INDEX1_EXT                              0x8D46
 #define GL_STENCIL_INDEX4_EXT                              0x8D47
 #define GL_STENCIL_INDEX8_EXT                              0x8D48
@@ -8283,6 +8379,602 @@
 #define glStringMarkerGREMEDY pglStringMarkerGREMEDY
 #endif 
 
+/* GL_EXT_Cg_shader */
+
+#ifndef GL_EXT_Cg_shader
+#define GL_EXT_Cg_shader 1
+#define __GLEE_GL_EXT_Cg_shader 1
+/* Constants */
+#define GL_CG_VERTEX_SHADER_EXT                            0x890E
+#define GL_CG_FRAGMENT_SHADER_EXT                          0x890F
+#endif 
+
+/* GL_EXT_timer_query */
+
+#ifndef GL_EXT_timer_query
+#define GL_EXT_timer_query 1
+#define __GLEE_GL_EXT_timer_query 1
+/* Constants */
+#define GL_TIME_ELAPSED_EXT                                0x88BF
+typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT * params);
+typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT * params);
+GLEE_EXTERN PFNGLGETQUERYOBJECTI64VEXTPROC pglGetQueryObjecti64vEXT;
+GLEE_EXTERN PFNGLGETQUERYOBJECTUI64VEXTPROC pglGetQueryObjectui64vEXT;
+#define glGetQueryObjecti64vEXT pglGetQueryObjecti64vEXT
+#define glGetQueryObjectui64vEXT pglGetQueryObjectui64vEXT
+#endif 
+
+/* GL_EXT_texture_buffer_object */
+
+#ifndef GL_EXT_texture_buffer_object
+#define GL_EXT_texture_buffer_object 1
+#define __GLEE_GL_EXT_texture_buffer_object 1
+/* Constants */
+#define GL_TEXTURE_BUFFER_EXT                              0x8C2A
+#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT                     0x8C2B
+#define GL_TEXTURE_BINDING_BUFFER_EXT                      0x8C2C
+#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT           0x8C2D
+#define GL_TEXTURE_BUFFER_FORMAT_EXT                       0x8C2E
+typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);
+GLEE_EXTERN PFNGLTEXBUFFEREXTPROC pglTexBufferEXT;
+#define glTexBufferEXT pglTexBufferEXT
+#endif 
+
+/* GL_EXT_gpu_shader4 */
+
+#ifndef GL_EXT_gpu_shader4
+#define GL_EXT_gpu_shader4 1
+#define __GLEE_GL_EXT_gpu_shader4 1
+/* Constants */
+#define GL_SAMPLER_1D_ARRAY_EXT                            0x8DC0
+#define GL_SAMPLER_2D_ARRAY_EXT                            0x8DC1
+#define GL_SAMPLER_BUFFER_EXT                              0x8DC2
+#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT                     0x8DC3
+#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT                     0x8DC4
+#define GL_SAMPLER_CUBE_SHADOW_EXT                         0x8DC5
+#define GL_UNSIGNED_INT_VEC2_EXT                           0x8DC6
+#define GL_UNSIGNED_INT_VEC3_EXT                           0x8DC7
+#define GL_UNSIGNED_INT_VEC4_EXT                           0x8DC8
+#define GL_INT_SAMPLER_1D_EXT                              0x8DC9
+#define GL_INT_SAMPLER_2D_EXT                              0x8DCA
+#define GL_INT_SAMPLER_3D_EXT                              0x8DCB
+#define GL_INT_SAMPLER_CUBE_EXT                            0x8DCC
+#define GL_INT_SAMPLER_2D_RECT_EXT                         0x8DCD
+#define GL_INT_SAMPLER_1D_ARRAY_EXT                        0x8DCE
+#define GL_INT_SAMPLER_2D_ARRAY_EXT                        0x8DCF
+#define GL_INT_SAMPLER_BUFFER_EXT                          0x8DD0
+#define GL_UNSIGNED_INT_SAMPLER_1D_EXT                     0x8DD1
+#define GL_UNSIGNED_INT_SAMPLER_2D_EXT                     0x8DD2
+#define GL_UNSIGNED_INT_SAMPLER_3D_EXT                     0x8DD3
+#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT                   0x8DD4
+#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT                0x8DD5
+#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT               0x8DD6
+#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT               0x8DD7
+#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT                 0x8DD8
+#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT                 0x88FD
+typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint * params);
+typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar * name);
+typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar * name);
+typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
+typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
+typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
+typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
+typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);
+typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);
+typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);
+typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort * v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
+typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint * params);
+typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint * params);
+GLEE_EXTERN PFNGLGETUNIFORMUIVEXTPROC pglGetUniformuivEXT;
+GLEE_EXTERN PFNGLBINDFRAGDATALOCATIONEXTPROC pglBindFragDataLocationEXT;
+GLEE_EXTERN PFNGLGETFRAGDATALOCATIONEXTPROC pglGetFragDataLocationEXT;
+GLEE_EXTERN PFNGLUNIFORM1UIEXTPROC pglUniform1uiEXT;
+GLEE_EXTERN PFNGLUNIFORM2UIEXTPROC pglUniform2uiEXT;
+GLEE_EXTERN PFNGLUNIFORM3UIEXTPROC pglUniform3uiEXT;
+GLEE_EXTERN PFNGLUNIFORM4UIEXTPROC pglUniform4uiEXT;
+GLEE_EXTERN PFNGLUNIFORM1UIVEXTPROC pglUniform1uivEXT;
+GLEE_EXTERN PFNGLUNIFORM2UIVEXTPROC pglUniform2uivEXT;
+GLEE_EXTERN PFNGLUNIFORM3UIVEXTPROC pglUniform3uivEXT;
+GLEE_EXTERN PFNGLUNIFORM4UIVEXTPROC pglUniform4uivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI1IEXTPROC pglVertexAttribI1iEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI2IEXTPROC pglVertexAttribI2iEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI3IEXTPROC pglVertexAttribI3iEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4IEXTPROC pglVertexAttribI4iEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI1UIEXTPROC pglVertexAttribI1uiEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI2UIEXTPROC pglVertexAttribI2uiEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI3UIEXTPROC pglVertexAttribI3uiEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4UIEXTPROC pglVertexAttribI4uiEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI1IVEXTPROC pglVertexAttribI1ivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI2IVEXTPROC pglVertexAttribI2ivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI3IVEXTPROC pglVertexAttribI3ivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4IVEXTPROC pglVertexAttribI4ivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI1UIVEXTPROC pglVertexAttribI1uivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI2UIVEXTPROC pglVertexAttribI2uivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI3UIVEXTPROC pglVertexAttribI3uivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4UIVEXTPROC pglVertexAttribI4uivEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4BVEXTPROC pglVertexAttribI4bvEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4SVEXTPROC pglVertexAttribI4svEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4UBVEXTPROC pglVertexAttribI4ubvEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBI4USVEXTPROC pglVertexAttribI4usvEXT;
+GLEE_EXTERN PFNGLVERTEXATTRIBIPOINTEREXTPROC pglVertexAttribIPointerEXT;
+GLEE_EXTERN PFNGLGETVERTEXATTRIBIIVEXTPROC pglGetVertexAttribIivEXT;
+GLEE_EXTERN PFNGLGETVERTEXATTRIBIUIVEXTPROC pglGetVertexAttribIuivEXT;
+#define glGetUniformuivEXT pglGetUniformuivEXT
+#define glBindFragDataLocationEXT pglBindFragDataLocationEXT
+#define glGetFragDataLocationEXT pglGetFragDataLocationEXT
+#define glUniform1uiEXT pglUniform1uiEXT
+#define glUniform2uiEXT pglUniform2uiEXT
+#define glUniform3uiEXT pglUniform3uiEXT
+#define glUniform4uiEXT pglUniform4uiEXT
+#define glUniform1uivEXT pglUniform1uivEXT
+#define glUniform2uivEXT pglUniform2uivEXT
+#define glUniform3uivEXT pglUniform3uivEXT
+#define glUniform4uivEXT pglUniform4uivEXT
+#define glVertexAttribI1iEXT pglVertexAttribI1iEXT
+#define glVertexAttribI2iEXT pglVertexAttribI2iEXT
+#define glVertexAttribI3iEXT pglVertexAttribI3iEXT
+#define glVertexAttribI4iEXT pglVertexAttribI4iEXT
+#define glVertexAttribI1uiEXT pglVertexAttribI1uiEXT
+#define glVertexAttribI2uiEXT pglVertexAttribI2uiEXT
+#define glVertexAttribI3uiEXT pglVertexAttribI3uiEXT
+#define glVertexAttribI4uiEXT pglVertexAttribI4uiEXT
+#define glVertexAttribI1ivEXT pglVertexAttribI1ivEXT
+#define glVertexAttribI2ivEXT pglVertexAttribI2ivEXT
+#define glVertexAttribI3ivEXT pglVertexAttribI3ivEXT
+#define glVertexAttribI4ivEXT pglVertexAttribI4ivEXT
+#define glVertexAttribI1uivEXT pglVertexAttribI1uivEXT
+#define glVertexAttribI2uivEXT pglVertexAttribI2uivEXT
+#define glVertexAttribI3uivEXT pglVertexAttribI3uivEXT
+#define glVertexAttribI4uivEXT pglVertexAttribI4uivEXT
+#define glVertexAttribI4bvEXT pglVertexAttribI4bvEXT
+#define glVertexAttribI4svEXT pglVertexAttribI4svEXT
+#define glVertexAttribI4ubvEXT pglVertexAttribI4ubvEXT
+#define glVertexAttribI4usvEXT pglVertexAttribI4usvEXT
+#define glVertexAttribIPointerEXT pglVertexAttribIPointerEXT
+#define glGetVertexAttribIivEXT pglGetVertexAttribIivEXT
+#define glGetVertexAttribIuivEXT pglGetVertexAttribIuivEXT
+#endif 
+
+/* GL_EXT_geometry_shader4 */
+
+#ifndef GL_EXT_geometry_shader4
+#define GL_EXT_geometry_shader4 1
+#define __GLEE_GL_EXT_geometry_shader4 1
+/* Constants */
+#define GL_GEOMETRY_SHADER_EXT                             0x8DD9
+#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT             0x8DDD
+#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT               0x8DDE
+#define GL_MAX_VARYING_COMPONENTS_EXT                      0x8B4B
+#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT             0x8DDF
+#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT                0x8DE0
+#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT        0x8DE1
+#define GL_GEOMETRY_VERTICES_OUT_EXT                       0x8DDA
+#define GL_GEOMETRY_INPUT_TYPE_EXT                         0x8DDB
+#define GL_GEOMETRY_OUTPUT_TYPE_EXT                        0x8DDC
+#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT            0x8C29
+#define GL_LINES_ADJACENCY_EXT                             0xA
+#define GL_LINE_STRIP_ADJACENCY_EXT                        0xB
+#define GL_TRIANGLES_ADJACENCY_EXT                         0xC
+#define GL_TRIANGLE_STRIP_ADJACENCY_EXT                    0xD
+#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT              0x8DA7
+#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT        0x8DA8
+#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT          0x8DA9
+#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT        0x8CD4
+#define GL_PROGRAM_POINT_SIZE_EXT                          0x8642
+typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);
+typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
+typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
+typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
+GLEE_EXTERN PFNGLPROGRAMPARAMETERIEXTPROC pglProgramParameteriEXT;
+GLEE_EXTERN PFNGLFRAMEBUFFERTEXTUREEXTPROC pglFramebufferTextureEXT;
+GLEE_EXTERN PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC pglFramebufferTextureLayerEXT;
+GLEE_EXTERN PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC pglFramebufferTextureFaceEXT;
+#define glProgramParameteriEXT pglProgramParameteriEXT
+#define glFramebufferTextureEXT pglFramebufferTextureEXT
+#define glFramebufferTextureLayerEXT pglFramebufferTextureLayerEXT
+#define glFramebufferTextureFaceEXT pglFramebufferTextureFaceEXT
+#endif 
+
+/* GL_EXT_bindable_uniform */
+
+#ifndef GL_EXT_bindable_uniform
+#define GL_EXT_bindable_uniform 1
+#define __GLEE_GL_EXT_bindable_uniform 1
+/* Constants */
+#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT                0x8DE2
+#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT              0x8DE3
+#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT              0x8DE4
+#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT                   0x8DED
+#define GL_UNIFORM_BUFFER_EXT                              0x8DEE
+#define GL_UNIFORM_BUFFER_BINDING_EXT                      0x8DEF
+typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
+typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
+typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
+GLEE_EXTERN PFNGLUNIFORMBUFFEREXTPROC pglUniformBufferEXT;
+GLEE_EXTERN PFNGLGETUNIFORMBUFFERSIZEEXTPROC pglGetUniformBufferSizeEXT;
+GLEE_EXTERN PFNGLGETUNIFORMOFFSETEXTPROC pglGetUniformOffsetEXT;
+#define glUniformBufferEXT pglUniformBufferEXT
+#define glGetUniformBufferSizeEXT pglGetUniformBufferSizeEXT
+#define glGetUniformOffsetEXT pglGetUniformOffsetEXT
+#endif 
+
+/* GL_EXT_framebuffer_sRGB */
+
+#ifndef GL_EXT_framebuffer_sRGB
+#define GL_EXT_framebuffer_sRGB 1
+#define __GLEE_GL_EXT_framebuffer_sRGB 1
+/* Constants */
+#define GL_FRAMEBUFFER_SRGB_EXT                            0x8DB9
+#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT                    0x8DBA
+#endif 
+
+/* GL_EXT_texture_shared_exponent */
+
+#ifndef GL_EXT_texture_shared_exponent
+#define GL_EXT_texture_shared_exponent 1
+#define __GLEE_GL_EXT_texture_shared_exponent 1
+/* Constants */
+#define GL_RGB9_E5_EXT                                     0x8C3D
+#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT                    0x8C3E
+#define GL_TEXTURE_SHARED_SIZE_EXT                         0x8C3F
+#endif 
+
+/* GL_EXT_packed_float */
+
+#ifndef GL_EXT_packed_float
+#define GL_EXT_packed_float 1
+#define __GLEE_GL_EXT_packed_float 1
+/* Constants */
+#define GL_R11F_G11F_B10F_EXT                              0x8C3A
+#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT                0x8C3B
+#define GL_RGBA_SIGNED_COMPONENTS_EXT                      0x8C3C
+#endif 
+
+/* GL_EXT_texture_array */
+
+#ifndef GL_EXT_texture_array
+#define GL_EXT_texture_array 1
+#define __GLEE_GL_EXT_texture_array 1
+/* Constants */
+#define GL_TEXTURE_1D_ARRAY_EXT                            0x8C18
+#define GL_PROXY_TEXTURE_1D_ARRAY_EXT                      0x8C19
+#define GL_TEXTURE_2D_ARRAY_EXT                            0x8C1A
+#define GL_PROXY_TEXTURE_2D_ARRAY_EXT                      0x8C1B
+#define GL_TEXTURE_BINDING_1D_ARRAY_EXT                    0x8C1C
+#define GL_TEXTURE_BINDING_2D_ARRAY_EXT                    0x8C1D
+#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT                    0x88FF
+#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT                0x884E
+#endif 
+
+/* GL_EXT_texture_integer */
+
+#ifndef GL_EXT_texture_integer
+#define GL_EXT_texture_integer 1
+#define __GLEE_GL_EXT_texture_integer 1
+/* Constants */
+#define GL_RGBA32UI_EXT                                    0x8D70
+#define GL_RGB32UI_EXT                                     0x8D71
+#define GL_ALPHA32UI_EXT                                   0x8D72
+#define GL_INTENSITY32UI_EXT                               0x8D73
+#define GL_LUMINANCE32UI_EXT                               0x8D74
+#define GL_LUMINANCE_ALPHA32UI_EXT                         0x8D75
+#define GL_RGBA16UI_EXT                                    0x8D76
+#define GL_RGB16UI_EXT                                     0x8D77
+#define GL_ALPHA16UI_EXT                                   0x8D78
+#define GL_INTENSITY16UI_EXT                               0x8D79
+#define GL_LUMINANCE16UI_EXT                               0x8D7A
+#define GL_LUMINANCE_ALPHA16UI_EXT                         0x8D7B
+#define GL_RGBA8UI_EXT                                     0x8D7C
+#define GL_RGB8UI_EXT                                      0x8D7D
+#define GL_ALPHA8UI_EXT                                    0x8D7E
+#define GL_INTENSITY8UI_EXT                                0x8D7F
+#define GL_LUMINANCE8UI_EXT                                0x8D80
+#define GL_LUMINANCE_ALPHA8UI_EXT                          0x8D81
+#define GL_RGBA32I_EXT                                     0x8D82
+#define GL_RGB32I_EXT                                      0x8D83
+#define GL_ALPHA32I_EXT                                    0x8D84
+#define GL_INTENSITY32I_EXT                                0x8D85
+#define GL_LUMINANCE32I_EXT                                0x8D86
+#define GL_LUMINANCE_ALPHA32I_EXT                          0x8D87
+#define GL_RGBA16I_EXT                                     0x8D88
+#define GL_RGB16I_EXT                                      0x8D89
+#define GL_ALPHA16I_EXT                                    0x8D8A
+#define GL_INTENSITY16I_EXT                                0x8D8B
+#define GL_LUMINANCE16I_EXT                                0x8D8C
+#define GL_LUMINANCE_ALPHA16I_EXT                          0x8D8D
+#define GL_RGBA8I_EXT                                      0x8D8E
+#define GL_RGB8I_EXT                                       0x8D8F
+#define GL_ALPHA8I_EXT                                     0x8D90
+#define GL_INTENSITY8I_EXT                                 0x8D91
+#define GL_LUMINANCE8I_EXT                                 0x8D92
+#define GL_LUMINANCE_ALPHA8I_EXT                           0x8D93
+#define GL_RED_INTEGER_EXT                                 0x8D94
+#define GL_GREEN_INTEGER_EXT                               0x8D95
+#define GL_BLUE_INTEGER_EXT                                0x8D96
+#define GL_ALPHA_INTEGER_EXT                               0x8D97
+#define GL_RGB_INTEGER_EXT                                 0x8D98
+#define GL_RGBA_INTEGER_EXT                                0x8D99
+#define GL_BGR_INTEGER_EXT                                 0x8D9A
+#define GL_BGRA_INTEGER_EXT                                0x8D9B
+#define GL_LUMINANCE_INTEGER_EXT                           0x8D9C
+#define GL_LUMINANCE_ALPHA_INTEGER_EXT                     0x8D9D
+#define GL_RGBA_INTEGER_MODE_EXT                           0x8D9E
+typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint * params);
+typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint * params);
+typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint * params);
+typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint * params);
+typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
+typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
+GLEE_EXTERN PFNGLTEXPARAMETERIIVEXTPROC pglTexParameterIivEXT;
+GLEE_EXTERN PFNGLTEXPARAMETERIUIVEXTPROC pglTexParameterIuivEXT;
+GLEE_EXTERN PFNGLGETTEXPARAMETERIIVEXTPROC pglGetTexParameterIivEXT;
+GLEE_EXTERN PFNGLGETTEXPARAMETERIUIVEXTPROC pglGetTexParameterIuivEXT;
+GLEE_EXTERN PFNGLCLEARCOLORIIEXTPROC pglClearColorIiEXT;
+GLEE_EXTERN PFNGLCLEARCOLORIUIEXTPROC pglClearColorIuiEXT;
+#define glTexParameterIivEXT pglTexParameterIivEXT
+#define glTexParameterIuivEXT pglTexParameterIuivEXT
+#define glGetTexParameterIivEXT pglGetTexParameterIivEXT
+#define glGetTexParameterIuivEXT pglGetTexParameterIuivEXT
+#define glClearColorIiEXT pglClearColorIiEXT
+#define glClearColorIuiEXT pglClearColorIuiEXT
+#endif 
+
+/* GL_NV_depth_buffer_float */
+
+#ifndef GL_NV_depth_buffer_float
+#define GL_NV_depth_buffer_float 1
+#define __GLEE_GL_NV_depth_buffer_float 1
+/* Constants */
+#define GL_DEPTH_COMPONENT32F_NV                           0x8DAB
+#define GL_DEPTH32F_STENCIL8_NV                            0x8DAC
+#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV               0x8DAD
+#define GL_DEPTH_BUFFER_FLOAT_MODE_NV                      0x8DAF
+typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);
+typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
+typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);
+GLEE_EXTERN PFNGLDEPTHRANGEDNVPROC pglDepthRangedNV;
+GLEE_EXTERN PFNGLCLEARDEPTHDNVPROC pglClearDepthdNV;
+GLEE_EXTERN PFNGLDEPTHBOUNDSDNVPROC pglDepthBoundsdNV;
+#define glDepthRangedNV pglDepthRangedNV
+#define glClearDepthdNV pglClearDepthdNV
+#define glDepthBoundsdNV pglDepthBoundsdNV
+#endif 
+
+/* GL_EXT_texture_compression_latc */
+
+#ifndef GL_EXT_texture_compression_latc
+#define GL_EXT_texture_compression_latc 1
+#define __GLEE_GL_EXT_texture_compression_latc 1
+/* Constants */
+#define GL_COMPRESSED_LUMINANCE_LATC1_EXT                  0x8C70
+#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT           0x8C71
+#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT            0x8C72
+#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT     0x8C73
+#endif 
+
+/* GL_NV_transform_feedback */
+
+#ifndef GL_NV_transform_feedback
+#define GL_NV_transform_feedback 1
+#define __GLEE_GL_NV_transform_feedback 1
+/* Constants */
+#define GL_BACK_PRIMARY_COLOR_NV                           0x8C77
+#define GL_BACK_SECONDARY_COLOR_NV                         0x8C78
+#define GL_TEXTURE_COORD_NV                                0x8C79
+#define GL_CLIP_DISTANCE_NV                                0x8C7A
+#define GL_VERTEX_ID_NV                                    0x8C7B
+#define GL_PRIMITIVE_ID_NV                                 0x8C7C
+#define GL_GENERIC_ATTRIB_NV                               0x8C7D
+#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV                   0x8C7E
+#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV               0x8C7F
+#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV   0x8C80
+#define GL_ACTIVE_VARYINGS_NV                              0x8C81
+#define GL_ACTIVE_VARYING_MAX_LENGTH_NV                    0x8C82
+#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV                  0x8C83
+#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV              0x8C84
+#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV               0x8C85
+#define GL_TRANSFORM_FEEDBACK_RECORD_NV                    0x8C86
+#define GL_PRIMITIVES_GENERATED_NV                         0x8C87
+#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV        0x8C88
+#define GL_RASTERIZER_DISCARD_NV                           0x8C89
+#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV   0x8C8A
+#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV      0x8C8B
+#define GL_INTERLEAVED_ATTRIBS_NV                          0x8C8C
+#define GL_SEPARATE_ATTRIBS_NV                             0x8C8D
+#define GL_TRANSFORM_FEEDBACK_BUFFER_NV                    0x8C8E
+#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV            0x8C8F
+typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
+typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) ();
+typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint * attribs, GLenum bufferMode);
+typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
+typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
+typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
+typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
+typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar * name);
+typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar * name);
+typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
+typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint * location);
+GLEE_EXTERN PFNGLBEGINTRANSFORMFEEDBACKNVPROC pglBeginTransformFeedbackNV;
+GLEE_EXTERN PFNGLENDTRANSFORMFEEDBACKNVPROC pglEndTransformFeedbackNV;
+GLEE_EXTERN PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC pglTransformFeedbackAttribsNV;
+GLEE_EXTERN PFNGLBINDBUFFERRANGENVPROC pglBindBufferRangeNV;
+GLEE_EXTERN PFNGLBINDBUFFEROFFSETNVPROC pglBindBufferOffsetNV;
+GLEE_EXTERN PFNGLBINDBUFFERBASENVPROC pglBindBufferBaseNV;
+GLEE_EXTERN PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC pglTransformFeedbackVaryingsNV;
+GLEE_EXTERN PFNGLACTIVEVARYINGNVPROC pglActiveVaryingNV;
+GLEE_EXTERN PFNGLGETVARYINGLOCATIONNVPROC pglGetVaryingLocationNV;
+GLEE_EXTERN PFNGLGETACTIVEVARYINGNVPROC pglGetActiveVaryingNV;
+GLEE_EXTERN PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC pglGetTransformFeedbackVaryingNV;
+#define glBeginTransformFeedbackNV pglBeginTransformFeedbackNV
+#define glEndTransformFeedbackNV pglEndTransformFeedbackNV
+#define glTransformFeedbackAttribsNV pglTransformFeedbackAttribsNV
+#define glBindBufferRangeNV pglBindBufferRangeNV
+#define glBindBufferOffsetNV pglBindBufferOffsetNV
+#define glBindBufferBaseNV pglBindBufferBaseNV
+#define glTransformFeedbackVaryingsNV pglTransformFeedbackVaryingsNV
+#define glActiveVaryingNV pglActiveVaryingNV
+#define glGetVaryingLocationNV pglGetVaryingLocationNV
+#define glGetActiveVaryingNV pglGetActiveVaryingNV
+#define glGetTransformFeedbackVaryingNV pglGetTransformFeedbackVaryingNV
+#endif 
+
+/* GL_NV_geometry_program4 */
+
+#ifndef GL_NV_geometry_program4
+#define GL_NV_geometry_program4 1
+#define __GLEE_GL_NV_geometry_program4 1
+/* Constants */
+#define GL_GEOMETRY_PROGRAM_NV                             0x8C26
+#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV                  0x8C27
+#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV          0x8C28
+typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);
+GLEE_EXTERN PFNGLPROGRAMVERTEXLIMITNVPROC pglProgramVertexLimitNV;
+#define glProgramVertexLimitNV pglProgramVertexLimitNV
+#endif 
+
+/* GL_NV_gpu_program4 */
+
+#ifndef GL_NV_gpu_program4
+#define GL_NV_gpu_program4 1
+#define __GLEE_GL_NV_gpu_program4 1
+/* Constants */
+#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV                     0x8904
+#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV                     0x8905
+#define GL_PROGRAM_ATTRIB_COMPONENTS_NV                    0x8906
+#define GL_PROGRAM_RESULT_COMPONENTS_NV                    0x8907
+#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV                0x8908
+#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV                0x8909
+#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV                  0x8DA5
+#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV                  0x8DA6
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint * params);
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint * params);
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint * params);
+typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint * params);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint * params);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint * params);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint * params);
+typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint * params);
+typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint * params);
+typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint * params);
+typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint * params);
+typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint * params);
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4INVPROC pglProgramLocalParameterI4iNV;
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC pglProgramLocalParameterI4ivNV;
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC pglProgramLocalParametersI4ivNV;
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4UINVPROC pglProgramLocalParameterI4uiNV;
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC pglProgramLocalParameterI4uivNV;
+GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC pglProgramLocalParametersI4uivNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4INVPROC pglProgramEnvParameterI4iNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4IVNVPROC pglProgramEnvParameterI4ivNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERSI4IVNVPROC pglProgramEnvParametersI4ivNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4UINVPROC pglProgramEnvParameterI4uiNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4UIVNVPROC pglProgramEnvParameterI4uivNV;
+GLEE_EXTERN PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC pglProgramEnvParametersI4uivNV;
+GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC pglGetProgramLocalParameterIivNV;
+GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC pglGetProgramLocalParameterIuivNV;
+GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERIIVNVPROC pglGetProgramEnvParameterIivNV;
+GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC pglGetProgramEnvParameterIuivNV;
+#define glProgramLocalParameterI4iNV pglProgramLocalParameterI4iNV
+#define glProgramLocalParameterI4ivNV pglProgramLocalParameterI4ivNV
+#define glProgramLocalParametersI4ivNV pglProgramLocalParametersI4ivNV
+#define glProgramLocalParameterI4uiNV pglProgramLocalParameterI4uiNV
+#define glProgramLocalParameterI4uivNV pglProgramLocalParameterI4uivNV
+#define glProgramLocalParametersI4uivNV pglProgramLocalParametersI4uivNV
+#define glProgramEnvParameterI4iNV pglProgramEnvParameterI4iNV
+#define glProgramEnvParameterI4ivNV pglProgramEnvParameterI4ivNV
+#define glProgramEnvParametersI4ivNV pglProgramEnvParametersI4ivNV
+#define glProgramEnvParameterI4uiNV pglProgramEnvParameterI4uiNV
+#define glProgramEnvParameterI4uivNV pglProgramEnvParameterI4uivNV
+#define glProgramEnvParametersI4uivNV pglProgramEnvParametersI4uivNV
+#define glGetProgramLocalParameterIivNV pglGetProgramLocalParameterIivNV
+#define glGetProgramLocalParameterIuivNV pglGetProgramLocalParameterIuivNV
+#define glGetProgramEnvParameterIivNV pglGetProgramEnvParameterIivNV
+#define glGetProgramEnvParameterIuivNV pglGetProgramEnvParameterIuivNV
+#endif 
+
+/* GL_NV_framebuffer_multisample_coverage */
+
+#ifndef GL_NV_framebuffer_multisample_coverage
+#define GL_NV_framebuffer_multisample_coverage 1
+#define __GLEE_GL_NV_framebuffer_multisample_coverage 1
+/* Constants */
+#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV                0x8CAB
+#define GL_RENDERBUFFER_COLOR_SAMPLES_NV                   0x8E10
+#define GL_MAX_RENDERBUFFER_COVERAGE_SAMPLES_NV            0x8D57
+#define GL_MAX_RENDERBUFFER_COLOR_SAMPLES_NV               0x8E11
+#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV               0x8E12
+#define GL_MULTISAMPLE_COVERAGE_MODES_NV                   0x8E13
+typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
+GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC pglRenderbufferStorageMultisampleCoverageNV;
+#define glRenderbufferStorageMultisampleCoverageNV pglRenderbufferStorageMultisampleCoverageNV
+#endif 
+
+/* GL_EXT_framebuffer_multisample */
+
+#ifndef GL_EXT_framebuffer_multisample
+#define GL_EXT_framebuffer_multisample 1
+#define __GLEE_GL_EXT_framebuffer_multisample 1
+/* Constants */
+#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT          0x8D56
+#define GL_MAX_SAMPLES_EXT                                 0x8D57
+#define GL_RENDERBUFFER_SAMPLES_EXT                        0x8CAB
+typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
+GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT;
+#define glRenderbufferStorageMultisampleEXT pglRenderbufferStorageMultisampleEXT
+#endif 
+
+/* GL_EXT_framebuffer_blit */
+
+#ifndef GL_EXT_framebuffer_blit
+#define GL_EXT_framebuffer_blit 1
+#define __GLEE_GL_EXT_framebuffer_blit 1
+/* Constants */
+#define GL_READ_FRAMEBUFFER_EXT                            0x8CA8
+#define GL_DRAW_FRAMEBUFFER_EXT                            0x8CA9
+#define GL_DRAW_FRAMEBUFFER_BINDING_EXT                    0x8CA6
+#define GL_READ_FRAMEBUFFER_BINDING_EXT                    0x8CAA
+typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
+GLEE_EXTERN PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT;
+#define glBlitFramebufferEXT pglBlitFramebufferEXT
+#endif 
+
+/* GL_EXT_texture_compression_rgtc */
+
+#ifndef GL_EXT_texture_compression_rgtc
+#define GL_EXT_texture_compression_rgtc 1
+#define __GLEE_GL_EXT_texture_compression_rgtc 1
+/* Constants */
+#define GL_COMPRESSED_RED_RGTC1_EXT                        0x8DBB
+#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT                 0x8DBC
+#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT                  0x8DBD
+#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT           0x8DBE
+#endif 
+
 /* GL_EXT_color_matrix */
 
 #ifndef GL_EXT_color_matrix
@@ -8329,6 +9021,63 @@
 #define glIglooInterfaceSGIX pglIglooInterfaceSGIX
 #endif 
 
+/* GL_EXT_draw_buffers2 */
+
+#ifndef GL_EXT_draw_buffers2
+#define GL_EXT_draw_buffers2 1
+#define __GLEE_GL_EXT_draw_buffers2 1
+/* Constants */
+typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
+typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean * data);
+typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint * data);
+typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
+typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);
+typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);
+GLEE_EXTERN PFNGLCOLORMASKINDEXEDEXTPROC pglColorMaskIndexedEXT;
+GLEE_EXTERN PFNGLGETBOOLEANINDEXEDVEXTPROC pglGetBooleanIndexedvEXT;
+GLEE_EXTERN PFNGLGETINTEGERINDEXEDVEXTPROC pglGetIntegerIndexedvEXT;
+GLEE_EXTERN PFNGLENABLEINDEXEDEXTPROC pglEnableIndexedEXT;
+GLEE_EXTERN PFNGLDISABLEINDEXEDEXTPROC pglDisableIndexedEXT;
+GLEE_EXTERN PFNGLISENABLEDINDEXEDEXTPROC pglIsEnabledIndexedEXT;
+#define glColorMaskIndexedEXT pglColorMaskIndexedEXT
+#define glGetBooleanIndexedvEXT pglGetBooleanIndexedvEXT
+#define glGetIntegerIndexedvEXT pglGetIntegerIndexedvEXT
+#define glEnableIndexedEXT pglEnableIndexedEXT
+#define glDisableIndexedEXT pglDisableIndexedEXT
+#define glIsEnabledIndexedEXT pglIsEnabledIndexedEXT
+#endif 
+
+/* GL_NV_parameter_buffer_object */
+
+#ifndef GL_NV_parameter_buffer_object
+#define GL_NV_parameter_buffer_object 1
+#define __GLEE_GL_NV_parameter_buffer_object 1
+/* Constants */
+typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat * params);
+typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint * params);
+typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint * params);
+GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC pglProgramBufferParametersfvNV;
+GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC pglProgramBufferParametersIivNV;
+GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC pglProgramBufferParametersIuivNV;
+#define glProgramBufferParametersfvNV pglProgramBufferParametersfvNV
+#define glProgramBufferParametersIivNV pglProgramBufferParametersIivNV
+#define glProgramBufferParametersIuivNV pglProgramBufferParametersIuivNV
+#endif 
+
+/* GL_EXT_draw_instanced */
+
+#ifndef GL_EXT_draw_instanced
+#define GL_EXT_draw_instanced 1
+#define __GLEE_GL_EXT_draw_instanced 1
+/* Constants */
+typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
+typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount);
+GLEE_EXTERN PFNGLDRAWARRAYSINSTANCEDEXTPROC pglDrawArraysInstancedEXT;
+GLEE_EXTERN PFNGLDRAWELEMENTSINSTANCEDEXTPROC pglDrawElementsInstancedEXT;
+#define glDrawArraysInstancedEXT pglDrawArraysInstancedEXT
+#define glDrawElementsInstancedEXT pglDrawElementsInstancedEXT
+#endif 
+
 /* GL_EXT_fragment_lighting */
 
 #ifndef GL_EXT_fragment_lighting
@@ -8405,33 +9154,6 @@
 #define glLightEnviEXT pglLightEnviEXT
 #endif 
 
-/* GL_EXT_framebuffer_blit */
-
-#ifndef GL_EXT_framebuffer_blit
-#define GL_EXT_framebuffer_blit 1
-#define __GLEE_GL_EXT_framebuffer_blit 1
-/* Constants */
-#define GL_READ_FRAMEBUFFER_EXT                            0x8CA8
-#define GL_DRAW_FRAMEBUFFER_EXT                            0x8CA9
-#define GL_DRAW_FRAMEBUFFER_BINDING_EXT                    0x8CA6
-#define GL_READ_FRAMEBUFFER_BINDING_EXT                    0x8CAA
-typedef GLvoid (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
-GLEE_EXTERN PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT;
-#define glBlitFramebufferEXT pglBlitFramebufferEXT
-#endif 
-
-/* GL_EXT_framebuffer_multisample */
-
-#ifndef GL_EXT_framebuffer_multisample
-#define GL_EXT_framebuffer_multisample 1
-#define __GLEE_GL_EXT_framebuffer_multisample 1
-/* Constants */
-#define GL_RENDERBUFFER_SAMPLES_EXT                        0x8CAB
-typedef GLvoid (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
-GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT;
-#define glRenderbufferStorageMultisampleEXT pglRenderbufferStorageMultisampleEXT
-#endif 
-
 /* GL_EXT_packed_depth_stencil */
 
 #ifndef GL_EXT_packed_depth_stencil
@@ -8642,7 +9364,7 @@
 #define GL_MAX_INTENSITY_SGIS                              0x85FB
 #endif 
 
-/* WIN32 SPECIFIC */
+/* WGL  */
 
 #ifdef WIN32
 
@@ -9371,7 +10093,8 @@
 GLEE_EXTERN PFNWGLSETSTEREOEMITTERSTATE3DLPROC pwglSetStereoEmitterState3DL;
 #define wglSetStereoEmitterState3DL pwglSetStereoEmitterState3DL
 #endif 
-#else /* WIN32 defined */
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
+#else /* GLX */
 
 /* Extension querying variables */
 
@@ -10048,7 +10771,7 @@
 #define __GLEE_GLX_EXT_scene_marker 1
 /* Constants */
 #endif 
-#endif /*end linux */
+#endif /*end GLX */
 
 /*****************************************************************
  * GLee functions
@@ -10062,6 +10785,7 @@
 
 #ifdef WIN32
 GLEE_EXTERN const char * GLeeGetExtStrWGL();
+#elif defined(__APPLE__) || defined(__APPLE_CC__)
 #else 
 GLEE_EXTERN const char * GLeeGetExtStrGLX();
 #endif

Modified: antargis/trunk/ext/video/headers.hh
===================================================================
--- antargis/trunk/ext/video/headers.hh	2008-01-26 19:48:26 UTC (rev 1217)
+++ antargis/trunk/ext/video/headers.hh	2008-01-27 15:47:21 UTC (rev 1218)
@@ -1,22 +1,22 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
 #include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"



From davidkamphausen at mail.berlios.de  Mon Jan 28 20:36:22 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Mon, 28 Jan 2008 20:36:22 +0100
Subject: [Antargis-svn] r1219 - in antargis/trunk/ruby: . spec
Message-ID: <200801281936.m0SJaM81001941@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-28 20:36:21 +0100 (Mon, 28 Jan 2008)
New Revision: 1219

Modified:
   antargis/trunk/ruby/campaign.rb
   antargis/trunk/ruby/spec/spec_call.rb
   antargis/trunk/ruby/spec/spec_campaign.rb
   antargis/trunk/ruby/spec/spec_menu.rb
Log:
* some more checks


Modified: antargis/trunk/ruby/campaign.rb
===================================================================
--- antargis/trunk/ruby/campaign.rb	2008-01-27 15:47:21 UTC (rev 1218)
+++ antargis/trunk/ruby/campaign.rb	2008-01-28 19:36:21 UTC (rev 1219)
@@ -167,6 +167,9 @@
 	end
 end
 
+class TestClass
+end
+
 class CutScene
 	#attr_reader :finished
 	def initialize(node)
@@ -195,6 +198,10 @@
 			c.addChild("image").set("filename",s[:imageName]) if s[:imageName]
 		}
 	end
+	def mytest
+		puts "muh"
+		#TestClass.new
+	end
 	def play
 		display=CutSceneDisplay.new(@image, at text)
 		@screens.each{|s|

Modified: antargis/trunk/ruby/spec/spec_call.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_call.rb	2008-01-27 15:47:21 UTC (rev 1218)
+++ antargis/trunk/ruby/spec/spec_call.rb	2008-01-28 19:36:21 UTC (rev 1219)
@@ -7,7 +7,7 @@
 describe "Call-predicate in spec-helper" do
   it "should work with global functions" do
     globalTestFunction.should == "myFunc"
-    lambda {globalTestFunction.should be_nil}.should call(:globalTestFunction)
+    lambda {globalTestFunction.should be_nil}.should cross(:globalTestFunction)
     globalTestFunction.should == "myFunc"
   end
   it "should work with methods" do
@@ -18,11 +18,11 @@
     end
     a=A.new
 		a.y.should == "hi"
-    lambda{a.y.should be_nil}.should call(a,:y)
+    lambda{a.y.should be_nil}.should cross(a,:y)
 		a.y.should == "hi"
   end
 	it "should work with should_not" do
-		lambda{}.should_not call(:globalTestFunction)
+		lambda{}.should_not cross(:globalTestFunction)
 	end
 
 	it "should work with new method" do
@@ -33,10 +33,89 @@
 			end
 		end
 		
-		lambda{A.new}.should call(A,:new)
-		lambda{}.should_not call(A,:new)
-		lambda{a=A.new}.should call(A,:new)
+		lambda{A.new}.should cross(A,:initialize)
+		lambda{}.should_not cross(A,:initialize)
+		lambda{a=A.new}.should cross(A,:initialize)
 	end
 
 end
 
+
+
+
+def myGlobalFunction
+  :test1
+end
+
+def myGlobalCaller
+  myGlobalFunction
+end
+
+class Test
+  def initialize
+    puts "new Test"
+  end
+  def Test.test2
+    :test_2
+  end
+  def test3
+    :test_3
+  end
+end
+
+describe "Cross" do
+  it "should work for global functions" do
+    myGlobalCaller.should equal(:test1)
+    lambda{myGlobalCaller.should be_nil}.should cross(:myGlobalFunction)
+    myGlobalCaller.should equal(:test1)
+  end
+  
+  it "should work for class-methods" do
+    lambda{Test.test2}.should cross(Test,:test2)
+		Test.test2.should equal(:test_2)
+  end
+  
+  it "should work for object-methods" do
+    t=Test.new
+    t.test3.should equal(:test_3)
+    lambda{t.test3}.should cross(t,:test3)
+    t.test3.should equal(:test_3)
+  end
+  
+  it "should work with new on global class,too" do
+    lambda{Test.new}.should cross(Test,:initialize)
+  end
+
+	it "failure measure" do
+		Cross.new("A","B").failure_message.should =~/expected .* to call A.B.*/
+	end
+	it "negative failure measure" do
+		Cross.new("A","B").negative_failure_message.should =~/expected .* not to call A.B.*/
+	end
+  
+  it "should work with local classes" do
+    class A
+      attr_reader :x
+      def initialize
+        @x=20
+      end
+      def y
+        10
+      end
+      def A.z        
+        :az
+      end
+    end
+    a=nil
+    a=A.new
+    lambda {a.y}.should cross(a,:y)
+    lambda {a=A.new}.should cross(A,:initialize)
+    A.new.y.should equal(10)
+    lambda {}.should_not cross(A,:initialize)
+    
+    lambda{A.z}.should cross(A,:z)
+    lambda{}.should_not cross(A,:z)
+    A.z.should equal(:az)
+  end
+end
+

Modified: antargis/trunk/ruby/spec/spec_campaign.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-27 15:47:21 UTC (rev 1218)
+++ antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-28 19:36:21 UTC (rev 1219)
@@ -26,11 +26,36 @@
 	it "birth campaign starts with cutscene" do
 		@birth.getCurrentPart.should be_a_kind_of(CutScene)
 	end
-	it "should run a story fine" do
-		cutscene=@birth.getCurrentPart
-		lambda {cutscene.play}.should_not cross(CutSceneDisplay,:new)
-		
-	end
+ 	it "should run a story fine" do
+		OldDisplay=CutSceneDisplay.clone
+		class CutSceneDisplay
+			@@ok=false
+			@@calls={}
+			
+			# remove all methods
+			self.instance_methods.each{|m|undef_method(m) unless m=~/__.*__/}
+			def initialize
+				@@ok=true
+			end
+			def CutSceneDisplay.initok
+				@@ok 
+			end
+			def CutSceneDisplay.callCount(name)
+				@@calls[name]
+			end
+			def method_missing(name,*s)
+				@@calls[name]||=0
+				@@calls[name]+=1
+			end
+		end
+ 		cutscene=@birth.getCurrentPart
+ 		lambda {cutscene.play}.should cross(CutSceneDisplay,:initialize)
+		CutSceneDisplay.initok.should be_false # because it wasn't hit due to "should cross"
+		CutSceneDisplay.callCount(:setImage).should >0
+		CutSceneDisplay.callCount(:setImage).should equal(CutSceneDisplay.callCount(:setText))
+		CutSceneDisplay.callCount(:setImage).should equal(CutSceneDisplay.callCount(:run))
+ 		CutSceneDisplay=OldDisplay
+ 	end
 
 
 end

Modified: antargis/trunk/ruby/spec/spec_menu.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_menu.rb	2008-01-27 15:47:21 UTC (rev 1218)
+++ antargis/trunk/ruby/spec/spec_menu.rb	2008-01-28 19:36:21 UTC (rev 1219)
@@ -1,9 +1,7 @@
-if false
-Dir.chdir(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])
-puts Dir.pwd
+Dir.chdir(File.split(__FILE__)[0])
 
+require '../spec_helper.rb'
 require 'ruby/gui/testing.rb'
-require 'ruby/spec_helper.rb'
 require 'ruby/mainmenu.rb'
 
 describe 'Main-Menu' do
@@ -31,7 +29,7 @@
 	it "should be possible to select tutorial and this will start this one" do
 		tutorialButton=widget("tutorial")
 		tutorialButton.should be_an_instance_of(AGButton)
-		lambda {tutorialButton.click}.should call(:startCampaign)
+		lambda {tutorialButton.click}.should cross(:startCampaign)
 	end
 	it "should be possible to select the tutorial in the campaign section and start it" do
 		playCampaign(0)
@@ -65,8 +63,7 @@
 		campaignRadio.should be_checked
 		startButton=menu.child("start")
 		startButton.should be_a_kind_of(AGButton)
-		lambda {startButton.click}.should call(:startCampaign)
+		lambda {startButton.click}.should cross(:startCampaign)
 	end
 end
 
-end
\ No newline at end of file



From davidkamphausen at mail.berlios.de  Mon Jan 28 20:37:20 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Mon, 28 Jan 2008 20:37:20 +0100
Subject: [Antargis-svn] r1220 - in antargis/trunk/ruby: . editor/test gui
Message-ID: <200801281937.m0SJbKrc002101@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-28 20:37:20 +0100 (Mon, 28 Jan 2008)
New Revision: 1220

Added:
   antargis/trunk/ruby/editor/test/player_dialog.rb
   antargis/trunk/ruby/gui/testing.rb
   antargis/trunk/ruby/spec_helper.rb
Log:
* some more files


Added: antargis/trunk/ruby/editor/test/player_dialog.rb
===================================================================
--- antargis/trunk/ruby/editor/test/player_dialog.rb	2008-01-28 19:36:21 UTC (rev 1219)
+++ antargis/trunk/ruby/editor/test/player_dialog.rb	2008-01-28 19:37:20 UTC (rev 1220)
@@ -0,0 +1,71 @@
+#!/usr/bin/env ruby
+require 'test/unit'
+require 'ruby/gui/testing.rb'
+
+Dir.chdir(File.split(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])[0])
+puts Dir.pwd
+
+require 'ruby/editor_app.rb'
+
+
+class DialogTest<Test::Unit::TestCase
+	include GuiTest
+	def setup
+		@app=makeTestAppClass(AntEditorApp).new(1024,768)
+		@mainWidget=@app.getMainWidget
+		@app.step
+	end
+	def test_simplerun
+		newdialog
+		addtree
+ 		playerdialog
+	end
+private
+ 	def checkGlobals
+ 		assert($map.nil?,"$map is nil")
+ 	end
+	def newdialog
+		new=widget("new")
+		assert(new.visible)
+		new.click
+		dialog=widget("NewDialog")
+		assert(dialog.visible,"NewDialog is not visible after clicking 'new'")
+
+		okButton=dialog.child("ok")
+		assert(okButton.visible,"ok-button in NewDialog is not visible")
+		okButton.click
+		@app.step
+		assert((not widget("NewDialog").valid),"new dialog is not registered anymore")
+		@app.step
+	end
+	def addtree
+		entitiesButton=widget("entities")
+		assert(entitiesButton.is_a?(AGRadio),"Button named 'entities' is a radio-button")
+		entitiesButton.click
+		entitiesList=widget("entitiesTab")
+		assert(entitiesList.is_a?(AntEntListWidget),"Entity List is named 'entitiesTab'")
+		assert(entitiesList.visible,"entity list is visible")
+		fir=entitiesList.child("AntFir")
+		assert(fir.is_a?(AGRadio),"fir button is a radio-button")
+		assert((not fir.isChecked),"Fir button is not checked")
+		fir.click
+		assert(entitiesList.entType==AntFir,"Fir button is checked")
+		clickScreen(700,200)
+		assert(@app.getMap.getAllEntities.length==1,"there's one entity!")
+		clickScreen(710,210)
+		assert(@app.getMap.getAllEntities.length==2,"there're two entities!")
+	end
+	def playerdialog
+		playerButton=widget("playerButton")
+		assert(playerButton.is_a?(AGButton),"playerButton is a button")
+		playerButton.click
+		playerDialog=widget("PlayersDialog")
+		assert(playerDialog.visible,"player dialog is visible")
+	end
+
+	def clickScreen(x,y)
+		@app.eventMouseButtonDown(newEvent(@app,"",toSDLEvent("SDL_MOUSEBUTTONDOWN:0:1:1:#{x.to_i}:#{y.to_i}")))
+		@app.eventMouseButtonUp(newEvent(@app,"",toSDLEvent("SDL_MOUSEBUTTONUP:0:1:1:#{x.to_i}:#{y.to_i}")))
+	end
+end
+

Added: antargis/trunk/ruby/gui/testing.rb
===================================================================
--- antargis/trunk/ruby/gui/testing.rb	2008-01-28 19:36:21 UTC (rev 1219)
+++ antargis/trunk/ruby/gui/testing.rb	2008-01-28 19:37:20 UTC (rev 1220)
@@ -0,0 +1,111 @@
+module TestModule
+	attr_reader :quitCounter
+	def step
+		run
+	end
+	def eventFrame(t)
+		puts "FRAME"
+		super
+		tryQuit
+		true
+	end
+	def tryQuit
+		super
+		@quitCounter||=0
+		@quitCounter+=1
+	end
+end
+
+def makeTestAppClass(pClass)
+	mClass=Class.new(pClass)
+	mClass.class_eval{||include TestModule}
+	mClass
+end
+# class TestApp<AntEditorApp
+# 	def step
+# 		run
+# 	end
+# 	def eventFrame(t)
+# 		puts "FRAME"
+# 		super
+# 		tryQuit
+# 		true
+# 	end
+# end
+
+class TestWidget
+	attr_reader :widget
+	def initialize(widget)
+		@widget=widget
+	end
+	def click
+# 		r=@widget.getScreenRect
+# 		x=r.x+r.w/2
+# 		y=r.y+r.h/2
+# 		pp r,x,y
+# 
+# 		sdlEvent=toSDLEvent("SDL_MOUSEBUTTONDOWN:0:1:1:#{x.to_i}:#{y.to_i}")
+# 		@widget.eventMouseButtonDown(newEvent(nil,"",sdlEvent))
+# 		sdlEvent=toSDLEvent("SDL_MOUSEBUTTONUP:0:1:1:#{x.to_i}:#{y.to_i}")
+# 		event=newEvent(nil,"",sdlEvent)
+# 		@widget.eventMouseButtonUp(event)
+
+# # 		@widget.eventMouseButtonDown(AGEvent.new(@widget, at widget.getName))
+# # 		@widget.eventMouseButtonDown(AGEvent.new(@widget, at widget.getName))
+# 		@widget.sigClick.signal(AGEvent.new(@widget, at widget.getName))
+ 		@widget.doClick(AGEvent.new(@widget, at widget.getName))
+	end
+	def child(widgetName)
+		return TestWidget.new(nil) if @widget.nil?
+		TestWidget.new(@widget.getChild(widgetName))
+	end
+	def visible
+		return false if @widget.nil?
+		@widget.visible
+	end
+	def valid
+		(not @widget.nil?)
+	end
+	def is_a?(type)
+		@widget.is_a?(type)
+	end
+	def method_missing(*s)
+		@widget.send(*s)
+	end
+	def printVisible
+		widget=@widget
+		puts "--"
+		while widget
+			puts "#{widget} #{widget.getName} #{widget.visible}"
+			widget=widget.getParent
+		end
+		puts "--"
+	end
+	def kind_of?(type)
+		@widget.kind_of?(type)
+	end
+	def instance_of?(type)
+		@widget.instance_of?(type)
+	end
+	def visible?
+		@widget.visible
+	end
+	def nil?
+		@widget.nil?
+	end
+	def checked?
+		@widget.isChecked
+	end
+end
+
+
+module GuiTest
+protected
+	def widget(widgetName)
+		TestWidget.new(@app.getMainWidget.getChild(widgetName))
+	end
+	def clickScreen(x,y)
+		@app.eventMouseButtonDown(newEvent(@app,"",toSDLEvent("SDL_MOUSEBUTTONDOWN:0:1:1:#{x.to_i}:#{y.to_i}")))
+		@app.eventMouseButtonUp(newEvent(@app,"",toSDLEvent("SDL_MOUSEBUTTONUP:0:1:1:#{x.to_i}:#{y.to_i}")))
+	end
+end

Added: antargis/trunk/ruby/spec_helper.rb
===================================================================
--- antargis/trunk/ruby/spec_helper.rb	2008-01-28 19:36:21 UTC (rev 1219)
+++ antargis/trunk/ruby/spec_helper.rb	2008-01-28 19:37:20 UTC (rev 1220)
@@ -0,0 +1,84 @@
+Dir.chdir(File.split(File.split(File.expand_path(__FILE__))[0])[0])
+
+require 'pp'
+require 'ruby/antargislib.rb'
+
+#if Object.respond_to?(:define_cmethod)
+	
+	class Object
+		def define_cmethod(method_name, method = nil, &proc)
+			if proc.nil?
+				raise ArgumentError
+			else
+				method = proc
+			end if method.nil?
+		
+			(class << self; self; end).module_eval do
+				define_method( method_name.to_sym, method )
+			end
+		end
+	end
+	
+	$MY_KERNEL=self
+	def kernel
+		$MY_KERNEL
+	end
+	class Cross
+		@@called={}
+		def initialize(target,function)
+			@target=target
+			@function=function
+			@expected="#{target}.#{function}(.)"
+		end
+		def matches?(proc)      
+			@proc = proc
+			callName=@expected
+			@@called[callName]=0
+			
+			if @target.is_a?(Class) and @target.singleton_methods.member?(@function.to_s)
+				mclass=@target
+				
+				function=@function
+				oldFunction=@target.method(@function)
+				mclass.define_cmethod(@function) do 
+					Cross.symCall(callName)
+				end
+				
+				@proc.call
+				mclass.define_cmethod(@function,oldFunction)
+				
+				return @@called[callName]>0
+	
+			end
+			mclass=@target
+			mclass=@target.class unless @target.is_a?(Class)
+	
+			oldFunction=mclass.instance_method(@function)
+			mclass.send(:define_method, at function) do 
+				Cross.symCall(callName) 
+			end
+			@proc.call
+			mclass.send(:define_method, at function,oldFunction)
+			@@called[callName]>0
+		end
+		def failure_message
+			"expected #{@proc.inspect} to call #{@expected}"
+		end
+		def negative_failure_message
+			"expected #{@proc.inspect} not to call #{@expected}"
+		end
+		def Cross.symCall(name)
+			@@called[name]+=1
+			nil
+		end
+	end
+	
+	def cross(target,function=nil)
+			if function.nil? and target.is_a?(Symbol)
+				function=target
+				target=kernel
+			end
+	
+		Cross.new(target,function)
+	end
+#end


Property changes on: antargis/trunk/ruby/spec_helper.rb
___________________________________________________________________
Name: svn:executable
   + *



From davidkamphausen at mail.berlios.de  Wed Jan 30 20:24:41 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 30 Jan 2008 20:24:41 +0100
Subject: [Antargis-svn] r1221 - in antargis/trunk: . ext/3dengine ext/basic
	ext/game ext/gui ext/math ext/sound ext/video
Message-ID: <200801301924.m0UJOfrn018822@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-30 20:24:40 +0100 (Wed, 30 Jan 2008)
New Revision: 1221

Added:
   antargis/trunk/cross.rb
   antargis/trunk/editor.rb
Modified:
   antargis/trunk/ext/3dengine/headers.hh
   antargis/trunk/ext/basic/headers.hh
   antargis/trunk/ext/game/headers.hh
   antargis/trunk/ext/gui/headers.hh
   antargis/trunk/ext/math/headers.hh
   antargis/trunk/ext/sound/headers.hh
   antargis/trunk/ext/video/headers.hh
Log:
* missing files


Added: antargis/trunk/cross.rb
===================================================================
--- antargis/trunk/cross.rb	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/cross.rb	2008-01-30 19:24:40 UTC (rev 1221)
@@ -0,0 +1,24 @@
+$CONFIG={
+  'LDSHARED'=>'/usr/bin/i586-mingw32msvc-g++ -shared -s',
+  'CC'=>'/usr/bin/i586-mingw32msvc-gcc',
+  'programs'=>{'CC'=>'CC','CCACHE'=>'CCACHE','SWIG'=>'SWIG','CXX'=>'CXX','RUBY'=>'RUBY','SDL_CONFIG'=>'SDL_CONFIG'},
+  'use_fallbacks'=>'true',
+  'CCACHE'=>'/usr/bin/ccache',
+  'SWIG'=>'/usr/bin/swig',
+  'CXX'=>'/usr/bin/i586-mingw32msvc-g++',
+  'debug'=>'false',
+  'CFLAGS'=>'-g -O0 -dH',
+  'RUBY'=>'/usr/bin/ruby',
+  'DEFINES'=>'',
+  'gcdebug'=>'false',
+  'INCLUDEPATH'=>'-Ibuild/win32/libs/usr/include -Ibuild/win32/libs/usr/lib/ruby/1.8/i386-mingw32 -Ibuild/win32/libs/usr/lib/ruby/site_ruby/1.8/i386-msvcrt  -I/usr/i586-mingw32msvc/include/GL -I. ',
+  'LIBS'=>'-lmsvcrt-ruby18 -lSDL -lz -lSDL_mixer -lSDL_ttf -lpng -lopengl32 -lSDL_image -lglu32',
+  'use_mkmf'=>'true',
+  'profile'=>'false',
+  'LDFLAGS'=>'',
+  'use_env'=>'true',
+  'PATH'=>['c:\windows\system32','c:\windows'],
+  'version'=>'0.2.1.5',
+  'LIBPATH'=>'-Lbuild/win32/libs/usr/lib/ruby/1.8/i386-mingw32  -Lbuild/win32/libs/usr/lib -Lbuild/win32/libs/usr/lib/ruby/site_ruby/1.8/i386-msvcrt  -L/usr/i586-mingw32msvc/lib/GL',
+	'target_os'=>'windows'
+}

Added: antargis/trunk/editor.rb
===================================================================
--- antargis/trunk/editor.rb	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/editor.rb	2008-01-30 19:24:40 UTC (rev 1221)
@@ -0,0 +1,36 @@
+#!/usr/bin/env ruby
+#
+# Copyright (c) 2005 by David Kamphausen. All rights reserved.
+#
+# game.rb
+# by David Kamphausen (david.kamphausen at web.de)
+#
+# The "Antargis" project, including all files needed to compile it,
+# is free software; you can redistribute it and/or use it and/or modify it
+# under the terms of the GNU General Public License as published
+# by the Free Software Foundation; either version 2 of the License,
+# or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+#
+# You should have received a copy of the GNU General Public
+# License along with this program.
+#
+
+#!/usr/bin/ruby
+
+require File.join(File.split(File.expand_path(__FILE__))[0],"ruby","editor_app.rb")
+
+app=AntEditorApp.new(1024,768)
+if ARGV[0]
+	filename=ARGV[0]
+	if (not filename=~/antlvl$/)
+		filename+=".antlvl"
+	end
+	app.getMap.loadMap(filename)
+end
+
+app.run
+


Property changes on: antargis/trunk/editor.rb
___________________________________________________________________
Name: svn:executable
   + *

Modified: antargis/trunk/ext/3dengine/headers.hh
===================================================================
--- antargis/trunk/ext/3dengine/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/3dengine/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,62 +1,62 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_frame.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_image.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_tooltip.h"
 #include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_checkbox.h"
 #include "ext/gui/ag_table.h"
-#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_window.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_border.h"
 #include "ext/3dengine/mesh_data.h"
 #include "ext/3dengine/scene_base.h"
 #include "ext/3dengine/scenenode.h"

Modified: antargis/trunk/ext/basic/headers.hh
===================================================================
--- antargis/trunk/ext/basic/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/basic/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -13,8 +13,8 @@
 #include "ext/basic/ag_xml.h"
 #include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_utf8.h"
 #ifdef SWIG
 %include "ext/basic/ag_rubyobj.h"
 %include "ext/basic/ag_messageobject.h"
@@ -28,7 +28,7 @@
 %include "ext/basic/ag_xml.h"
 %include "ext/basic/ag_string_utf8.h"
 %include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_utf8.h"
 %include "ext/basic/ag_fs.h"
-%include "ext/basic/ag_utf8.h"
 #endif
 #endif

Modified: antargis/trunk/ext/game/headers.hh
===================================================================
--- antargis/trunk/ext/game/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/game/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,78 +1,78 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_frame.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_image.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_tooltip.h"
 #include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_checkbox.h"
 #include "ext/gui/ag_table.h"
-#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_window.h"
-#include "ext/3dengine/ag_glwidget.h"
-#include "ext/3dengine/anim_mesh.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_border.h"
 #include "ext/3dengine/anim_mesh_data.h"
 #include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/mesh_optimizer.h"
 #include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/boa_3d_wireframe.h"
-#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/ag_glwidget.h"
 #include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/mesh_base.h"
 #include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/scene.h"
 #include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/boa_3d_wireframe.h"
+#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/mesh_base.h"
 #include "ext/game/path.h"
 #include "ext/game/terrain.h"
 #include "ext/game/entity.h"

Modified: antargis/trunk/ext/gui/headers.hh
===================================================================
--- antargis/trunk/ext/gui/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/gui/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,35 +1,35 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_application.h"

Modified: antargis/trunk/ext/math/headers.hh
===================================================================
--- antargis/trunk/ext/math/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/math/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"

Modified: antargis/trunk/ext/sound/headers.hh
===================================================================
--- antargis/trunk/ext/sound/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/sound/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #ifdef SWIG
 %include "ext/sound/ag_mixer.h"

Modified: antargis/trunk/ext/video/headers.hh
===================================================================
--- antargis/trunk/ext/video/headers.hh	2008-01-28 19:37:20 UTC (rev 1220)
+++ antargis/trunk/ext/video/headers.hh	2008-01-30 19:24:40 UTC (rev 1221)
@@ -1,22 +1,22 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
 #include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"



From davidkamphausen at mail.berlios.de  Wed Jan 30 20:28:00 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 30 Jan 2008 20:28:00 +0100
Subject: [Antargis-svn] r1222 - in antargis/trunk: . data/campaigns
	ext/3dengine ext/basic ruby ruby/editor/spec ruby/spec
Message-ID: <200801301928.m0UJS0pF019216@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-30 20:27:59 +0100 (Wed, 30 Jan 2008)
New Revision: 1222

Modified:
   antargis/trunk/Rakefile
   antargis/trunk/TODO
   antargis/trunk/configure
   antargis/trunk/data/campaigns/birth.xml
   antargis/trunk/data/campaigns/tutorial.xml
   antargis/trunk/ext/3dengine/vertex_array.cc
   antargis/trunk/ext/basic/init.cc
   antargis/trunk/ruby/campaign.rb
   antargis/trunk/ruby/editor/spec/spec_editor.rb
   antargis/trunk/ruby/spec/spec_campaign.rb
Log:
* some fixes for mac

Modified: antargis/trunk/Rakefile
===================================================================
--- antargis/trunk/Rakefile	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/Rakefile	2008-01-30 19:27:59 UTC (rev 1222)
@@ -1,5 +1,16 @@
 #!/usr/bin/env ruby
 
+alias :oldSystem :system
+def system(cmd)
+  if cmd=~/ruby .*/
+    cmd.gsub!(/^ruby/,"./starter")
+  end
+  puts cmd
+  #exit
+  oldSystem(cmd)
+end
+
+
 Dir.chdir(File.split(__FILE__)[0])
 
 # build extension

Modified: antargis/trunk/TODO
===================================================================
--- antargis/trunk/TODO	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/TODO	2008-01-30 19:27:59 UTC (rev 1222)
@@ -1,3 +1,5 @@
+* checkin editor !
+
 * check for ccache in configure and only use it if available!
 
 

Modified: antargis/trunk/configure
===================================================================
--- antargis/trunk/configure	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/configure	2008-01-30 19:27:59 UTC (rev 1222)
@@ -235,6 +235,7 @@
 			puts "#{k.ljust(10)} found at #{config[k].value.ljust(25)} #{info}"
 		else
 			puts "#{k.ljust(10)} not found!"
+			config[k]=""
 		end
 	}
 	config
@@ -314,9 +315,14 @@
 	file.close
 end
 
-$LDFLAGS+=" -L/usr/X11R6/lib -L/opt/local/lib"
+# FIXME: add check for darwin
+unless CONFIG["host_os"]=~/darwin
+  $LDFLAGS+=" -L/usr/X11R6/lib"
+end
 
+$LDFLAGS+=" -L/opt/local/lib"
 
+
 userInput=getUserInput
 config=generateHardConfiguration(userInput)
 config=searchPrograms(config)

Modified: antargis/trunk/data/campaigns/birth.xml
===================================================================
--- antargis/trunk/data/campaigns/birth.xml	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/data/campaigns/birth.xml	2008-01-30 19:27:59 UTC (rev 1222)
@@ -1,4 +1,4 @@
-<campaign image="data/gui/map1.png" name="A hero is born." description="The story of Antargis begins">
+<campaign image="data/gui/map1.png" name="A hero is born." description="The story of Antargis begins" order="1">
 	<cutscene>
 		<screen>
 			<text text="Strange visions cross your mind."/>

Modified: antargis/trunk/data/campaigns/tutorial.xml
===================================================================
--- antargis/trunk/data/campaigns/tutorial.xml	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/data/campaigns/tutorial.xml	2008-01-30 19:27:59 UTC (rev 1222)
@@ -1,4 +1,4 @@
-<campaign image="data/gui/map1.png" name="Tutorial" description="Here is where you learn how to play the game.">
+<campaign image="data/gui/map1.png" name="Tutorial" description="Here is where you learn how to play the game." order="0">
 	<level file="data/levels/tutorial/tutorial0.antlvl">
 		<failscene>
 			<screen>

Modified: antargis/trunk/ext/3dengine/vertex_array.cc
===================================================================
--- antargis/trunk/ext/3dengine/vertex_array.cc	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/ext/3dengine/vertex_array.cc	2008-01-30 19:27:59 UTC (rev 1222)
@@ -38,7 +38,7 @@
   mArrays=GLEE_EXT_vertex_array && useVertexArrays();
 
   if(videoInited())
-    assert(GLEE_EXT_vertex_array);
+    assert(GLEE_EXT_vertex_array || GLEE_VERSION_1_2); //FIXME: check if this really version 1.2
 
   displayListInited=false;
 

Modified: antargis/trunk/ext/basic/init.cc
===================================================================
--- antargis/trunk/ext/basic/init.cc	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/ext/basic/init.cc	2008-01-30 19:27:59 UTC (rev 1222)
@@ -16,10 +16,16 @@
 AGEXPORT void AG_Init_libantargisbasic()
 {
   TRACE;
+  cdebug("SDL_Init...");
   SDL_Init(SDL_INIT_VIDEO);
+  cdebug("hasMain?");
   if(!hasMain())
-    AGMain *main=new AGMain;
+  {
+	  cdebug("new AGMain..");
 
+	  AGMain *main=new AGMain;
+	  cdebug("new AGMAin!");
+  }
 
   // register main in ruby-var
 

Modified: antargis/trunk/ruby/campaign.rb
===================================================================
--- antargis/trunk/ruby/campaign.rb	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/ruby/campaign.rb	2008-01-30 19:27:59 UTC (rev 1222)
@@ -16,7 +16,7 @@
 end
 
 def getCampaigns
-	$campaigns||=getCampaignFiles.collect{|f|Campaign.new(f)}.select{|f|f.enabled}
+	$campaigns||=getCampaignFiles.collect{|f|Campaign.new(f)}.select{|f|f.enabled}.sort_by{|campaign|campaign.order}
 end
 
 class CampaignLevel
@@ -217,7 +217,7 @@
 end
 
 class Campaign
-	attr_reader :name, :image, :imageName, :description, :texture, :enabled
+	attr_reader :name, :image, :imageName, :description, :texture, :enabled, :order
 	def initialize(filename)
 		if not fileExists(filename)
 			raise "file not found #{filename}"
@@ -226,6 +226,7 @@
 		@xmlRoot=@doc.root
 		@enabled=(@xmlRoot.get("enabled")!="false")
 		@name=@xmlRoot.get("name")
+		@order=@xmlRoot.get("order").to_i
 		@imageName=@xmlRoot.get("image")
 		@image=AGSurface.load(@imageName)
 		@texture=AGTexture.new(@image)

Modified: antargis/trunk/ruby/editor/spec/spec_editor.rb
===================================================================
--- antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/ruby/editor/spec/spec_editor.rb	2008-01-30 19:27:59 UTC (rev 1222)
@@ -1,4 +1,4 @@
-if false
+#if false
 Dir.chdir(File.split(File.split(File.split(File.split(File.expand_path(__FILE__))[0])[0])[0])[0])
 puts Dir.pwd
 
@@ -82,4 +82,4 @@
 
 
 end
-end
\ No newline at end of file
+#end
\ No newline at end of file

Modified: antargis/trunk/ruby/spec/spec_campaign.rb
===================================================================
--- antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-30 19:24:40 UTC (rev 1221)
+++ antargis/trunk/ruby/spec/spec_campaign.rb	2008-01-30 19:27:59 UTC (rev 1222)
@@ -13,6 +13,14 @@
 	it "first campaign is tutorial" do
 		@tutorial.name.should == "Tutorial"
 	end
+	
+	it "tutorial has lower order than birth-campaign" do
+		tut=@campaigns.find{|c|c.name=="Tutorial"}
+		tut.should_not be_nil
+		birth=@campaigns.find{|c|c.name=="A hero is born."}
+		birth.should_not be_nil
+		tut.order.should < birth.order
+	end
 
 	it "tutorial starts with level" do
 		@tutorial.getCurrentPart.should be_a_kind_of(CampaignLevel)



From davidkamphausen at mail.berlios.de  Wed Jan 30 20:28:54 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Wed, 30 Jan 2008 20:28:54 +0100
Subject: [Antargis-svn] r1223 - in antargis/trunk: . main
Message-ID: <200801301928.m0UJSst4019296@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-30 20:28:52 +0100 (Wed, 30 Jan 2008)
New Revision: 1223

Added:
   antargis/trunk/main/
   antargis/trunk/main/Rakefile
   antargis/trunk/main/starter.cc
Log:
* added starter-app

Added: antargis/trunk/main/Rakefile
===================================================================
--- antargis/trunk/main/Rakefile	2008-01-30 19:27:59 UTC (rev 1222)
+++ antargis/trunk/main/Rakefile	2008-01-30 19:28:52 UTC (rev 1223)
@@ -0,0 +1,11 @@
+Dir.chdir(File.split(File.split(__FILE__)[0])[0])
+require 'antconfig.rb'
+
+
+task 'starter'=>"main/starter.cc" do
+	cmd="g++ -o starter main/starter.cc "+$CONFIG["CFLAGS"]+" "+$CONFIG["INCLUDEPATH"]+" "+`sdl-config --libs`.chomp+" -lruby"
+	cmd.gsub!("-arch ppc","")
+	sh cmd
+end
+
+task :default=>'starter'
\ No newline at end of file

Added: antargis/trunk/main/starter.cc
===================================================================
--- antargis/trunk/main/starter.cc	2008-01-30 19:27:59 UTC (rev 1222)
+++ antargis/trunk/main/starter.cc	2008-01-30 19:28:52 UTC (rev 1223)
@@ -0,0 +1,13 @@
+#include <SDL.h>
+
+#include <ruby.h>
+
+int main(int argc,char*argv[])
+{
+	ruby_init();
+	ruby_options(argc,argv);
+	ruby_script("sdl_starter");
+	//rb_load_file("antargis");
+	ruby_run();
+	return 0;
+}
\ No newline at end of file



From davidkamphausen at mail.berlios.de  Thu Jan 31 20:28:06 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Thu, 31 Jan 2008 20:28:06 +0100
Subject: [Antargis-svn] r1224 - in antargis/trunk: . ext ext/3dengine
	ext/basic ext/game ext/gui ext/math ext/sound ext/video main
Message-ID: <200801311928.m0VJS657029672@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-31 20:28:04 +0100 (Thu, 31 Jan 2008)
New Revision: 1224

Modified:
   antargis/trunk/Rakefile
   antargis/trunk/configure
   antargis/trunk/ext/3dengine/headers.hh
   antargis/trunk/ext/Rakefile
   antargis/trunk/ext/basic/headers.hh
   antargis/trunk/ext/game/headers.hh
   antargis/trunk/ext/gui/headers.hh
   antargis/trunk/ext/math/headers.hh
   antargis/trunk/ext/sound/headers.hh
   antargis/trunk/ext/video/ag_gltexture.cc
   antargis/trunk/ext/video/ag_texturecache.cc
   antargis/trunk/ext/video/headers.hh
   antargis/trunk/main/Rakefile
Log:
* some more fixes for macosx

Modified: antargis/trunk/Rakefile
===================================================================
--- antargis/trunk/Rakefile	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/Rakefile	2008-01-31 19:28:04 UTC (rev 1224)
@@ -13,8 +13,6 @@
 
 Dir.chdir(File.split(__FILE__)[0])
 
-# build extension
-load 'ext/Rakefile'
 
 ##########################
 #
@@ -26,6 +24,14 @@
 require 'rake/packagetask.rb'
 require 'spec/rake/spectask'
 
+
+# build starter
+load 'main/Rakefile'
+
+# build extension
+load 'ext/Rakefile'
+
+
 DATA_FILES=Dir["data/**/*"].select{|file|not (file=~/svn/ or file=~/xcf/ or file=~/\.svg/)}
 RUBY_FILES=Dir["ruby/**/*.rb"]+Dir["*.rb"]+Dir["antargis"]
 SWIG_FILES=["ext/swig.cc","ext/swig.h"]
@@ -120,3 +126,9 @@
 	t.rcov = true
 	t.spec_opts=["--format html:spec_output.html"]
 end
+
+
+
+desc "Build all"
+task :default=>[:starter,:library] do
+end

Modified: antargis/trunk/configure
===================================================================
--- antargis/trunk/configure	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/configure	2008-01-31 19:28:04 UTC (rev 1224)
@@ -277,13 +277,19 @@
 	config
 end
 
+def darwin?
+  CONFIG["host_os"]=~/darwin/
+end
+
 def addStandardFallbacks(config,options)
 	if options[:use_fallbacks]
-		dirs=["/usr/include/GL","/usr/include/X11","/usr/X11R6/include"]
+		dirs=["/usr/include/GL"]
+		dirs+=["/usr/include/X11","/usr/X11R6/include"] #unless darwin?
 		config["INCLUDEPATH"]=dirs.inject(""){|str,d|str+" -I"+d}+" -I."
 		config["CFLAGS"]="-dH"
 	
-		dirs=["/usr/lib/GL","/usr/lib/X11","/usr/X11R6/lib"]
+		dirs=["/usr/lib/GL"]
+		dirs+=["/usr/lib/X11","/usr/X11R6/lib"] unless darwin?
 		config["LIBPATH"]=dirs.inject(""){|str,d|str+" -L"+d}
 	end	
 	config
@@ -316,7 +322,7 @@
 end
 
 # FIXME: add check for darwin
-unless CONFIG["host_os"]=~/darwin
+unless CONFIG["host_os"]=~/darwin/
   $LDFLAGS+=" -L/usr/X11R6/lib"
 end
 
@@ -332,6 +338,14 @@
 config=checkFlags(config,userInput)
 config=splitLDFLAGS(config)
 config=splitCFLAGS(config)
+
+if CONFIG["host_os"]=~/darwin/
+ 
+  ["LDSHARED","LDFLAGS","CFLAGS"].each{|name|
+    config[name].value=config[name].value.gsub("-arch ppc","")
+  }
+end
+
 saveConfigurationFile(config)
 runChecks(config)
 

Modified: antargis/trunk/ext/3dengine/headers.hh
===================================================================
--- antargis/trunk/ext/3dengine/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/3dengine/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,62 +1,62 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
 #include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
 #include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
 #include "ext/3dengine/mesh_data.h"
 #include "ext/3dengine/scene_base.h"
 #include "ext/3dengine/scenenode.h"

Modified: antargis/trunk/ext/Rakefile
===================================================================
--- antargis/trunk/ext/Rakefile	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/Rakefile	2008-01-31 19:28:04 UTC (rev 1224)
@@ -350,9 +350,6 @@
 	puts
 end
 
-desc "Build all"
-task :default=>[:library] do
-end
 
 
 task :allclean=>[:clobber_package,:clean] do

Modified: antargis/trunk/ext/basic/headers.hh
===================================================================
--- antargis/trunk/ext/basic/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/basic/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -13,8 +13,8 @@
 #include "ext/basic/ag_xml.h"
 #include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_fs.h"
 #include "ext/basic/ag_utf8.h"
-#include "ext/basic/ag_fs.h"
 #ifdef SWIG
 %include "ext/basic/ag_rubyobj.h"
 %include "ext/basic/ag_messageobject.h"
@@ -28,7 +28,7 @@
 %include "ext/basic/ag_xml.h"
 %include "ext/basic/ag_string_utf8.h"
 %include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_fs.h"
 %include "ext/basic/ag_utf8.h"
-%include "ext/basic/ag_fs.h"
 #endif
 #endif

Modified: antargis/trunk/ext/game/headers.hh
===================================================================
--- antargis/trunk/ext/game/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/game/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,78 +1,78 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_border.h"
+#include "ext/gui/ag_button.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_checkbox.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_combo.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_frame.h"
 #include "ext/gui/ag_image.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_radio.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_table.h"
 #include "ext/gui/ag_text.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_table.h"
-#include "ext/gui/ag_frame.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_layoutfactory.h"
+#include "ext/gui/ag_tooltip.h"
+#include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_window.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_border.h"
+#include "ext/3dengine/ag_glwidget.h"
+#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/anim_mesh_data.h"
 #include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/boa_3d_wireframe.h"
 #include "ext/3dengine/mesh.h"
-#include "ext/3dengine/scene.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/ant_particle.h"
+#include "ext/3dengine/mesh_2d.h"
 #include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/ag_glwidget.h"
-#include "ext/3dengine/mesh_2d.h"
+#include "ext/3dengine/mesh_base.h"
 #include "ext/3dengine/mesh_data.h"
+#include "ext/3dengine/mesh_optimizer.h"
+#include "ext/3dengine/scene.h"
 #include "ext/3dengine/scene_base.h"
-#include "ext/3dengine/boa_3d_wireframe.h"
-#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/scenenode.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/mesh_base.h"
 #include "ext/game/path.h"
 #include "ext/game/terrain.h"
 #include "ext/game/entity.h"

Modified: antargis/trunk/ext/gui/headers.hh
===================================================================
--- antargis/trunk/ext/gui/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/gui/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,35 +1,35 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_color.h"
+#include "ext/video/ag_font.h"
 #include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_video.h"
-#include "ext/video/ag_color.h"
+#include "ext/video/ag_painter.h"
+#include "ext/video/ag_painttarget.h"
+#include "ext/video/ag_rendercontext.h"
 #include "ext/video/ag_screen.h"
-#include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_texturecache.h"
+#include "ext/video/ag_video.h"
 #include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_application.h"

Modified: antargis/trunk/ext/math/headers.hh
===================================================================
--- antargis/trunk/ext/math/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/math/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"

Modified: antargis/trunk/ext/sound/headers.hh
===================================================================
--- antargis/trunk/ext/sound/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/sound/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #ifdef SWIG
 %include "ext/sound/ag_mixer.h"

Modified: antargis/trunk/ext/video/ag_gltexture.cc
===================================================================
--- antargis/trunk/ext/video/ag_gltexture.cc	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/video/ag_gltexture.cc	2008-01-31 19:28:04 UTC (rev 1224)
@@ -124,8 +124,14 @@
     {
       int mw=std::min(surface->w,surface->h);
       int mh=std::max(surface->w,surface->h)/mw;
-      glTexSubImage3D(GL_TEXTURE_3D,0,int(offset[0]),int(offset[1]),0,
+SDL_SaveBMP(surface,"terrain.bmp");
+	cdebug("OFFSET:"<<offset);
+	cdebug("size:"<<mw<<","<<mw<<";"<<mh<<(int)(format==GL_RGBA));
+    glTexSubImage3D(GL_TEXTURE_3D,0,int(offset[0]),int(offset[1]),0,
 		      mw,mw,mh,format,GL_UNSIGNED_BYTE,surface->pixels);
+    std::cout<<("PIXELFORMAT:")<<surface->format<<std::endl;
+//    glTexSubImage3D(GL_TEXTURE_3D,0,int(offset[0]),int(offset[1]),0,
+//		      mw,mw,mh,format,GL_UNSIGNED_BYTE,surface->pixels);
     }
   else
     {

Modified: antargis/trunk/ext/video/ag_texturecache.cc
===================================================================
--- antargis/trunk/ext/video/ag_texturecache.cc	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/video/ag_texturecache.cc	2008-01-31 19:28:04 UTC (rev 1224)
@@ -27,132 +27,132 @@
 AGTextureCache *mTextureCache=0;
 AGTextureCache *getTextureCache()
 {
-  if(!mTextureCache)
-    mTextureCache=new AGTextureCache;
-  return mTextureCache;
+	if(!mTextureCache)
+		mTextureCache=new AGTextureCache;
+	return mTextureCache;
 }
 
 AGTextureCache::AGTextureCache()
 {
-  getInstanceKiller()->reg(createKiller(this));
+	getInstanceKiller()->reg(createKiller(this));
 }
 
 const AGTexture &AGTextureCache::get(const AGFilename &pTexture,const AGRect2 &pSub)
 {
-  std::string s=pTexture+":"+pSub.toString();
+	std::string s=pTexture+":"+pSub.toString();
 
-  std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(s);
-  if(i==mTextures.end())
-    {
-      // load
-      AGSurface ms=AGSurface::load(pTexture).getSubSurface(pSub);
-      
+	std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(s);
+	if(i==mTextures.end())
+	{
+		// load
+		AGSurface ms=AGSurface::load(pTexture).getSubSurface(pSub);
 
 
-      /*      while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
+
+		/*      while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
 	{
 	  ms=ms.scale(ms.width()/2,ms.height()/2);
 	  downScaleExp--;
 	}
-      */
-      mTextures[s]=new AGTexture(ms,false);
-    }
-  return *(mTextures[s]);
+		 */
+		mTextures[s]=new AGTexture(ms,false);
+	}
+	return *(mTextures[s]);
 }
 
 
 const AGTexture &AGTextureCache::get(const AGFilename &pTexture,int downScaleExp)
-  {
-    std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(pTexture);
-    if(i==mTextures.end())
-      {
-        // load
-        AGSurface ms=AGSurface::load(pTexture);
+{
+	std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(pTexture);
+	if(i==mTextures.end())
+	{
+		// load
+		AGSurface ms=AGSurface::load(pTexture);
 
-	while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
-	  {
-	    ms=ms.scale(ms.width()/2,ms.height()/2);
-	    downScaleExp--;
-	  }
+		while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
+		{
+			ms=ms.scale(ms.width()/2,ms.height()/2);
+			downScaleExp--;
+		}
 
-        mTextures[pTexture]=new AGTexture(ms,false);
-      }
-    return *(mTextures[pTexture]);
-  }
+		mTextures[pTexture]=new AGTexture(ms,false);
+	}
+	return *(mTextures[pTexture]);
+}
 
 AGSurface skipHalfTexture(const AGSurface &s)
 {
-  TRACE;
-  if(s.width()>s.height())
-    {
-      int w=s.width();
-      int h=s.height();
-      int nw=w/2;
-      int nh=h;
-      AGSurface n(nw,nh);
+	TRACE;
+	if(s.width()>s.height())
+	{
+		int w=s.width();
+		int h=s.height();
+		int nw=w/2;
+		int nh=h;
+		AGSurface n(nw,nh);
 
-      for(int i=0;i<nw/nh;i++)
+		for(int i=0;i<nw/nh;i++)
+		{
+			for(int y=0;y<nh;y++)
+				for(int x=0;x<nh;x++)
+				{
+					n.putPixel(x+nh*i,y,s.getPixel(x+2*nh*i,y));
+				}
+		}
+
+		return n;
+	}
+	else
 	{
-	  for(int y=0;y<nh;y++)
-	    for(int x=0;x<nh;x++)
-	      {
-		n.putPixel(x+nh*i,y,s.getPixel(x+2*nh*i,y));
-	      }
-	}
+		int w=s.width();
+		int h=s.height();
+		int nw=w;
+		int nh=h/2;
+		AGSurface n(nw,nh);
 
-      return n;
-    }
-  else
-    {
-      int w=s.width();
-      int h=s.height();
-      int nw=w;
-      int nh=h/2;
-      AGSurface n(nw,nh);
+		for(int i=0;i<nh/nw;i++)
+		{
+			for(int y=0;y<nw;y++)
+				for(int x=0;x<nw;x++)
+				{
+					n.putPixel(x,y+nw*i,s.getPixel(x,y+2*nw*i));
+				}
+		}
 
-      for(int i=0;i<nh/nw;i++)
-	{
-	  for(int y=0;y<nw;y++)
-	    for(int x=0;x<nw;x++)
-	      {
-		n.putPixel(x,y+nw*i,s.getPixel(x,y+2*nw*i));
-	      }
+		return n;
 	}
-
-      return n;
-    }
 }
 
 
 const AGTexture &AGTextureCache::get3D(const AGFilename &pTexture,int downScaleExp,int downScaleZ)
 {
-  std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(pTexture);
-  if(i==mTextures.end())
-    {
-      // load
-      AGSurface ms=AGSurface::load(pTexture);
-
-      cdebug("3d texture size old0:"<<ms.width()<<","<<ms.height());
-      
-      while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
+	std::map<AGFilename,AGTexture*>::iterator i=mTextures.find(pTexture);
+	if(i==mTextures.end())
 	{
-	  ms=ms.scale(ms.width()/2,ms.height()/2);
-	  downScaleExp--;
-	}
+		// load
+		AGSurface ms=AGSurface::load(pTexture);
 
-      cdebug("3d texture size old1:"<<ms.width()<<","<<ms.height());
+		cdebug("3d texture size old0:"<<ms.width()<<","<<ms.height());
 
-      while(downScaleZ>1)
-	{
-	  ms=skipHalfTexture(ms);
-	  
-	  downScaleZ--;
-	}
+		while(downScaleExp>1 && ms.width()>16 && ms.height()>16)
+		{
+			ms=ms.scale(ms.width()/2,ms.height()/2);
+			downScaleExp--;
+		}
 
-      cdebug("3d texture size:"<<ms.width()<<","<<ms.height());
+		cdebug("3d texture size old1:"<<ms.width()<<","<<ms.height());
 
-      
-      mTextures[pTexture]=new AGTexture(ms,true);
-    }
-  return *(mTextures[pTexture]);
+		while(downScaleZ>1)
+		{
+			ms=skipHalfTexture(ms);
+
+			downScaleZ--;
+		}
+
+		cdebug("3d texture size:"<<ms.width()<<","<<ms.height());
+
+
+		mTextures[pTexture]=new AGTexture(ms,true);
+	}
+	return *(mTextures[pTexture]);
 }

Modified: antargis/trunk/ext/video/headers.hh
===================================================================
--- antargis/trunk/ext/video/headers.hh	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/ext/video/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,22 +1,22 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_config.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_main.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rand_base.h"
+#include "ext/basic/ag_rubyobj.h"
+#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_config.h"
 #include "ext/basic/ag_string_utf8.h"
-#include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_serial.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_geometry.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_messageobject.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_algebra.h"
 #include "ext/math/ag_rand.h"
-#include "ext/math/ag_algebra.h"
 #include "ext/math/ant_frustum.h"
 #include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"

Modified: antargis/trunk/main/Rakefile
===================================================================
--- antargis/trunk/main/Rakefile	2008-01-30 19:28:52 UTC (rev 1223)
+++ antargis/trunk/main/Rakefile	2008-01-31 19:28:04 UTC (rev 1224)
@@ -1,11 +1,16 @@
+require 'rake/clean.rb'
+
+
 Dir.chdir(File.split(File.split(__FILE__)[0])[0])
-require 'antconfig.rb'
 
 
 task 'starter'=>"main/starter.cc" do
+	require 'antconfig.rb'
 	cmd="g++ -o starter main/starter.cc "+$CONFIG["CFLAGS"]+" "+$CONFIG["INCLUDEPATH"]+" "+`sdl-config --libs`.chomp+" -lruby"
 	cmd.gsub!("-arch ppc","")
 	sh cmd
 end
 
-task :default=>'starter'
\ No newline at end of file
+#task :starter=>'starter'
+
+CLEAN << Dir["starter"]
\ No newline at end of file



From davidkamphausen at mail.berlios.de  Thu Jan 31 21:08:49 2008
From: davidkamphausen at mail.berlios.de (davidkamphausen at BerliOS)
Date: Thu, 31 Jan 2008 21:08:49 +0100
Subject: [Antargis-svn] r1225 - in antargis/trunk: ext/3dengine ext/basic
	ext/game ext/gui ext/math ext/sound ext/video main
Message-ID: <200801312008.m0VK8n9h001081@sheep.berlios.de>

Author: davidkamphausen
Date: 2008-01-31 21:08:48 +0100 (Thu, 31 Jan 2008)
New Revision: 1225

Modified:
   antargis/trunk/ext/3dengine/headers.hh
   antargis/trunk/ext/basic/headers.hh
   antargis/trunk/ext/game/headers.hh
   antargis/trunk/ext/gui/headers.hh
   antargis/trunk/ext/math/headers.hh
   antargis/trunk/ext/sound/headers.hh
   antargis/trunk/ext/video/headers.hh
   antargis/trunk/main/Rakefile
   antargis/trunk/main/starter.cc
Log:
* 2 fixes for linux


Modified: antargis/trunk/ext/3dengine/headers.hh
===================================================================
--- antargis/trunk/ext/3dengine/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/3dengine/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,62 +1,62 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_frame.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_image.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_tooltip.h"
 #include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_checkbox.h"
 #include "ext/gui/ag_table.h"
-#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_window.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_border.h"
 #include "ext/3dengine/mesh_data.h"
 #include "ext/3dengine/scene_base.h"
 #include "ext/3dengine/scenenode.h"

Modified: antargis/trunk/ext/basic/headers.hh
===================================================================
--- antargis/trunk/ext/basic/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/basic/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -13,8 +13,8 @@
 #include "ext/basic/ag_xml.h"
 #include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
+#include "ext/basic/ag_utf8.h"
 #include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_utf8.h"
 #ifdef SWIG
 %include "ext/basic/ag_rubyobj.h"
 %include "ext/basic/ag_messageobject.h"
@@ -28,7 +28,7 @@
 %include "ext/basic/ag_xml.h"
 %include "ext/basic/ag_string_utf8.h"
 %include "ext/basic/ag_stringstream.h"
+%include "ext/basic/ag_utf8.h"
 %include "ext/basic/ag_fs.h"
-%include "ext/basic/ag_utf8.h"
 #endif
 #endif

Modified: antargis/trunk/ext/game/headers.hh
===================================================================
--- antargis/trunk/ext/game/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/game/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,78 +1,78 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
-#include "ext/gui/ag_application.h"
-#include "ext/gui/ag_background.h"
-#include "ext/gui/ag_border.h"
-#include "ext/gui/ag_button.h"
-#include "ext/gui/ag_caption.h"
-#include "ext/gui/ag_checkbox.h"
-#include "ext/gui/ag_colorbutton.h"
-#include "ext/gui/ag_combo.h"
-#include "ext/gui/ag_edit.h"
-#include "ext/gui/ag_frame.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_image.h"
-#include "ext/gui/ag_layout.h"
-#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_listbox.h"
+#include "ext/gui/ag_edit.h"
+#include "ext/gui/ag_scroller.h"
 #include "ext/gui/ag_local.h"
-#include "ext/gui/ag_menu.h"
-#include "ext/gui/ag_menuitem.h"
+#include "ext/gui/ag_tooltip.h"
 #include "ext/gui/ag_radio.h"
+#include "ext/gui/ag_application.h"
+#include "ext/gui/ag_colorbutton.h"
+#include "ext/gui/ag_button.h"
 #include "ext/gui/ag_radiogroup.h"
+#include "ext/gui/ag_background.h"
+#include "ext/gui/ag_menuitem.h"
 #include "ext/gui/ag_screenwidget.h"
-#include "ext/gui/ag_scroller.h"
+#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_checkbox.h"
 #include "ext/gui/ag_table.h"
-#include "ext/gui/ag_text.h"
+#include "ext/gui/ag_frame.h"
+#include "ext/gui/ag_caption.h"
+#include "ext/gui/ag_combo.h"
 #include "ext/gui/ag_theme.h"
-#include "ext/gui/ag_tooltip.h"
-#include "ext/gui/ag_widget.h"
+#include "ext/gui/ag_menu.h"
+#include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_window.h"
-#include "ext/3dengine/ag_glwidget.h"
-#include "ext/3dengine/anim_mesh.h"
+#include "ext/gui/ag_layout.h"
+#include "ext/gui/ag_border.h"
 #include "ext/3dengine/anim_mesh_data.h"
 #include "ext/3dengine/ant_camera.h"
+#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/scene.h"
+#include "ext/3dengine/mesh_optimizer.h"
 #include "ext/3dengine/ant_particle.h"
-#include "ext/3dengine/ant_projection.h"
-#include "ext/3dengine/boa_3d_wireframe.h"
-#include "ext/3dengine/mesh.h"
+#include "ext/3dengine/mesh_2d_data.h"
+#include "ext/3dengine/ag_glwidget.h"
 #include "ext/3dengine/mesh_2d.h"
-#include "ext/3dengine/mesh_2d_data.h"
-#include "ext/3dengine/mesh_base.h"
 #include "ext/3dengine/mesh_data.h"
-#include "ext/3dengine/mesh_optimizer.h"
-#include "ext/3dengine/scene.h"
 #include "ext/3dengine/scene_base.h"
+#include "ext/3dengine/boa_3d_wireframe.h"
+#include "ext/3dengine/anim_mesh.h"
 #include "ext/3dengine/scenenode.h"
+#include "ext/3dengine/ant_projection.h"
+#include "ext/3dengine/mesh_base.h"
 #include "ext/game/path.h"
 #include "ext/game/terrain.h"
 #include "ext/game/entity.h"

Modified: antargis/trunk/ext/gui/headers.hh
===================================================================
--- antargis/trunk/ext/gui/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/gui/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,35 +1,35 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
+#include "ext/video/ag_rendercontext.h"
+#include "ext/video/ag_texturecache.h"
 #include "ext/video/ag_clip.h"
+#include "ext/video/ag_fontengine.h"
+#include "ext/video/ag_font.h"
+#include "ext/video/ag_video.h"
 #include "ext/video/ag_color.h"
-#include "ext/video/ag_font.h"
-#include "ext/video/ag_fontengine.h"
-#include "ext/video/ag_painter.h"
+#include "ext/video/ag_screen.h"
 #include "ext/video/ag_painttarget.h"
-#include "ext/video/ag_rendercontext.h"
-#include "ext/video/ag_screen.h"
 #include "ext/video/ag_surface.h"
 #include "ext/video/ag_texture.h"
-#include "ext/video/ag_texturecache.h"
-#include "ext/video/ag_video.h"
+#include "ext/video/ag_painter.h"
 #include "ext/gui/ag_layoutfactory.h"
 #include "ext/gui/ag_widget.h"
 #include "ext/gui/ag_application.h"

Modified: antargis/trunk/ext/math/headers.hh
===================================================================
--- antargis/trunk/ext/math/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/math/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"

Modified: antargis/trunk/ext/sound/headers.hh
===================================================================
--- antargis/trunk/ext/sound/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/sound/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,19 +1,19 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
 #ifdef SWIG
 %include "ext/sound/ag_mixer.h"

Modified: antargis/trunk/ext/video/headers.hh
===================================================================
--- antargis/trunk/ext/video/headers.hh	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/ext/video/headers.hh	2008-01-31 20:08:48 UTC (rev 1225)
@@ -1,22 +1,22 @@
 #ifndef __ANTARGIS_H__
 #define __ANTARGIS_H__
+#include "ext/basic/ag_main.h"
+#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_singleton.h"
 #include "ext/basic/ag_config.h"
-#include "ext/basic/ag_fs.h"
-#include "ext/basic/ag_geometry.h"
-#include "ext/basic/ag_main.h"
-#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_rand_base.h"
-#include "ext/basic/ag_rubyobj.h"
 #include "ext/basic/ag_serial.h"
-#include "ext/basic/ag_singleton.h"
-#include "ext/basic/ag_string_utf8.h"
 #include "ext/basic/ag_stringstream.h"
-#include "ext/basic/ag_utf8.h"
+#include "ext/basic/ag_geometry.h"
 #include "ext/basic/ag_video_base.h"
 #include "ext/basic/ag_xml.h"
+#include "ext/basic/ag_fs.h"
+#include "ext/basic/ag_messageobject.h"
+#include "ext/basic/ag_rubyobj.h"
 #include "ext/sound/ag_mixer.h"
+#include "ext/math/ag_rand.h"
 #include "ext/math/ag_algebra.h"
-#include "ext/math/ag_rand.h"
 #include "ext/math/ant_frustum.h"
 #include "ext/video/ag_painttarget.h"
 #include "ext/video/ag_surface.h"

Modified: antargis/trunk/main/Rakefile
===================================================================
--- antargis/trunk/main/Rakefile	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/main/Rakefile	2008-01-31 20:08:48 UTC (rev 1225)
@@ -6,7 +6,7 @@
 
 task 'starter'=>"main/starter.cc" do
 	require 'antconfig.rb'
-	cmd="g++ -o starter main/starter.cc "+$CONFIG["CFLAGS"]+" "+$CONFIG["INCLUDEPATH"]+" "+`sdl-config --libs`.chomp+" -lruby"
+	cmd="g++ -o starter main/starter.cc "+$CONFIG["CFLAGS"]+" "+$CONFIG["INCLUDEPATH"]+" "+`sdl-config --libs`.chomp+" -l"+CONFIG["RUBY_SO_NAME"]
 	cmd.gsub!("-arch ppc","")
 	sh cmd
 end

Modified: antargis/trunk/main/starter.cc
===================================================================
--- antargis/trunk/main/starter.cc	2008-01-31 19:28:04 UTC (rev 1224)
+++ antargis/trunk/main/starter.cc	2008-01-31 20:08:48 UTC (rev 1225)
@@ -10,4 +10,4 @@
 	//rb_load_file("antargis");
 	ruby_run();
 	return 0;
-}
\ No newline at end of file
+}



